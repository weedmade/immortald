{
  "version": 3,
  "sources": ["../node_modules/@grpc/grpc-js/build/src/constants.js", "../node_modules/@grpc/grpc-js/build/src/logging.js", "../node_modules/@grpc/grpc-js/build/src/error.js", "../node_modules/@grpc/grpc-js/build/src/metadata.js", "../node_modules/@grpc/grpc-js/build/src/call-credentials.js", "../node_modules/@grpc/grpc-js/build/src/tls-helpers.js", "../node_modules/@grpc/grpc-js/build/src/channel-credentials.js", "../node_modules/@grpc/grpc-js/build/src/load-balancer.js", "../node_modules/@grpc/grpc-js/build/src/service-config.js", "../node_modules/@grpc/grpc-js/build/src/connectivity-state.js", "../node_modules/@grpc/grpc-js/build/src/uri-parser.js", "../node_modules/@grpc/grpc-js/build/src/resolver.js", "../node_modules/@grpc/grpc-js/build/src/picker.js", "../node_modules/@grpc/grpc-js/build/src/backoff-timeout.js", "../node_modules/@grpc/grpc-js/build/src/load-balancer-child-handler.js", "../node_modules/@grpc/grpc-js/build/src/resolving-load-balancer.js", "../node_modules/@grpc/grpc-js/build/src/channel-options.js", "../node_modules/@grpc/grpc-js/build/src/subchannel-address.js", "../node_modules/@js-sdsl/ordered-map/dist/cjs/index.js", "../node_modules/@grpc/grpc-js/build/src/admin.js", "../node_modules/@grpc/grpc-js/build/src/call.js", "../node_modules/@grpc/grpc-js/build/src/call-interface.js", "../node_modules/@grpc/grpc-js/build/src/client-interceptors.js", "../node_modules/@grpc/grpc-js/build/src/client.js", "../node_modules/@grpc/grpc-js/build/src/make-client.js", "../node_modules/lodash.camelcase/index.js", "../node_modules/@protobufjs/aspromise/index.js", "../node_modules/@protobufjs/base64/index.js", "../node_modules/@protobufjs/eventemitter/index.js", "../node_modules/@protobufjs/float/index.js", "../node_modules/@protobufjs/inquire/index.js", "../node_modules/@protobufjs/utf8/index.js", "../node_modules/@protobufjs/pool/index.js", "../node_modules/protobufjs/src/util/longbits.js", "../node_modules/protobufjs/src/util/minimal.js", "../node_modules/protobufjs/src/writer.js", "../node_modules/protobufjs/src/writer_buffer.js", "../node_modules/protobufjs/src/reader.js", "../node_modules/protobufjs/src/reader_buffer.js", "../node_modules/protobufjs/src/rpc/service.js", "../node_modules/protobufjs/src/rpc.js", "../node_modules/protobufjs/src/roots.js", "../node_modules/protobufjs/src/index-minimal.js", "../node_modules/@protobufjs/codegen/index.js", "../node_modules/@protobufjs/fetch/index.js", "../node_modules/@protobufjs/path/index.js", "../node_modules/protobufjs/src/types.js", "../node_modules/protobufjs/src/field.js", "../node_modules/protobufjs/src/oneof.js", "../node_modules/protobufjs/src/namespace.js", "../node_modules/protobufjs/src/mapfield.js", "../node_modules/protobufjs/src/method.js", "../node_modules/protobufjs/src/service.js", "../node_modules/protobufjs/src/message.js", "../node_modules/protobufjs/src/decoder.js", "../node_modules/protobufjs/src/verifier.js", "../node_modules/protobufjs/src/converter.js", "../node_modules/protobufjs/src/wrappers.js", "../node_modules/protobufjs/src/type.js", "../node_modules/protobufjs/src/root.js", "../node_modules/protobufjs/src/util.js", "../node_modules/protobufjs/src/object.js", "../node_modules/protobufjs/src/enum.js", "../node_modules/protobufjs/src/encoder.js", "../node_modules/protobufjs/src/index-light.js", "../node_modules/protobufjs/src/tokenize.js", "../node_modules/protobufjs/src/parse.js", "../node_modules/protobufjs/src/common.js", "../node_modules/protobufjs/src/index.js", "../node_modules/protobufjs/ext/descriptor/index.js", "../node_modules/@grpc/proto-loader/build/src/util.js", "../node_modules/long/umd/index.js", "../node_modules/@grpc/proto-loader/build/src/index.js", "../node_modules/@grpc/grpc-js/build/src/channelz.js", "../node_modules/@grpc/grpc-js/build/src/subchannel.js", "../node_modules/@grpc/grpc-js/build/src/environment.js", "../node_modules/@grpc/grpc-js/build/src/resolver-dns.js", "../node_modules/@grpc/grpc-js/build/src/http_proxy.js", "../node_modules/@grpc/grpc-js/build/src/stream-decoder.js", "../node_modules/@grpc/grpc-js/build/src/subchannel-call.js", "../node_modules/@grpc/grpc-js/build/src/call-number.js", "../node_modules/@grpc/grpc-js/build/src/transport.js", "../node_modules/@grpc/grpc-js/build/src/subchannel-pool.js", "../node_modules/@grpc/grpc-js/build/src/filter-stack.js", "../node_modules/@grpc/grpc-js/build/src/compression-algorithms.js", "../node_modules/@grpc/grpc-js/build/src/filter.js", "../node_modules/@grpc/grpc-js/build/src/compression-filter.js", "../node_modules/@grpc/grpc-js/build/src/deadline.js", "../node_modules/@grpc/grpc-js/build/src/control-plane-status.js", "../node_modules/@grpc/grpc-js/build/src/load-balancing-call.js", "../node_modules/@grpc/grpc-js/build/src/resolving-call.js", "../node_modules/@grpc/grpc-js/build/src/retrying-call.js", "../node_modules/@grpc/grpc-js/build/src/subchannel-interface.js", "../node_modules/@grpc/grpc-js/build/src/internal-channel.js", "../node_modules/@grpc/grpc-js/build/src/channel.js", "../node_modules/@grpc/grpc-js/build/src/server-call.js", "../node_modules/@grpc/grpc-js/build/src/server-credentials.js", "../node_modules/@grpc/grpc-js/build/src/server-interceptors.js", "../node_modules/@grpc/grpc-js/build/src/server.js", "../node_modules/@grpc/grpc-js/build/src/status-builder.js", "../node_modules/@grpc/grpc-js/build/src/duration.js", "../node_modules/@grpc/grpc-js/build/src/load-balancer-pick-first.js", "../node_modules/@grpc/grpc-js/build/src/certificate-provider.js", "../node_modules/@grpc/grpc-js/build/src/experimental.js", "../node_modules/@grpc/grpc-js/build/src/resolver-uds.js", "../node_modules/@grpc/grpc-js/build/src/resolver-ip.js", "../node_modules/@grpc/grpc-js/build/src/load-balancer-round-robin.js", "../node_modules/@grpc/grpc-js/build/src/load-balancer-outlier-detection.js", "../node_modules/@grpc/grpc-js/build/src/index.js", "../src/p2p/client.ts", "../src/utils/logger.ts"],
  "sourcesContent": [
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH = exports.DEFAULT_MAX_SEND_MESSAGE_LENGTH = exports.Propagate = exports.LogVerbosity = exports.Status = void 0;\nvar Status;\n(function (Status) {\n    Status[Status[\"OK\"] = 0] = \"OK\";\n    Status[Status[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    Status[Status[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    Status[Status[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    Status[Status[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    Status[Status[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    Status[Status[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    Status[Status[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    Status[Status[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    Status[Status[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    Status[Status[\"ABORTED\"] = 10] = \"ABORTED\";\n    Status[Status[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    Status[Status[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    Status[Status[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    Status[Status[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    Status[Status[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n    Status[Status[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n})(Status || (exports.Status = Status = {}));\nvar LogVerbosity;\n(function (LogVerbosity) {\n    LogVerbosity[LogVerbosity[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogVerbosity[LogVerbosity[\"INFO\"] = 1] = \"INFO\";\n    LogVerbosity[LogVerbosity[\"ERROR\"] = 2] = \"ERROR\";\n    LogVerbosity[LogVerbosity[\"NONE\"] = 3] = \"NONE\";\n})(LogVerbosity || (exports.LogVerbosity = LogVerbosity = {}));\n/**\n * NOTE: This enum is not currently used in any implemented API in this\n * library. It is included only for type parity with the other implementation.\n */\nvar Propagate;\n(function (Propagate) {\n    Propagate[Propagate[\"DEADLINE\"] = 1] = \"DEADLINE\";\n    Propagate[Propagate[\"CENSUS_STATS_CONTEXT\"] = 2] = \"CENSUS_STATS_CONTEXT\";\n    Propagate[Propagate[\"CENSUS_TRACING_CONTEXT\"] = 4] = \"CENSUS_TRACING_CONTEXT\";\n    Propagate[Propagate[\"CANCELLATION\"] = 8] = \"CANCELLATION\";\n    // https://github.com/grpc/grpc/blob/master/include/grpc/impl/codegen/propagation_bits.h#L43\n    Propagate[Propagate[\"DEFAULTS\"] = 65535] = \"DEFAULTS\";\n})(Propagate || (exports.Propagate = Propagate = {}));\n// -1 means unlimited\nexports.DEFAULT_MAX_SEND_MESSAGE_LENGTH = -1;\n// 4 MB default\nexports.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH = 4 * 1024 * 1024;\n//# sourceMappingURL=constants.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.log = exports.setLoggerVerbosity = exports.setLogger = exports.getLogger = void 0;\nexports.trace = trace;\nexports.isTracerEnabled = isTracerEnabled;\nconst constants_1 = require(\"./constants\");\nconst process_1 = require(\"process\");\nconst clientVersion = require('../../package.json').version;\nconst DEFAULT_LOGGER = {\n    error: (message, ...optionalParams) => {\n        console.error('E ' + message, ...optionalParams);\n    },\n    info: (message, ...optionalParams) => {\n        console.error('I ' + message, ...optionalParams);\n    },\n    debug: (message, ...optionalParams) => {\n        console.error('D ' + message, ...optionalParams);\n    },\n};\nlet _logger = DEFAULT_LOGGER;\nlet _logVerbosity = constants_1.LogVerbosity.ERROR;\nconst verbosityString = (_b = (_a = process.env.GRPC_NODE_VERBOSITY) !== null && _a !== void 0 ? _a : process.env.GRPC_VERBOSITY) !== null && _b !== void 0 ? _b : '';\nswitch (verbosityString.toUpperCase()) {\n    case 'DEBUG':\n        _logVerbosity = constants_1.LogVerbosity.DEBUG;\n        break;\n    case 'INFO':\n        _logVerbosity = constants_1.LogVerbosity.INFO;\n        break;\n    case 'ERROR':\n        _logVerbosity = constants_1.LogVerbosity.ERROR;\n        break;\n    case 'NONE':\n        _logVerbosity = constants_1.LogVerbosity.NONE;\n        break;\n    default:\n    // Ignore any other values\n}\nconst getLogger = () => {\n    return _logger;\n};\nexports.getLogger = getLogger;\nconst setLogger = (logger) => {\n    _logger = logger;\n};\nexports.setLogger = setLogger;\nconst setLoggerVerbosity = (verbosity) => {\n    _logVerbosity = verbosity;\n};\nexports.setLoggerVerbosity = setLoggerVerbosity;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst log = (severity, ...args) => {\n    let logFunction;\n    if (severity >= _logVerbosity) {\n        switch (severity) {\n            case constants_1.LogVerbosity.DEBUG:\n                logFunction = _logger.debug;\n                break;\n            case constants_1.LogVerbosity.INFO:\n                logFunction = _logger.info;\n                break;\n            case constants_1.LogVerbosity.ERROR:\n                logFunction = _logger.error;\n                break;\n        }\n        /* Fall back to _logger.error when other methods are not available for\n         * compatiblity with older behavior that always logged to _logger.error */\n        if (!logFunction) {\n            logFunction = _logger.error;\n        }\n        if (logFunction) {\n            logFunction.bind(_logger)(...args);\n        }\n    }\n};\nexports.log = log;\nconst tracersString = (_d = (_c = process.env.GRPC_NODE_TRACE) !== null && _c !== void 0 ? _c : process.env.GRPC_TRACE) !== null && _d !== void 0 ? _d : '';\nconst enabledTracers = new Set();\nconst disabledTracers = new Set();\nfor (const tracerName of tracersString.split(',')) {\n    if (tracerName.startsWith('-')) {\n        disabledTracers.add(tracerName.substring(1));\n    }\n    else {\n        enabledTracers.add(tracerName);\n    }\n}\nconst allEnabled = enabledTracers.has('all');\nfunction trace(severity, tracer, text) {\n    if (isTracerEnabled(tracer)) {\n        (0, exports.log)(severity, new Date().toISOString() +\n            ' | v' +\n            clientVersion +\n            ' ' +\n            process_1.pid +\n            ' | ' +\n            tracer +\n            ' | ' +\n            text);\n    }\n}\nfunction isTracerEnabled(tracer) {\n    return (!disabledTracers.has(tracer) && (allEnabled || enabledTracers.has(tracer)));\n}\n//# sourceMappingURL=logging.js.map",
    "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorMessage = getErrorMessage;\nexports.getErrorCode = getErrorCode;\nfunction getErrorMessage(error) {\n    if (error instanceof Error) {\n        return error.message;\n    }\n    else {\n        return String(error);\n    }\n}\nfunction getErrorCode(error) {\n    if (typeof error === 'object' &&\n        error !== null &&\n        'code' in error &&\n        typeof error.code === 'number') {\n        return error.code;\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=error.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Metadata = void 0;\nconst logging_1 = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst error_1 = require(\"./error\");\nconst LEGAL_KEY_REGEX = /^[0-9a-z_.-]+$/;\nconst LEGAL_NON_BINARY_VALUE_REGEX = /^[ -~]*$/;\nfunction isLegalKey(key) {\n    return LEGAL_KEY_REGEX.test(key);\n}\nfunction isLegalNonBinaryValue(value) {\n    return LEGAL_NON_BINARY_VALUE_REGEX.test(value);\n}\nfunction isBinaryKey(key) {\n    return key.endsWith('-bin');\n}\nfunction isCustomMetadata(key) {\n    return !key.startsWith('grpc-');\n}\nfunction normalizeKey(key) {\n    return key.toLowerCase();\n}\nfunction validate(key, value) {\n    if (!isLegalKey(key)) {\n        throw new Error('Metadata key \"' + key + '\" contains illegal characters');\n    }\n    if (value !== null && value !== undefined) {\n        if (isBinaryKey(key)) {\n            if (!Buffer.isBuffer(value)) {\n                throw new Error(\"keys that end with '-bin' must have Buffer values\");\n            }\n        }\n        else {\n            if (Buffer.isBuffer(value)) {\n                throw new Error(\"keys that don't end with '-bin' must have String values\");\n            }\n            if (!isLegalNonBinaryValue(value)) {\n                throw new Error('Metadata string value \"' + value + '\" contains illegal characters');\n            }\n        }\n    }\n}\n/**\n * A class for storing metadata. Keys are normalized to lowercase ASCII.\n */\nclass Metadata {\n    constructor(options = {}) {\n        this.internalRepr = new Map();\n        this.options = options;\n    }\n    /**\n     * Sets the given value for the given key by replacing any other values\n     * associated with that key. Normalizes the key.\n     * @param key The key to whose value should be set.\n     * @param value The value to set. Must be a buffer if and only\n     *   if the normalized key ends with '-bin'.\n     */\n    set(key, value) {\n        key = normalizeKey(key);\n        validate(key, value);\n        this.internalRepr.set(key, [value]);\n    }\n    /**\n     * Adds the given value for the given key by appending to a list of previous\n     * values associated with that key. Normalizes the key.\n     * @param key The key for which a new value should be appended.\n     * @param value The value to add. Must be a buffer if and only\n     *   if the normalized key ends with '-bin'.\n     */\n    add(key, value) {\n        key = normalizeKey(key);\n        validate(key, value);\n        const existingValue = this.internalRepr.get(key);\n        if (existingValue === undefined) {\n            this.internalRepr.set(key, [value]);\n        }\n        else {\n            existingValue.push(value);\n        }\n    }\n    /**\n     * Removes the given key and any associated values. Normalizes the key.\n     * @param key The key whose values should be removed.\n     */\n    remove(key) {\n        key = normalizeKey(key);\n        // validate(key);\n        this.internalRepr.delete(key);\n    }\n    /**\n     * Gets a list of all values associated with the key. Normalizes the key.\n     * @param key The key whose value should be retrieved.\n     * @return A list of values associated with the given key.\n     */\n    get(key) {\n        key = normalizeKey(key);\n        // validate(key);\n        return this.internalRepr.get(key) || [];\n    }\n    /**\n     * Gets a plain object mapping each key to the first value associated with it.\n     * This reflects the most common way that people will want to see metadata.\n     * @return A key/value mapping of the metadata.\n     */\n    getMap() {\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            if (values.length > 0) {\n                const v = values[0];\n                result[key] = Buffer.isBuffer(v) ? Buffer.from(v) : v;\n            }\n        }\n        return result;\n    }\n    /**\n     * Clones the metadata object.\n     * @return The newly cloned object.\n     */\n    clone() {\n        const newMetadata = new Metadata(this.options);\n        const newInternalRepr = newMetadata.internalRepr;\n        for (const [key, value] of this.internalRepr) {\n            const clonedValue = value.map(v => {\n                if (Buffer.isBuffer(v)) {\n                    return Buffer.from(v);\n                }\n                else {\n                    return v;\n                }\n            });\n            newInternalRepr.set(key, clonedValue);\n        }\n        return newMetadata;\n    }\n    /**\n     * Merges all key-value pairs from a given Metadata object into this one.\n     * If both this object and the given object have values in the same key,\n     * values from the other Metadata object will be appended to this object's\n     * values.\n     * @param other A Metadata object.\n     */\n    merge(other) {\n        for (const [key, values] of other.internalRepr) {\n            const mergedValue = (this.internalRepr.get(key) || []).concat(values);\n            this.internalRepr.set(key, mergedValue);\n        }\n    }\n    setOptions(options) {\n        this.options = options;\n    }\n    getOptions() {\n        return this.options;\n    }\n    /**\n     * Creates an OutgoingHttpHeaders object that can be used with the http2 API.\n     */\n    toHttp2Headers() {\n        // NOTE: Node <8.9 formats http2 headers incorrectly.\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            // We assume that the user's interaction with this object is limited to\n            // through its public API (i.e. keys and values are already validated).\n            result[key] = values.map(bufToString);\n        }\n        return result;\n    }\n    /**\n     * This modifies the behavior of JSON.stringify to show an object\n     * representation of the metadata map.\n     */\n    toJSON() {\n        const result = {};\n        for (const [key, values] of this.internalRepr) {\n            result[key] = values;\n        }\n        return result;\n    }\n    /**\n     * Returns a new Metadata object based fields in a given IncomingHttpHeaders\n     * object.\n     * @param headers An IncomingHttpHeaders object.\n     */\n    static fromHttp2Headers(headers) {\n        const result = new Metadata();\n        for (const key of Object.keys(headers)) {\n            // Reserved headers (beginning with `:`) are not valid keys.\n            if (key.charAt(0) === ':') {\n                continue;\n            }\n            const values = headers[key];\n            try {\n                if (isBinaryKey(key)) {\n                    if (Array.isArray(values)) {\n                        values.forEach(value => {\n                            result.add(key, Buffer.from(value, 'base64'));\n                        });\n                    }\n                    else if (values !== undefined) {\n                        if (isCustomMetadata(key)) {\n                            values.split(',').forEach(v => {\n                                result.add(key, Buffer.from(v.trim(), 'base64'));\n                            });\n                        }\n                        else {\n                            result.add(key, Buffer.from(values, 'base64'));\n                        }\n                    }\n                }\n                else {\n                    if (Array.isArray(values)) {\n                        values.forEach(value => {\n                            result.add(key, value);\n                        });\n                    }\n                    else if (values !== undefined) {\n                        result.add(key, values);\n                    }\n                }\n            }\n            catch (error) {\n                const message = `Failed to add metadata entry ${key}: ${values}. ${(0, error_1.getErrorMessage)(error)}. For more information see https://github.com/grpc/grpc-node/issues/1173`;\n                (0, logging_1.log)(constants_1.LogVerbosity.ERROR, message);\n            }\n        }\n        return result;\n    }\n}\nexports.Metadata = Metadata;\nconst bufToString = (val) => {\n    return Buffer.isBuffer(val) ? val.toString('base64') : val;\n};\n//# sourceMappingURL=metadata.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallCredentials = void 0;\nconst metadata_1 = require(\"./metadata\");\nfunction isCurrentOauth2Client(client) {\n    return ('getRequestHeaders' in client &&\n        typeof client.getRequestHeaders === 'function');\n}\n/**\n * A class that represents a generic method of adding authentication-related\n * metadata on a per-request basis.\n */\nclass CallCredentials {\n    /**\n     * Creates a new CallCredentials object from a given function that generates\n     * Metadata objects.\n     * @param metadataGenerator A function that accepts a set of options, and\n     * generates a Metadata object based on these options, which is passed back\n     * to the caller via a supplied (err, metadata) callback.\n     */\n    static createFromMetadataGenerator(metadataGenerator) {\n        return new SingleCallCredentials(metadataGenerator);\n    }\n    /**\n     * Create a gRPC credential from a Google credential object.\n     * @param googleCredentials The authentication client to use.\n     * @return The resulting CallCredentials object.\n     */\n    static createFromGoogleCredential(googleCredentials) {\n        return CallCredentials.createFromMetadataGenerator((options, callback) => {\n            let getHeaders;\n            if (isCurrentOauth2Client(googleCredentials)) {\n                getHeaders = googleCredentials.getRequestHeaders(options.service_url);\n            }\n            else {\n                getHeaders = new Promise((resolve, reject) => {\n                    googleCredentials.getRequestMetadata(options.service_url, (err, headers) => {\n                        if (err) {\n                            reject(err);\n                            return;\n                        }\n                        if (!headers) {\n                            reject(new Error('Headers not set by metadata plugin'));\n                            return;\n                        }\n                        resolve(headers);\n                    });\n                });\n            }\n            getHeaders.then(headers => {\n                const metadata = new metadata_1.Metadata();\n                for (const key of Object.keys(headers)) {\n                    metadata.add(key, headers[key]);\n                }\n                callback(null, metadata);\n            }, err => {\n                callback(err);\n            });\n        });\n    }\n    static createEmpty() {\n        return new EmptyCallCredentials();\n    }\n}\nexports.CallCredentials = CallCredentials;\nclass ComposedCallCredentials extends CallCredentials {\n    constructor(creds) {\n        super();\n        this.creds = creds;\n    }\n    async generateMetadata(options) {\n        const base = new metadata_1.Metadata();\n        const generated = await Promise.all(this.creds.map(cred => cred.generateMetadata(options)));\n        for (const gen of generated) {\n            base.merge(gen);\n        }\n        return base;\n    }\n    compose(other) {\n        return new ComposedCallCredentials(this.creds.concat([other]));\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof ComposedCallCredentials) {\n            return this.creds.every((value, index) => value._equals(other.creds[index]));\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass SingleCallCredentials extends CallCredentials {\n    constructor(metadataGenerator) {\n        super();\n        this.metadataGenerator = metadataGenerator;\n    }\n    generateMetadata(options) {\n        return new Promise((resolve, reject) => {\n            this.metadataGenerator(options, (err, metadata) => {\n                if (metadata !== undefined) {\n                    resolve(metadata);\n                }\n                else {\n                    reject(err);\n                }\n            });\n        });\n    }\n    compose(other) {\n        return new ComposedCallCredentials([this, other]);\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof SingleCallCredentials) {\n            return this.metadataGenerator === other.metadataGenerator;\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass EmptyCallCredentials extends CallCredentials {\n    generateMetadata(options) {\n        return Promise.resolve(new metadata_1.Metadata());\n    }\n    compose(other) {\n        return other;\n    }\n    _equals(other) {\n        return other instanceof EmptyCallCredentials;\n    }\n}\n//# sourceMappingURL=call-credentials.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CIPHER_SUITES = void 0;\nexports.getDefaultRootsData = getDefaultRootsData;\nconst fs = require(\"fs\");\nexports.CIPHER_SUITES = process.env.GRPC_SSL_CIPHER_SUITES;\nconst DEFAULT_ROOTS_FILE_PATH = process.env.GRPC_DEFAULT_SSL_ROOTS_FILE_PATH;\nlet defaultRootsData = null;\nfunction getDefaultRootsData() {\n    if (DEFAULT_ROOTS_FILE_PATH) {\n        if (defaultRootsData === null) {\n            defaultRootsData = fs.readFileSync(DEFAULT_ROOTS_FILE_PATH);\n        }\n        return defaultRootsData;\n    }\n    return null;\n}\n//# sourceMappingURL=tls-helpers.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChannelCredentials = void 0;\nexports.createCertificateProviderChannelCredentials = createCertificateProviderChannelCredentials;\nconst tls_1 = require(\"tls\");\nconst call_credentials_1 = require(\"./call-credentials\");\nconst tls_helpers_1 = require(\"./tls-helpers\");\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction verifyIsBufferOrNull(obj, friendlyName) {\n    if (obj && !(obj instanceof Buffer)) {\n        throw new TypeError(`${friendlyName}, if provided, must be a Buffer.`);\n    }\n}\n/**\n * A class that contains credentials for communicating over a channel, as well\n * as a set of per-call credentials, which are applied to every method call made\n * over a channel initialized with an instance of this class.\n */\nclass ChannelCredentials {\n    constructor(callCredentials) {\n        this.callCredentials = callCredentials || call_credentials_1.CallCredentials.createEmpty();\n    }\n    /**\n     * Gets the set of per-call credentials associated with this instance.\n     */\n    _getCallCredentials() {\n        return this.callCredentials;\n    }\n    _ref() {\n        // Do nothing by default\n    }\n    _unref() {\n        // Do nothing by default\n    }\n    /**\n     * Return a new ChannelCredentials instance with a given set of credentials.\n     * The resulting instance can be used to construct a Channel that communicates\n     * over TLS.\n     * @param rootCerts The root certificate data.\n     * @param privateKey The client certificate private key, if available.\n     * @param certChain The client certificate key chain, if available.\n     * @param verifyOptions Additional options to modify certificate verification\n     */\n    static createSsl(rootCerts, privateKey, certChain, verifyOptions) {\n        var _a;\n        verifyIsBufferOrNull(rootCerts, 'Root certificate');\n        verifyIsBufferOrNull(privateKey, 'Private key');\n        verifyIsBufferOrNull(certChain, 'Certificate chain');\n        if (privateKey && !certChain) {\n            throw new Error('Private key must be given with accompanying certificate chain');\n        }\n        if (!privateKey && certChain) {\n            throw new Error('Certificate chain must be given with accompanying private key');\n        }\n        const secureContext = (0, tls_1.createSecureContext)({\n            ca: (_a = rootCerts !== null && rootCerts !== void 0 ? rootCerts : (0, tls_helpers_1.getDefaultRootsData)()) !== null && _a !== void 0 ? _a : undefined,\n            key: privateKey !== null && privateKey !== void 0 ? privateKey : undefined,\n            cert: certChain !== null && certChain !== void 0 ? certChain : undefined,\n            ciphers: tls_helpers_1.CIPHER_SUITES,\n        });\n        return new SecureChannelCredentialsImpl(secureContext, verifyOptions !== null && verifyOptions !== void 0 ? verifyOptions : {});\n    }\n    /**\n     * Return a new ChannelCredentials instance with credentials created using\n     * the provided secureContext. The resulting instances can be used to\n     * construct a Channel that communicates over TLS. gRPC will not override\n     * anything in the provided secureContext, so the environment variables\n     * GRPC_SSL_CIPHER_SUITES and GRPC_DEFAULT_SSL_ROOTS_FILE_PATH will\n     * not be applied.\n     * @param secureContext The return value of tls.createSecureContext()\n     * @param verifyOptions Additional options to modify certificate verification\n     */\n    static createFromSecureContext(secureContext, verifyOptions) {\n        return new SecureChannelCredentialsImpl(secureContext, verifyOptions !== null && verifyOptions !== void 0 ? verifyOptions : {});\n    }\n    /**\n     * Return a new ChannelCredentials instance with no credentials.\n     */\n    static createInsecure() {\n        return new InsecureChannelCredentialsImpl();\n    }\n}\nexports.ChannelCredentials = ChannelCredentials;\nclass InsecureChannelCredentialsImpl extends ChannelCredentials {\n    constructor() {\n        super();\n    }\n    compose(callCredentials) {\n        throw new Error('Cannot compose insecure credentials');\n    }\n    _getConnectionOptions() {\n        return {};\n    }\n    _isSecure() {\n        return false;\n    }\n    _equals(other) {\n        return other instanceof InsecureChannelCredentialsImpl;\n    }\n}\nclass SecureChannelCredentialsImpl extends ChannelCredentials {\n    constructor(secureContext, verifyOptions) {\n        super();\n        this.secureContext = secureContext;\n        this.verifyOptions = verifyOptions;\n        this.connectionOptions = {\n            secureContext,\n        };\n        // Node asserts that this option is a function, so we cannot pass undefined\n        if (verifyOptions === null || verifyOptions === void 0 ? void 0 : verifyOptions.checkServerIdentity) {\n            this.connectionOptions.checkServerIdentity =\n                verifyOptions.checkServerIdentity;\n        }\n        if ((verifyOptions === null || verifyOptions === void 0 ? void 0 : verifyOptions.rejectUnauthorized) !== undefined) {\n            this.connectionOptions.rejectUnauthorized =\n                verifyOptions.rejectUnauthorized;\n        }\n    }\n    compose(callCredentials) {\n        const combinedCallCredentials = this.callCredentials.compose(callCredentials);\n        return new ComposedChannelCredentialsImpl(this, combinedCallCredentials);\n    }\n    _getConnectionOptions() {\n        // Copy to prevent callers from mutating this.connectionOptions\n        return Object.assign({}, this.connectionOptions);\n    }\n    _isSecure() {\n        return true;\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof SecureChannelCredentialsImpl) {\n            return (this.secureContext === other.secureContext &&\n                this.verifyOptions.checkServerIdentity ===\n                    other.verifyOptions.checkServerIdentity);\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass CertificateProviderChannelCredentialsImpl extends ChannelCredentials {\n    constructor(caCertificateProvider, identityCertificateProvider, verifyOptions) {\n        super();\n        this.caCertificateProvider = caCertificateProvider;\n        this.identityCertificateProvider = identityCertificateProvider;\n        this.verifyOptions = verifyOptions;\n        this.refcount = 0;\n        this.latestCaUpdate = null;\n        this.latestIdentityUpdate = null;\n        this.caCertificateUpdateListener = this.handleCaCertificateUpdate.bind(this);\n        this.identityCertificateUpdateListener = this.handleIdentityCertitificateUpdate.bind(this);\n    }\n    compose(callCredentials) {\n        const combinedCallCredentials = this.callCredentials.compose(callCredentials);\n        return new ComposedChannelCredentialsImpl(this, combinedCallCredentials);\n    }\n    _getConnectionOptions() {\n        var _a, _b, _c;\n        if (this.latestCaUpdate === null) {\n            return null;\n        }\n        if (this.identityCertificateProvider !== null && this.latestIdentityUpdate === null) {\n            return null;\n        }\n        const secureContext = (0, tls_1.createSecureContext)({\n            ca: this.latestCaUpdate.caCertificate,\n            key: (_a = this.latestIdentityUpdate) === null || _a === void 0 ? void 0 : _a.privateKey,\n            cert: (_b = this.latestIdentityUpdate) === null || _b === void 0 ? void 0 : _b.certificate,\n            ciphers: tls_helpers_1.CIPHER_SUITES\n        });\n        const options = {\n            secureContext: secureContext\n        };\n        if ((_c = this.verifyOptions) === null || _c === void 0 ? void 0 : _c.checkServerIdentity) {\n            options.checkServerIdentity = this.verifyOptions.checkServerIdentity;\n        }\n        return options;\n    }\n    _isSecure() {\n        return true;\n    }\n    _equals(other) {\n        var _a, _b;\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof CertificateProviderChannelCredentialsImpl) {\n            return this.caCertificateProvider === other.caCertificateProvider &&\n                this.identityCertificateProvider === other.identityCertificateProvider &&\n                ((_a = this.verifyOptions) === null || _a === void 0 ? void 0 : _a.checkServerIdentity) === ((_b = other.verifyOptions) === null || _b === void 0 ? void 0 : _b.checkServerIdentity);\n        }\n        else {\n            return false;\n        }\n    }\n    _ref() {\n        var _a;\n        if (this.refcount === 0) {\n            this.caCertificateProvider.addCaCertificateListener(this.caCertificateUpdateListener);\n            (_a = this.identityCertificateProvider) === null || _a === void 0 ? void 0 : _a.addIdentityCertificateListener(this.identityCertificateUpdateListener);\n        }\n        this.refcount += 1;\n    }\n    _unref() {\n        var _a;\n        this.refcount -= 1;\n        if (this.refcount === 0) {\n            this.caCertificateProvider.removeCaCertificateListener(this.caCertificateUpdateListener);\n            (_a = this.identityCertificateProvider) === null || _a === void 0 ? void 0 : _a.removeIdentityCertificateListener(this.identityCertificateUpdateListener);\n        }\n    }\n    handleCaCertificateUpdate(update) {\n        this.latestCaUpdate = update;\n    }\n    handleIdentityCertitificateUpdate(update) {\n        this.latestIdentityUpdate = update;\n    }\n}\nfunction createCertificateProviderChannelCredentials(caCertificateProvider, identityCertificateProvider, verifyOptions) {\n    return new CertificateProviderChannelCredentialsImpl(caCertificateProvider, identityCertificateProvider, verifyOptions !== null && verifyOptions !== void 0 ? verifyOptions : null);\n}\nclass ComposedChannelCredentialsImpl extends ChannelCredentials {\n    constructor(channelCredentials, callCreds) {\n        super(callCreds);\n        this.channelCredentials = channelCredentials;\n        if (!channelCredentials._isSecure()) {\n            throw new Error('Cannot compose insecure credentials');\n        }\n    }\n    compose(callCredentials) {\n        const combinedCallCredentials = this.callCredentials.compose(callCredentials);\n        return new ComposedChannelCredentialsImpl(this.channelCredentials, combinedCallCredentials);\n    }\n    _getConnectionOptions() {\n        return this.channelCredentials._getConnectionOptions();\n    }\n    _isSecure() {\n        return true;\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof ComposedChannelCredentialsImpl) {\n            return (this.channelCredentials._equals(other.channelCredentials) &&\n                this.callCredentials._equals(other.callCredentials));\n        }\n        else {\n            return false;\n        }\n    }\n}\n//# sourceMappingURL=channel-credentials.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChildChannelControlHelper = createChildChannelControlHelper;\nexports.registerLoadBalancerType = registerLoadBalancerType;\nexports.registerDefaultLoadBalancerType = registerDefaultLoadBalancerType;\nexports.createLoadBalancer = createLoadBalancer;\nexports.isLoadBalancerNameRegistered = isLoadBalancerNameRegistered;\nexports.parseLoadBalancingConfig = parseLoadBalancingConfig;\nexports.getDefaultConfig = getDefaultConfig;\nexports.selectLbConfigFromList = selectLbConfigFromList;\nconst logging_1 = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\n/**\n * Create a child ChannelControlHelper that overrides some methods of the\n * parent while letting others pass through to the parent unmodified. This\n * allows other code to create these children without needing to know about\n * all of the methods to be passed through.\n * @param parent\n * @param overrides\n */\nfunction createChildChannelControlHelper(parent, overrides) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    return {\n        createSubchannel: (_b = (_a = overrides.createSubchannel) === null || _a === void 0 ? void 0 : _a.bind(overrides)) !== null && _b !== void 0 ? _b : parent.createSubchannel.bind(parent),\n        updateState: (_d = (_c = overrides.updateState) === null || _c === void 0 ? void 0 : _c.bind(overrides)) !== null && _d !== void 0 ? _d : parent.updateState.bind(parent),\n        requestReresolution: (_f = (_e = overrides.requestReresolution) === null || _e === void 0 ? void 0 : _e.bind(overrides)) !== null && _f !== void 0 ? _f : parent.requestReresolution.bind(parent),\n        addChannelzChild: (_h = (_g = overrides.addChannelzChild) === null || _g === void 0 ? void 0 : _g.bind(overrides)) !== null && _h !== void 0 ? _h : parent.addChannelzChild.bind(parent),\n        removeChannelzChild: (_k = (_j = overrides.removeChannelzChild) === null || _j === void 0 ? void 0 : _j.bind(overrides)) !== null && _k !== void 0 ? _k : parent.removeChannelzChild.bind(parent),\n    };\n}\nconst registeredLoadBalancerTypes = {};\nlet defaultLoadBalancerType = null;\nfunction registerLoadBalancerType(typeName, loadBalancerType, loadBalancingConfigType) {\n    registeredLoadBalancerTypes[typeName] = {\n        LoadBalancer: loadBalancerType,\n        LoadBalancingConfig: loadBalancingConfigType,\n    };\n}\nfunction registerDefaultLoadBalancerType(typeName) {\n    defaultLoadBalancerType = typeName;\n}\nfunction createLoadBalancer(config, channelControlHelper, credentials, options) {\n    const typeName = config.getLoadBalancerName();\n    if (typeName in registeredLoadBalancerTypes) {\n        return new registeredLoadBalancerTypes[typeName].LoadBalancer(channelControlHelper, credentials, options);\n    }\n    else {\n        return null;\n    }\n}\nfunction isLoadBalancerNameRegistered(typeName) {\n    return typeName in registeredLoadBalancerTypes;\n}\nfunction parseLoadBalancingConfig(rawConfig) {\n    const keys = Object.keys(rawConfig);\n    if (keys.length !== 1) {\n        throw new Error('Provided load balancing config has multiple conflicting entries');\n    }\n    const typeName = keys[0];\n    if (typeName in registeredLoadBalancerTypes) {\n        try {\n            return registeredLoadBalancerTypes[typeName].LoadBalancingConfig.createFromJson(rawConfig[typeName]);\n        }\n        catch (e) {\n            throw new Error(`${typeName}: ${e.message}`);\n        }\n    }\n    else {\n        throw new Error(`Unrecognized load balancing config name ${typeName}`);\n    }\n}\nfunction getDefaultConfig() {\n    if (!defaultLoadBalancerType) {\n        throw new Error('No default load balancer type registered');\n    }\n    return new registeredLoadBalancerTypes[defaultLoadBalancerType].LoadBalancingConfig();\n}\nfunction selectLbConfigFromList(configs, fallbackTodefault = false) {\n    for (const config of configs) {\n        try {\n            return parseLoadBalancingConfig(config);\n        }\n        catch (e) {\n            (0, logging_1.log)(constants_1.LogVerbosity.DEBUG, 'Config parsing failed with error', e.message);\n            continue;\n        }\n    }\n    if (fallbackTodefault) {\n        if (defaultLoadBalancerType) {\n            return new registeredLoadBalancerTypes[defaultLoadBalancerType].LoadBalancingConfig();\n        }\n        else {\n            return null;\n        }\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=load-balancer.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateRetryThrottling = validateRetryThrottling;\nexports.validateServiceConfig = validateServiceConfig;\nexports.extractAndSelectServiceConfig = extractAndSelectServiceConfig;\n/* This file implements gRFC A2 and the service config spec:\n * https://github.com/grpc/proposal/blob/master/A2-service-configs-in-dns.md\n * https://github.com/grpc/grpc/blob/master/doc/service_config.md. Each\n * function here takes an object with unknown structure and returns its\n * specific object type if the input has the right structure, and throws an\n * error otherwise. */\n/* The any type is purposely used here. All functions validate their input at\n * runtime */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst os = require(\"os\");\nconst constants_1 = require(\"./constants\");\n/**\n * Recognizes a number with up to 9 digits after the decimal point, followed by\n * an \"s\", representing a number of seconds.\n */\nconst DURATION_REGEX = /^\\d+(\\.\\d{1,9})?s$/;\n/**\n * Client language name used for determining whether this client matches a\n * `ServiceConfigCanaryConfig`'s `clientLanguage` list.\n */\nconst CLIENT_LANGUAGE_STRING = 'node';\nfunction validateName(obj) {\n    // In this context, and unset field and '' are considered the same\n    if ('service' in obj && obj.service !== '') {\n        if (typeof obj.service !== 'string') {\n            throw new Error(`Invalid method config name: invalid service: expected type string, got ${typeof obj.service}`);\n        }\n        if ('method' in obj && obj.method !== '') {\n            if (typeof obj.method !== 'string') {\n                throw new Error(`Invalid method config name: invalid method: expected type string, got ${typeof obj.service}`);\n            }\n            return {\n                service: obj.service,\n                method: obj.method,\n            };\n        }\n        else {\n            return {\n                service: obj.service,\n            };\n        }\n    }\n    else {\n        if ('method' in obj && obj.method !== undefined) {\n            throw new Error(`Invalid method config name: method set with empty or unset service`);\n        }\n        return {};\n    }\n}\nfunction validateRetryPolicy(obj) {\n    if (!('maxAttempts' in obj) ||\n        !Number.isInteger(obj.maxAttempts) ||\n        obj.maxAttempts < 2) {\n        throw new Error('Invalid method config retry policy: maxAttempts must be an integer at least 2');\n    }\n    if (!('initialBackoff' in obj) ||\n        typeof obj.initialBackoff !== 'string' ||\n        !DURATION_REGEX.test(obj.initialBackoff)) {\n        throw new Error('Invalid method config retry policy: initialBackoff must be a string consisting of a positive integer or decimal followed by s');\n    }\n    if (!('maxBackoff' in obj) ||\n        typeof obj.maxBackoff !== 'string' ||\n        !DURATION_REGEX.test(obj.maxBackoff)) {\n        throw new Error('Invalid method config retry policy: maxBackoff must be a string consisting of a positive integer or decimal followed by s');\n    }\n    if (!('backoffMultiplier' in obj) ||\n        typeof obj.backoffMultiplier !== 'number' ||\n        obj.backoffMultiplier <= 0) {\n        throw new Error('Invalid method config retry policy: backoffMultiplier must be a number greater than 0');\n    }\n    if (!('retryableStatusCodes' in obj && Array.isArray(obj.retryableStatusCodes))) {\n        throw new Error('Invalid method config retry policy: retryableStatusCodes is required');\n    }\n    if (obj.retryableStatusCodes.length === 0) {\n        throw new Error('Invalid method config retry policy: retryableStatusCodes must be non-empty');\n    }\n    for (const value of obj.retryableStatusCodes) {\n        if (typeof value === 'number') {\n            if (!Object.values(constants_1.Status).includes(value)) {\n                throw new Error('Invalid method config retry policy: retryableStatusCodes value not in status code range');\n            }\n        }\n        else if (typeof value === 'string') {\n            if (!Object.values(constants_1.Status).includes(value.toUpperCase())) {\n                throw new Error('Invalid method config retry policy: retryableStatusCodes value not a status code name');\n            }\n        }\n        else {\n            throw new Error('Invalid method config retry policy: retryableStatusCodes value must be a string or number');\n        }\n    }\n    return {\n        maxAttempts: obj.maxAttempts,\n        initialBackoff: obj.initialBackoff,\n        maxBackoff: obj.maxBackoff,\n        backoffMultiplier: obj.backoffMultiplier,\n        retryableStatusCodes: obj.retryableStatusCodes,\n    };\n}\nfunction validateHedgingPolicy(obj) {\n    if (!('maxAttempts' in obj) ||\n        !Number.isInteger(obj.maxAttempts) ||\n        obj.maxAttempts < 2) {\n        throw new Error('Invalid method config hedging policy: maxAttempts must be an integer at least 2');\n    }\n    if ('hedgingDelay' in obj &&\n        (typeof obj.hedgingDelay !== 'string' ||\n            !DURATION_REGEX.test(obj.hedgingDelay))) {\n        throw new Error('Invalid method config hedging policy: hedgingDelay must be a string consisting of a positive integer followed by s');\n    }\n    if ('nonFatalStatusCodes' in obj && Array.isArray(obj.nonFatalStatusCodes)) {\n        for (const value of obj.nonFatalStatusCodes) {\n            if (typeof value === 'number') {\n                if (!Object.values(constants_1.Status).includes(value)) {\n                    throw new Error('Invalid method config hedging policy: nonFatalStatusCodes value not in status code range');\n                }\n            }\n            else if (typeof value === 'string') {\n                if (!Object.values(constants_1.Status).includes(value.toUpperCase())) {\n                    throw new Error('Invalid method config hedging policy: nonFatalStatusCodes value not a status code name');\n                }\n            }\n            else {\n                throw new Error('Invalid method config hedging policy: nonFatalStatusCodes value must be a string or number');\n            }\n        }\n    }\n    const result = {\n        maxAttempts: obj.maxAttempts,\n    };\n    if (obj.hedgingDelay) {\n        result.hedgingDelay = obj.hedgingDelay;\n    }\n    if (obj.nonFatalStatusCodes) {\n        result.nonFatalStatusCodes = obj.nonFatalStatusCodes;\n    }\n    return result;\n}\nfunction validateMethodConfig(obj) {\n    var _a;\n    const result = {\n        name: [],\n    };\n    if (!('name' in obj) || !Array.isArray(obj.name)) {\n        throw new Error('Invalid method config: invalid name array');\n    }\n    for (const name of obj.name) {\n        result.name.push(validateName(name));\n    }\n    if ('waitForReady' in obj) {\n        if (typeof obj.waitForReady !== 'boolean') {\n            throw new Error('Invalid method config: invalid waitForReady');\n        }\n        result.waitForReady = obj.waitForReady;\n    }\n    if ('timeout' in obj) {\n        if (typeof obj.timeout === 'object') {\n            if (!('seconds' in obj.timeout) ||\n                !(typeof obj.timeout.seconds === 'number')) {\n                throw new Error('Invalid method config: invalid timeout.seconds');\n            }\n            if (!('nanos' in obj.timeout) ||\n                !(typeof obj.timeout.nanos === 'number')) {\n                throw new Error('Invalid method config: invalid timeout.nanos');\n            }\n            result.timeout = obj.timeout;\n        }\n        else if (typeof obj.timeout === 'string' &&\n            DURATION_REGEX.test(obj.timeout)) {\n            const timeoutParts = obj.timeout\n                .substring(0, obj.timeout.length - 1)\n                .split('.');\n            result.timeout = {\n                seconds: timeoutParts[0] | 0,\n                nanos: ((_a = timeoutParts[1]) !== null && _a !== void 0 ? _a : 0) | 0,\n            };\n        }\n        else {\n            throw new Error('Invalid method config: invalid timeout');\n        }\n    }\n    if ('maxRequestBytes' in obj) {\n        if (typeof obj.maxRequestBytes !== 'number') {\n            throw new Error('Invalid method config: invalid maxRequestBytes');\n        }\n        result.maxRequestBytes = obj.maxRequestBytes;\n    }\n    if ('maxResponseBytes' in obj) {\n        if (typeof obj.maxResponseBytes !== 'number') {\n            throw new Error('Invalid method config: invalid maxRequestBytes');\n        }\n        result.maxResponseBytes = obj.maxResponseBytes;\n    }\n    if ('retryPolicy' in obj) {\n        if ('hedgingPolicy' in obj) {\n            throw new Error('Invalid method config: retryPolicy and hedgingPolicy cannot both be specified');\n        }\n        else {\n            result.retryPolicy = validateRetryPolicy(obj.retryPolicy);\n        }\n    }\n    else if ('hedgingPolicy' in obj) {\n        result.hedgingPolicy = validateHedgingPolicy(obj.hedgingPolicy);\n    }\n    return result;\n}\nfunction validateRetryThrottling(obj) {\n    if (!('maxTokens' in obj) ||\n        typeof obj.maxTokens !== 'number' ||\n        obj.maxTokens <= 0 ||\n        obj.maxTokens > 1000) {\n        throw new Error('Invalid retryThrottling: maxTokens must be a number in (0, 1000]');\n    }\n    if (!('tokenRatio' in obj) ||\n        typeof obj.tokenRatio !== 'number' ||\n        obj.tokenRatio <= 0) {\n        throw new Error('Invalid retryThrottling: tokenRatio must be a number greater than 0');\n    }\n    return {\n        maxTokens: +obj.maxTokens.toFixed(3),\n        tokenRatio: +obj.tokenRatio.toFixed(3),\n    };\n}\nfunction validateLoadBalancingConfig(obj) {\n    if (!(typeof obj === 'object' && obj !== null)) {\n        throw new Error(`Invalid loadBalancingConfig: unexpected type ${typeof obj}`);\n    }\n    const keys = Object.keys(obj);\n    if (keys.length > 1) {\n        throw new Error(`Invalid loadBalancingConfig: unexpected multiple keys ${keys}`);\n    }\n    if (keys.length === 0) {\n        throw new Error('Invalid loadBalancingConfig: load balancing policy name required');\n    }\n    return {\n        [keys[0]]: obj[keys[0]],\n    };\n}\nfunction validateServiceConfig(obj) {\n    const result = {\n        loadBalancingConfig: [],\n        methodConfig: [],\n    };\n    if ('loadBalancingPolicy' in obj) {\n        if (typeof obj.loadBalancingPolicy === 'string') {\n            result.loadBalancingPolicy = obj.loadBalancingPolicy;\n        }\n        else {\n            throw new Error('Invalid service config: invalid loadBalancingPolicy');\n        }\n    }\n    if ('loadBalancingConfig' in obj) {\n        if (Array.isArray(obj.loadBalancingConfig)) {\n            for (const config of obj.loadBalancingConfig) {\n                result.loadBalancingConfig.push(validateLoadBalancingConfig(config));\n            }\n        }\n        else {\n            throw new Error('Invalid service config: invalid loadBalancingConfig');\n        }\n    }\n    if ('methodConfig' in obj) {\n        if (Array.isArray(obj.methodConfig)) {\n            for (const methodConfig of obj.methodConfig) {\n                result.methodConfig.push(validateMethodConfig(methodConfig));\n            }\n        }\n    }\n    if ('retryThrottling' in obj) {\n        result.retryThrottling = validateRetryThrottling(obj.retryThrottling);\n    }\n    // Validate method name uniqueness\n    const seenMethodNames = [];\n    for (const methodConfig of result.methodConfig) {\n        for (const name of methodConfig.name) {\n            for (const seenName of seenMethodNames) {\n                if (name.service === seenName.service &&\n                    name.method === seenName.method) {\n                    throw new Error(`Invalid service config: duplicate name ${name.service}/${name.method}`);\n                }\n            }\n            seenMethodNames.push(name);\n        }\n    }\n    return result;\n}\nfunction validateCanaryConfig(obj) {\n    if (!('serviceConfig' in obj)) {\n        throw new Error('Invalid service config choice: missing service config');\n    }\n    const result = {\n        serviceConfig: validateServiceConfig(obj.serviceConfig),\n    };\n    if ('clientLanguage' in obj) {\n        if (Array.isArray(obj.clientLanguage)) {\n            result.clientLanguage = [];\n            for (const lang of obj.clientLanguage) {\n                if (typeof lang === 'string') {\n                    result.clientLanguage.push(lang);\n                }\n                else {\n                    throw new Error('Invalid service config choice: invalid clientLanguage');\n                }\n            }\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid clientLanguage');\n        }\n    }\n    if ('clientHostname' in obj) {\n        if (Array.isArray(obj.clientHostname)) {\n            result.clientHostname = [];\n            for (const lang of obj.clientHostname) {\n                if (typeof lang === 'string') {\n                    result.clientHostname.push(lang);\n                }\n                else {\n                    throw new Error('Invalid service config choice: invalid clientHostname');\n                }\n            }\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid clientHostname');\n        }\n    }\n    if ('percentage' in obj) {\n        if (typeof obj.percentage === 'number' &&\n            0 <= obj.percentage &&\n            obj.percentage <= 100) {\n            result.percentage = obj.percentage;\n        }\n        else {\n            throw new Error('Invalid service config choice: invalid percentage');\n        }\n    }\n    // Validate that no unexpected fields are present\n    const allowedFields = [\n        'clientLanguage',\n        'percentage',\n        'clientHostname',\n        'serviceConfig',\n    ];\n    for (const field in obj) {\n        if (!allowedFields.includes(field)) {\n            throw new Error(`Invalid service config choice: unexpected field ${field}`);\n        }\n    }\n    return result;\n}\nfunction validateAndSelectCanaryConfig(obj, percentage) {\n    if (!Array.isArray(obj)) {\n        throw new Error('Invalid service config list');\n    }\n    for (const config of obj) {\n        const validatedConfig = validateCanaryConfig(config);\n        /* For each field, we check if it is present, then only discard the\n         * config if the field value does not match the current client */\n        if (typeof validatedConfig.percentage === 'number' &&\n            percentage > validatedConfig.percentage) {\n            continue;\n        }\n        if (Array.isArray(validatedConfig.clientHostname)) {\n            let hostnameMatched = false;\n            for (const hostname of validatedConfig.clientHostname) {\n                if (hostname === os.hostname()) {\n                    hostnameMatched = true;\n                }\n            }\n            if (!hostnameMatched) {\n                continue;\n            }\n        }\n        if (Array.isArray(validatedConfig.clientLanguage)) {\n            let languageMatched = false;\n            for (const language of validatedConfig.clientLanguage) {\n                if (language === CLIENT_LANGUAGE_STRING) {\n                    languageMatched = true;\n                }\n            }\n            if (!languageMatched) {\n                continue;\n            }\n        }\n        return validatedConfig.serviceConfig;\n    }\n    throw new Error('No matching service config found');\n}\n/**\n * Find the \"grpc_config\" record among the TXT records, parse its value as JSON, validate its contents,\n * and select a service config with selection fields that all match this client. Most of these steps\n * can fail with an error; the caller must handle any errors thrown this way.\n * @param txtRecord The TXT record array that is output from a successful call to dns.resolveTxt\n * @param percentage A number chosen from the range [0, 100) that is used to select which config to use\n * @return The service configuration to use, given the percentage value, or null if the service config\n *     data has a valid format but none of the options match the current client.\n */\nfunction extractAndSelectServiceConfig(txtRecord, percentage) {\n    for (const record of txtRecord) {\n        if (record.length > 0 && record[0].startsWith('grpc_config=')) {\n            /* Treat the list of strings in this record as a single string and remove\n             * \"grpc_config=\" from the beginning. The rest should be a JSON string */\n            const recordString = record.join('').substring('grpc_config='.length);\n            const recordJson = JSON.parse(recordString);\n            return validateAndSelectCanaryConfig(recordJson, percentage);\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=service-config.js.map",
    "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectivityState = void 0;\nvar ConnectivityState;\n(function (ConnectivityState) {\n    ConnectivityState[ConnectivityState[\"IDLE\"] = 0] = \"IDLE\";\n    ConnectivityState[ConnectivityState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n    ConnectivityState[ConnectivityState[\"READY\"] = 2] = \"READY\";\n    ConnectivityState[ConnectivityState[\"TRANSIENT_FAILURE\"] = 3] = \"TRANSIENT_FAILURE\";\n    ConnectivityState[ConnectivityState[\"SHUTDOWN\"] = 4] = \"SHUTDOWN\";\n})(ConnectivityState || (exports.ConnectivityState = ConnectivityState = {}));\n//# sourceMappingURL=connectivity-state.js.map",
    "\"use strict\";\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUri = parseUri;\nexports.splitHostPort = splitHostPort;\nexports.combineHostPort = combineHostPort;\nexports.uriToString = uriToString;\n/*\n * The groups correspond to URI parts as follows:\n * 1. scheme\n * 2. authority\n * 3. path\n */\nconst URI_REGEX = /^(?:([A-Za-z0-9+.-]+):)?(?:\\/\\/([^/]*)\\/)?(.+)$/;\nfunction parseUri(uriString) {\n    const parsedUri = URI_REGEX.exec(uriString);\n    if (parsedUri === null) {\n        return null;\n    }\n    return {\n        scheme: parsedUri[1],\n        authority: parsedUri[2],\n        path: parsedUri[3],\n    };\n}\nconst NUMBER_REGEX = /^\\d+$/;\nfunction splitHostPort(path) {\n    if (path.startsWith('[')) {\n        const hostEnd = path.indexOf(']');\n        if (hostEnd === -1) {\n            return null;\n        }\n        const host = path.substring(1, hostEnd);\n        /* Only an IPv6 address should be in bracketed notation, and an IPv6\n         * address should have at least one colon */\n        if (host.indexOf(':') === -1) {\n            return null;\n        }\n        if (path.length > hostEnd + 1) {\n            if (path[hostEnd + 1] === ':') {\n                const portString = path.substring(hostEnd + 2);\n                if (NUMBER_REGEX.test(portString)) {\n                    return {\n                        host: host,\n                        port: +portString,\n                    };\n                }\n                else {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return {\n                host,\n            };\n        }\n    }\n    else {\n        const splitPath = path.split(':');\n        /* Exactly one colon means that this is host:port. Zero colons means that\n         * there is no port. And multiple colons means that this is a bare IPv6\n         * address with no port */\n        if (splitPath.length === 2) {\n            if (NUMBER_REGEX.test(splitPath[1])) {\n                return {\n                    host: splitPath[0],\n                    port: +splitPath[1],\n                };\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return {\n                host: path,\n            };\n        }\n    }\n}\nfunction combineHostPort(hostPort) {\n    if (hostPort.port === undefined) {\n        return hostPort.host;\n    }\n    else {\n        // Only an IPv6 host should include a colon\n        if (hostPort.host.includes(':')) {\n            return `[${hostPort.host}]:${hostPort.port}`;\n        }\n        else {\n            return `${hostPort.host}:${hostPort.port}`;\n        }\n    }\n}\nfunction uriToString(uri) {\n    let result = '';\n    if (uri.scheme !== undefined) {\n        result += uri.scheme + ':';\n    }\n    if (uri.authority !== undefined) {\n        result += '//' + uri.authority + '/';\n    }\n    result += uri.path;\n    return result;\n}\n//# sourceMappingURL=uri-parser.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.registerResolver = registerResolver;\nexports.registerDefaultScheme = registerDefaultScheme;\nexports.createResolver = createResolver;\nexports.getDefaultAuthority = getDefaultAuthority;\nexports.mapUriDefaultScheme = mapUriDefaultScheme;\nconst uri_parser_1 = require(\"./uri-parser\");\nconst registeredResolvers = {};\nlet defaultScheme = null;\n/**\n * Register a resolver class to handle target names prefixed with the `prefix`\n * string. This prefix should correspond to a URI scheme name listed in the\n * [gRPC Name Resolution document](https://github.com/grpc/grpc/blob/master/doc/naming.md)\n * @param prefix\n * @param resolverClass\n */\nfunction registerResolver(scheme, resolverClass) {\n    registeredResolvers[scheme] = resolverClass;\n}\n/**\n * Register a default resolver to handle target names that do not start with\n * any registered prefix.\n * @param resolverClass\n */\nfunction registerDefaultScheme(scheme) {\n    defaultScheme = scheme;\n}\n/**\n * Create a name resolver for the specified target, if possible. Throws an\n * error if no such name resolver can be created.\n * @param target\n * @param listener\n */\nfunction createResolver(target, listener, options) {\n    if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n        return new registeredResolvers[target.scheme](target, listener, options);\n    }\n    else {\n        throw new Error(`No resolver could be created for target ${(0, uri_parser_1.uriToString)(target)}`);\n    }\n}\n/**\n * Get the default authority for the specified target, if possible. Throws an\n * error if no registered name resolver can parse that target string.\n * @param target\n */\nfunction getDefaultAuthority(target) {\n    if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n        return registeredResolvers[target.scheme].getDefaultAuthority(target);\n    }\n    else {\n        throw new Error(`Invalid target ${(0, uri_parser_1.uriToString)(target)}`);\n    }\n}\nfunction mapUriDefaultScheme(target) {\n    if (target.scheme === undefined || !(target.scheme in registeredResolvers)) {\n        if (defaultScheme !== null) {\n            return {\n                scheme: defaultScheme,\n                authority: undefined,\n                path: (0, uri_parser_1.uriToString)(target),\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=resolver.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueuePicker = exports.UnavailablePicker = exports.PickResultType = void 0;\nconst metadata_1 = require(\"./metadata\");\nconst constants_1 = require(\"./constants\");\nvar PickResultType;\n(function (PickResultType) {\n    PickResultType[PickResultType[\"COMPLETE\"] = 0] = \"COMPLETE\";\n    PickResultType[PickResultType[\"QUEUE\"] = 1] = \"QUEUE\";\n    PickResultType[PickResultType[\"TRANSIENT_FAILURE\"] = 2] = \"TRANSIENT_FAILURE\";\n    PickResultType[PickResultType[\"DROP\"] = 3] = \"DROP\";\n})(PickResultType || (exports.PickResultType = PickResultType = {}));\n/**\n * A standard picker representing a load balancer in the TRANSIENT_FAILURE\n * state. Always responds to every pick request with an UNAVAILABLE status.\n */\nclass UnavailablePicker {\n    constructor(status) {\n        this.status = Object.assign({ code: constants_1.Status.UNAVAILABLE, details: 'No connection established', metadata: new metadata_1.Metadata() }, status);\n    }\n    pick(pickArgs) {\n        return {\n            pickResultType: PickResultType.TRANSIENT_FAILURE,\n            subchannel: null,\n            status: this.status,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n}\nexports.UnavailablePicker = UnavailablePicker;\n/**\n * A standard picker representing a load balancer in the IDLE or CONNECTING\n * state. Always responds to every pick request with a QUEUE pick result\n * indicating that the pick should be tried again with the next `Picker`. Also\n * reports back to the load balancer that a connection should be established\n * once any pick is attempted.\n * If the childPicker is provided, delegate to it instead of returning the\n * hardcoded QUEUE pick result, but still calls exitIdle.\n */\nclass QueuePicker {\n    // Constructed with a load balancer. Calls exitIdle on it the first time pick is called\n    constructor(loadBalancer, childPicker) {\n        this.loadBalancer = loadBalancer;\n        this.childPicker = childPicker;\n        this.calledExitIdle = false;\n    }\n    pick(pickArgs) {\n        if (!this.calledExitIdle) {\n            process.nextTick(() => {\n                this.loadBalancer.exitIdle();\n            });\n            this.calledExitIdle = true;\n        }\n        if (this.childPicker) {\n            return this.childPicker.pick(pickArgs);\n        }\n        else {\n            return {\n                pickResultType: PickResultType.QUEUE,\n                subchannel: null,\n                status: null,\n                onCallStarted: null,\n                onCallEnded: null,\n            };\n        }\n    }\n}\nexports.QueuePicker = QueuePicker;\n//# sourceMappingURL=picker.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackoffTimeout = void 0;\nconst INITIAL_BACKOFF_MS = 1000;\nconst BACKOFF_MULTIPLIER = 1.6;\nconst MAX_BACKOFF_MS = 120000;\nconst BACKOFF_JITTER = 0.2;\n/**\n * Get a number uniformly at random in the range [min, max)\n * @param min\n * @param max\n */\nfunction uniformRandom(min, max) {\n    return Math.random() * (max - min) + min;\n}\nclass BackoffTimeout {\n    constructor(callback, options) {\n        this.callback = callback;\n        /**\n         * The delay time at the start, and after each reset.\n         */\n        this.initialDelay = INITIAL_BACKOFF_MS;\n        /**\n         * The exponential backoff multiplier.\n         */\n        this.multiplier = BACKOFF_MULTIPLIER;\n        /**\n         * The maximum delay time\n         */\n        this.maxDelay = MAX_BACKOFF_MS;\n        /**\n         * The maximum fraction by which the delay time can randomly vary after\n         * applying the multiplier.\n         */\n        this.jitter = BACKOFF_JITTER;\n        /**\n         * Indicates whether the timer is currently running.\n         */\n        this.running = false;\n        /**\n         * Indicates whether the timer should keep the Node process running if no\n         * other async operation is doing so.\n         */\n        this.hasRef = true;\n        /**\n         * The time that the currently running timer was started. Only valid if\n         * running is true.\n         */\n        this.startTime = new Date();\n        /**\n         * The approximate time that the currently running timer will end. Only valid\n         * if running is true.\n         */\n        this.endTime = new Date();\n        if (options) {\n            if (options.initialDelay) {\n                this.initialDelay = options.initialDelay;\n            }\n            if (options.multiplier) {\n                this.multiplier = options.multiplier;\n            }\n            if (options.jitter) {\n                this.jitter = options.jitter;\n            }\n            if (options.maxDelay) {\n                this.maxDelay = options.maxDelay;\n            }\n        }\n        this.nextDelay = this.initialDelay;\n        this.timerId = setTimeout(() => { }, 0);\n        clearTimeout(this.timerId);\n    }\n    runTimer(delay) {\n        var _a, _b;\n        this.endTime = this.startTime;\n        this.endTime.setMilliseconds(this.endTime.getMilliseconds() + this.nextDelay);\n        clearTimeout(this.timerId);\n        this.timerId = setTimeout(() => {\n            this.callback();\n            this.running = false;\n        }, delay);\n        if (!this.hasRef) {\n            (_b = (_a = this.timerId).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    /**\n     * Call the callback after the current amount of delay time\n     */\n    runOnce() {\n        this.running = true;\n        this.startTime = new Date();\n        this.runTimer(this.nextDelay);\n        const nextBackoff = Math.min(this.nextDelay * this.multiplier, this.maxDelay);\n        const jitterMagnitude = nextBackoff * this.jitter;\n        this.nextDelay =\n            nextBackoff + uniformRandom(-jitterMagnitude, jitterMagnitude);\n    }\n    /**\n     * Stop the timer. The callback will not be called until `runOnce` is called\n     * again.\n     */\n    stop() {\n        clearTimeout(this.timerId);\n        this.running = false;\n    }\n    /**\n     * Reset the delay time to its initial value. If the timer is still running,\n     * retroactively apply that reset to the current timer.\n     */\n    reset() {\n        this.nextDelay = this.initialDelay;\n        if (this.running) {\n            const now = new Date();\n            const newEndTime = this.startTime;\n            newEndTime.setMilliseconds(newEndTime.getMilliseconds() + this.nextDelay);\n            clearTimeout(this.timerId);\n            if (now < newEndTime) {\n                this.runTimer(newEndTime.getTime() - now.getTime());\n            }\n            else {\n                this.running = false;\n            }\n        }\n    }\n    /**\n     * Check whether the timer is currently running.\n     */\n    isRunning() {\n        return this.running;\n    }\n    /**\n     * Set that while the timer is running, it should keep the Node process\n     * running.\n     */\n    ref() {\n        var _a, _b;\n        this.hasRef = true;\n        (_b = (_a = this.timerId).ref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Set that while the timer is running, it should not keep the Node process\n     * running.\n     */\n    unref() {\n        var _a, _b;\n        this.hasRef = false;\n        (_b = (_a = this.timerId).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Get the approximate timestamp of when the timer will fire. Only valid if\n     * this.isRunning() is true.\n     */\n    getEndTime() {\n        return this.endTime;\n    }\n}\nexports.BackoffTimeout = BackoffTimeout;\n//# sourceMappingURL=backoff-timeout.js.map",
    "\"use strict\";\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChildLoadBalancerHandler = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst TYPE_NAME = 'child_load_balancer_helper';\nclass ChildLoadBalancerHandler {\n    constructor(channelControlHelper, credentials, options) {\n        this.channelControlHelper = channelControlHelper;\n        this.credentials = credentials;\n        this.options = options;\n        this.currentChild = null;\n        this.pendingChild = null;\n        this.latestConfig = null;\n        this.ChildPolicyHelper = class {\n            constructor(parent) {\n                this.parent = parent;\n                this.child = null;\n            }\n            createSubchannel(subchannelAddress, subchannelArgs, credentialsOverride) {\n                return this.parent.channelControlHelper.createSubchannel(subchannelAddress, subchannelArgs, credentialsOverride);\n            }\n            updateState(connectivityState, picker) {\n                var _a;\n                if (this.calledByPendingChild()) {\n                    if (connectivityState === connectivity_state_1.ConnectivityState.CONNECTING) {\n                        return;\n                    }\n                    (_a = this.parent.currentChild) === null || _a === void 0 ? void 0 : _a.destroy();\n                    this.parent.currentChild = this.parent.pendingChild;\n                    this.parent.pendingChild = null;\n                }\n                else if (!this.calledByCurrentChild()) {\n                    return;\n                }\n                this.parent.channelControlHelper.updateState(connectivityState, picker);\n            }\n            requestReresolution() {\n                var _a;\n                const latestChild = (_a = this.parent.pendingChild) !== null && _a !== void 0 ? _a : this.parent.currentChild;\n                if (this.child === latestChild) {\n                    this.parent.channelControlHelper.requestReresolution();\n                }\n            }\n            setChild(newChild) {\n                this.child = newChild;\n            }\n            addChannelzChild(child) {\n                this.parent.channelControlHelper.addChannelzChild(child);\n            }\n            removeChannelzChild(child) {\n                this.parent.channelControlHelper.removeChannelzChild(child);\n            }\n            calledByPendingChild() {\n                return this.child === this.parent.pendingChild;\n            }\n            calledByCurrentChild() {\n                return this.child === this.parent.currentChild;\n            }\n        };\n    }\n    configUpdateRequiresNewPolicyInstance(oldConfig, newConfig) {\n        return oldConfig.getLoadBalancerName() !== newConfig.getLoadBalancerName();\n    }\n    /**\n     * Prerequisites: lbConfig !== null and lbConfig.name is registered\n     * @param endpointList\n     * @param lbConfig\n     * @param attributes\n     */\n    updateAddressList(endpointList, lbConfig, attributes) {\n        let childToUpdate;\n        if (this.currentChild === null ||\n            this.latestConfig === null ||\n            this.configUpdateRequiresNewPolicyInstance(this.latestConfig, lbConfig)) {\n            const newHelper = new this.ChildPolicyHelper(this);\n            const newChild = (0, load_balancer_1.createLoadBalancer)(lbConfig, newHelper, this.credentials, this.options);\n            newHelper.setChild(newChild);\n            if (this.currentChild === null) {\n                this.currentChild = newChild;\n                childToUpdate = this.currentChild;\n            }\n            else {\n                if (this.pendingChild) {\n                    this.pendingChild.destroy();\n                }\n                this.pendingChild = newChild;\n                childToUpdate = this.pendingChild;\n            }\n        }\n        else {\n            if (this.pendingChild === null) {\n                childToUpdate = this.currentChild;\n            }\n            else {\n                childToUpdate = this.pendingChild;\n            }\n        }\n        this.latestConfig = lbConfig;\n        childToUpdate.updateAddressList(endpointList, lbConfig, attributes);\n    }\n    exitIdle() {\n        if (this.currentChild) {\n            this.currentChild.exitIdle();\n            if (this.pendingChild) {\n                this.pendingChild.exitIdle();\n            }\n        }\n    }\n    resetBackoff() {\n        if (this.currentChild) {\n            this.currentChild.resetBackoff();\n            if (this.pendingChild) {\n                this.pendingChild.resetBackoff();\n            }\n        }\n    }\n    destroy() {\n        /* Note: state updates are only propagated from the child balancer if that\n         * object is equal to this.currentChild or this.pendingChild. Since this\n         * function sets both of those to null, no further state updates will\n         * occur after this function returns. */\n        if (this.currentChild) {\n            this.currentChild.destroy();\n            this.currentChild = null;\n        }\n        if (this.pendingChild) {\n            this.pendingChild.destroy();\n            this.pendingChild = null;\n        }\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.ChildLoadBalancerHandler = ChildLoadBalancerHandler;\n//# sourceMappingURL=load-balancer-child-handler.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolvingLoadBalancer = void 0;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst service_config_1 = require(\"./service-config\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst resolver_1 = require(\"./resolver\");\nconst picker_1 = require(\"./picker\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nconst TRACER_NAME = 'resolving_load_balancer';\nfunction trace(text) {\n    logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n/**\n * Name match levels in order from most to least specific. This is the order in\n * which searches will be performed.\n */\nconst NAME_MATCH_LEVEL_ORDER = [\n    'SERVICE_AND_METHOD',\n    'SERVICE',\n    'EMPTY',\n];\nfunction hasMatchingName(service, method, methodConfig, matchLevel) {\n    for (const name of methodConfig.name) {\n        switch (matchLevel) {\n            case 'EMPTY':\n                if (!name.service && !name.method) {\n                    return true;\n                }\n                break;\n            case 'SERVICE':\n                if (name.service === service && !name.method) {\n                    return true;\n                }\n                break;\n            case 'SERVICE_AND_METHOD':\n                if (name.service === service && name.method === method) {\n                    return true;\n                }\n        }\n    }\n    return false;\n}\nfunction findMatchingConfig(service, method, methodConfigs, matchLevel) {\n    for (const config of methodConfigs) {\n        if (hasMatchingName(service, method, config, matchLevel)) {\n            return config;\n        }\n    }\n    return null;\n}\nfunction getDefaultConfigSelector(serviceConfig) {\n    return function defaultConfigSelector(methodName, metadata) {\n        var _a, _b;\n        const splitName = methodName.split('/').filter(x => x.length > 0);\n        const service = (_a = splitName[0]) !== null && _a !== void 0 ? _a : '';\n        const method = (_b = splitName[1]) !== null && _b !== void 0 ? _b : '';\n        if (serviceConfig && serviceConfig.methodConfig) {\n            /* Check for the following in order, and return the first method\n             * config that matches:\n             * 1. A name that exactly matches the service and method\n             * 2. A name with no method set that matches the service\n             * 3. An empty name\n             */\n            for (const matchLevel of NAME_MATCH_LEVEL_ORDER) {\n                const matchingConfig = findMatchingConfig(service, method, serviceConfig.methodConfig, matchLevel);\n                if (matchingConfig) {\n                    return {\n                        methodConfig: matchingConfig,\n                        pickInformation: {},\n                        status: constants_1.Status.OK,\n                        dynamicFilterFactories: [],\n                    };\n                }\n            }\n        }\n        return {\n            methodConfig: { name: [] },\n            pickInformation: {},\n            status: constants_1.Status.OK,\n            dynamicFilterFactories: [],\n        };\n    };\n}\nclass ResolvingLoadBalancer {\n    /**\n     * Wrapper class that behaves like a `LoadBalancer` and also handles name\n     * resolution internally.\n     * @param target The address of the backend to connect to.\n     * @param channelControlHelper `ChannelControlHelper` instance provided by\n     *     this load balancer's owner.\n     * @param defaultServiceConfig The default service configuration to be used\n     *     if none is provided by the name resolver. A `null` value indicates\n     *     that the default behavior should be the default unconfigured behavior.\n     *     In practice, that means using the \"pick first\" load balancer\n     *     implmentation\n     */\n    constructor(target, channelControlHelper, credentials, channelOptions, onSuccessfulResolution, onFailedResolution) {\n        this.target = target;\n        this.channelControlHelper = channelControlHelper;\n        this.onSuccessfulResolution = onSuccessfulResolution;\n        this.onFailedResolution = onFailedResolution;\n        this.latestChildState = connectivity_state_1.ConnectivityState.IDLE;\n        this.latestChildPicker = new picker_1.QueuePicker(this);\n        /**\n         * This resolving load balancer's current connectivity state.\n         */\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The service config object from the last successful resolution, if\n         * available. A value of null indicates that we have not yet received a valid\n         * service config from the resolver.\n         */\n        this.previousServiceConfig = null;\n        /**\n         * Indicates whether we should attempt to resolve again after the backoff\n         * timer runs out.\n         */\n        this.continueResolving = false;\n        if (channelOptions['grpc.service_config']) {\n            this.defaultServiceConfig = (0, service_config_1.validateServiceConfig)(JSON.parse(channelOptions['grpc.service_config']));\n        }\n        else {\n            this.defaultServiceConfig = {\n                loadBalancingConfig: [],\n                methodConfig: [],\n            };\n        }\n        this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        this.childLoadBalancer = new load_balancer_child_handler_1.ChildLoadBalancerHandler({\n            createSubchannel: channelControlHelper.createSubchannel.bind(channelControlHelper),\n            requestReresolution: () => {\n                /* If the backoffTimeout is running, we're still backing off from\n                 * making resolve requests, so we shouldn't make another one here.\n                 * In that case, the backoff timer callback will call\n                 * updateResolution */\n                if (this.backoffTimeout.isRunning()) {\n                    trace('requestReresolution delayed by backoff timer until ' +\n                        this.backoffTimeout.getEndTime().toISOString());\n                    this.continueResolving = true;\n                }\n                else {\n                    this.updateResolution();\n                }\n            },\n            updateState: (newState, picker) => {\n                this.latestChildState = newState;\n                this.latestChildPicker = picker;\n                this.updateState(newState, picker);\n            },\n            addChannelzChild: channelControlHelper.addChannelzChild.bind(channelControlHelper),\n            removeChannelzChild: channelControlHelper.removeChannelzChild.bind(channelControlHelper),\n        }, credentials, channelOptions);\n        this.innerResolver = (0, resolver_1.createResolver)(target, {\n            onSuccessfulResolution: (endpointList, serviceConfig, serviceConfigError, configSelector, attributes) => {\n                var _a;\n                this.backoffTimeout.stop();\n                this.backoffTimeout.reset();\n                let workingServiceConfig = null;\n                /* This first group of conditionals implements the algorithm described\n                 * in https://github.com/grpc/proposal/blob/master/A21-service-config-error-handling.md\n                 * in the section called \"Behavior on receiving a new gRPC Config\".\n                 */\n                if (serviceConfig === null) {\n                    // Step 4 and 5\n                    if (serviceConfigError === null) {\n                        // Step 5\n                        this.previousServiceConfig = null;\n                        workingServiceConfig = this.defaultServiceConfig;\n                    }\n                    else {\n                        // Step 4\n                        if (this.previousServiceConfig === null) {\n                            // Step 4.ii\n                            this.handleResolutionFailure(serviceConfigError);\n                        }\n                        else {\n                            // Step 4.i\n                            workingServiceConfig = this.previousServiceConfig;\n                        }\n                    }\n                }\n                else {\n                    // Step 3\n                    workingServiceConfig = serviceConfig;\n                    this.previousServiceConfig = serviceConfig;\n                }\n                const workingConfigList = (_a = workingServiceConfig === null || workingServiceConfig === void 0 ? void 0 : workingServiceConfig.loadBalancingConfig) !== null && _a !== void 0 ? _a : [];\n                const loadBalancingConfig = (0, load_balancer_1.selectLbConfigFromList)(workingConfigList, true);\n                if (loadBalancingConfig === null) {\n                    // There were load balancing configs but none are supported. This counts as a resolution failure\n                    this.handleResolutionFailure({\n                        code: constants_1.Status.UNAVAILABLE,\n                        details: 'All load balancer options in service config are not compatible',\n                        metadata: new metadata_1.Metadata(),\n                    });\n                    return;\n                }\n                this.childLoadBalancer.updateAddressList(endpointList, loadBalancingConfig, attributes);\n                const finalServiceConfig = workingServiceConfig !== null && workingServiceConfig !== void 0 ? workingServiceConfig : this.defaultServiceConfig;\n                this.onSuccessfulResolution(finalServiceConfig, configSelector !== null && configSelector !== void 0 ? configSelector : getDefaultConfigSelector(finalServiceConfig));\n            },\n            onError: (error) => {\n                this.handleResolutionFailure(error);\n            },\n        }, channelOptions);\n        const backoffOptions = {\n            initialDelay: channelOptions['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: channelOptions['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoffTimeout = new backoff_timeout_1.BackoffTimeout(() => {\n            if (this.continueResolving) {\n                this.updateResolution();\n                this.continueResolving = false;\n            }\n            else {\n                this.updateState(this.latestChildState, this.latestChildPicker);\n            }\n        }, backoffOptions);\n        this.backoffTimeout.unref();\n    }\n    updateResolution() {\n        this.innerResolver.updateResolution();\n        if (this.currentState === connectivity_state_1.ConnectivityState.IDLE) {\n            /* this.latestChildPicker is initialized as new QueuePicker(this), which\n             * is an appropriate value here if the child LB policy is unset.\n             * Otherwise, we want to delegate to the child here, in case that\n             * triggers something. */\n            this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, this.latestChildPicker);\n        }\n        this.backoffTimeout.runOnce();\n    }\n    updateState(connectivityState, picker) {\n        trace((0, uri_parser_1.uriToString)(this.target) +\n            ' ' +\n            connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[connectivityState]);\n        // Ensure that this.exitIdle() is called by the picker\n        if (connectivityState === connectivity_state_1.ConnectivityState.IDLE) {\n            picker = new picker_1.QueuePicker(this, picker);\n        }\n        this.currentState = connectivityState;\n        this.channelControlHelper.updateState(connectivityState, picker);\n    }\n    handleResolutionFailure(error) {\n        if (this.latestChildState === connectivity_state_1.ConnectivityState.IDLE) {\n            this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker(error));\n            this.onFailedResolution(error);\n        }\n    }\n    exitIdle() {\n        if (this.currentState === connectivity_state_1.ConnectivityState.IDLE ||\n            this.currentState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n            if (this.backoffTimeout.isRunning()) {\n                this.continueResolving = true;\n            }\n            else {\n                this.updateResolution();\n            }\n        }\n        this.childLoadBalancer.exitIdle();\n    }\n    updateAddressList(endpointList, lbConfig) {\n        throw new Error('updateAddressList not supported on ResolvingLoadBalancer');\n    }\n    resetBackoff() {\n        this.backoffTimeout.reset();\n        this.childLoadBalancer.resetBackoff();\n    }\n    destroy() {\n        this.childLoadBalancer.destroy();\n        this.innerResolver.destroy();\n        this.backoffTimeout.reset();\n        this.backoffTimeout.stop();\n        this.latestChildState = connectivity_state_1.ConnectivityState.IDLE;\n        this.latestChildPicker = new picker_1.QueuePicker(this);\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        this.previousServiceConfig = null;\n        this.continueResolving = false;\n    }\n    getTypeName() {\n        return 'resolving_load_balancer';\n    }\n}\nexports.ResolvingLoadBalancer = ResolvingLoadBalancer;\n//# sourceMappingURL=resolving-load-balancer.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recognizedOptions = void 0;\nexports.channelOptionsEqual = channelOptionsEqual;\n/**\n * This is for checking provided options at runtime. This is an object for\n * easier membership checking.\n */\nexports.recognizedOptions = {\n    'grpc.ssl_target_name_override': true,\n    'grpc.primary_user_agent': true,\n    'grpc.secondary_user_agent': true,\n    'grpc.default_authority': true,\n    'grpc.keepalive_time_ms': true,\n    'grpc.keepalive_timeout_ms': true,\n    'grpc.keepalive_permit_without_calls': true,\n    'grpc.service_config': true,\n    'grpc.max_concurrent_streams': true,\n    'grpc.initial_reconnect_backoff_ms': true,\n    'grpc.max_reconnect_backoff_ms': true,\n    'grpc.use_local_subchannel_pool': true,\n    'grpc.max_send_message_length': true,\n    'grpc.max_receive_message_length': true,\n    'grpc.enable_http_proxy': true,\n    'grpc.enable_channelz': true,\n    'grpc.dns_min_time_between_resolutions_ms': true,\n    'grpc.enable_retries': true,\n    'grpc.per_rpc_retry_buffer_size': true,\n    'grpc.retry_buffer_size': true,\n    'grpc.max_connection_age_ms': true,\n    'grpc.max_connection_age_grace_ms': true,\n    'grpc-node.max_session_memory': true,\n    'grpc.service_config_disable_resolution': true,\n    'grpc.client_idle_timeout_ms': true,\n    'grpc-node.tls_enable_trace': true,\n    'grpc.lb.ring_hash.ring_size_cap': true,\n    'grpc-node.retry_max_attempts_limit': true,\n};\nfunction channelOptionsEqual(options1, options2) {\n    const keys1 = Object.keys(options1).sort();\n    const keys2 = Object.keys(options2).sort();\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (let i = 0; i < keys1.length; i += 1) {\n        if (keys1[i] !== keys2[i]) {\n            return false;\n        }\n        if (options1[keys1[i]] !== options2[keys2[i]]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=channel-options.js.map",
    "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndpointMap = void 0;\nexports.isTcpSubchannelAddress = isTcpSubchannelAddress;\nexports.subchannelAddressEqual = subchannelAddressEqual;\nexports.subchannelAddressToString = subchannelAddressToString;\nexports.stringToSubchannelAddress = stringToSubchannelAddress;\nexports.endpointEqual = endpointEqual;\nexports.endpointToString = endpointToString;\nexports.endpointHasAddress = endpointHasAddress;\nconst net_1 = require(\"net\");\nfunction isTcpSubchannelAddress(address) {\n    return 'port' in address;\n}\nfunction subchannelAddressEqual(address1, address2) {\n    if (!address1 && !address2) {\n        return true;\n    }\n    if (!address1 || !address2) {\n        return false;\n    }\n    if (isTcpSubchannelAddress(address1)) {\n        return (isTcpSubchannelAddress(address2) &&\n            address1.host === address2.host &&\n            address1.port === address2.port);\n    }\n    else {\n        return !isTcpSubchannelAddress(address2) && address1.path === address2.path;\n    }\n}\nfunction subchannelAddressToString(address) {\n    if (isTcpSubchannelAddress(address)) {\n        if ((0, net_1.isIPv6)(address.host)) {\n            return '[' + address.host + ']:' + address.port;\n        }\n        else {\n            return address.host + ':' + address.port;\n        }\n    }\n    else {\n        return address.path;\n    }\n}\nconst DEFAULT_PORT = 443;\nfunction stringToSubchannelAddress(addressString, port) {\n    if ((0, net_1.isIP)(addressString)) {\n        return {\n            host: addressString,\n            port: port !== null && port !== void 0 ? port : DEFAULT_PORT,\n        };\n    }\n    else {\n        return {\n            path: addressString,\n        };\n    }\n}\nfunction endpointEqual(endpoint1, endpoint2) {\n    if (endpoint1.addresses.length !== endpoint2.addresses.length) {\n        return false;\n    }\n    for (let i = 0; i < endpoint1.addresses.length; i++) {\n        if (!subchannelAddressEqual(endpoint1.addresses[i], endpoint2.addresses[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction endpointToString(endpoint) {\n    return ('[' + endpoint.addresses.map(subchannelAddressToString).join(', ') + ']');\n}\nfunction endpointHasAddress(endpoint, expectedAddress) {\n    for (const address of endpoint.addresses) {\n        if (subchannelAddressEqual(address, expectedAddress)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction endpointEqualUnordered(endpoint1, endpoint2) {\n    if (endpoint1.addresses.length !== endpoint2.addresses.length) {\n        return false;\n    }\n    for (const address1 of endpoint1.addresses) {\n        let matchFound = false;\n        for (const address2 of endpoint2.addresses) {\n            if (subchannelAddressEqual(address1, address2)) {\n                matchFound = true;\n                break;\n            }\n        }\n        if (!matchFound) {\n            return false;\n        }\n    }\n    return true;\n}\nclass EndpointMap {\n    constructor() {\n        this.map = new Set();\n    }\n    get size() {\n        return this.map.size;\n    }\n    getForSubchannelAddress(address) {\n        for (const entry of this.map) {\n            if (endpointHasAddress(entry.key, address)) {\n                return entry.value;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Delete any entries in this map with keys that are not in endpoints\n     * @param endpoints\n     */\n    deleteMissing(endpoints) {\n        const removedValues = [];\n        for (const entry of this.map) {\n            let foundEntry = false;\n            for (const endpoint of endpoints) {\n                if (endpointEqualUnordered(endpoint, entry.key)) {\n                    foundEntry = true;\n                }\n            }\n            if (!foundEntry) {\n                removedValues.push(entry.value);\n                this.map.delete(entry);\n            }\n        }\n        return removedValues;\n    }\n    get(endpoint) {\n        for (const entry of this.map) {\n            if (endpointEqualUnordered(endpoint, entry.key)) {\n                return entry.value;\n            }\n        }\n        return undefined;\n    }\n    set(endpoint, mapEntry) {\n        for (const entry of this.map) {\n            if (endpointEqualUnordered(endpoint, entry.key)) {\n                entry.value = mapEntry;\n                return;\n            }\n        }\n        this.map.add({ key: endpoint, value: mapEntry });\n    }\n    delete(endpoint) {\n        for (const entry of this.map) {\n            if (endpointEqualUnordered(endpoint, entry.key)) {\n                this.map.delete(entry);\n                return;\n            }\n        }\n    }\n    has(endpoint) {\n        for (const entry of this.map) {\n            if (endpointEqualUnordered(endpoint, entry.key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    clear() {\n        this.map.clear();\n    }\n    *keys() {\n        for (const entry of this.map) {\n            yield entry.key;\n        }\n    }\n    *values() {\n        for (const entry of this.map) {\n            yield entry.value;\n        }\n    }\n    *entries() {\n        for (const entry of this.map) {\n            yield [entry.key, entry.value];\n        }\n    }\n}\nexports.EndpointMap = EndpointMap;\n//# sourceMappingURL=subchannel-address.js.map",
    "\"use strict\";\n\nObject.defineProperty(exports, \"t\", {\n    value: true\n});\n\nclass TreeNode {\n    constructor(t, e, s = 1) {\n        this.i = undefined;\n        this.h = undefined;\n        this.o = undefined;\n        this.u = t;\n        this.l = e;\n        this.p = s;\n    }\n    I() {\n        let t = this;\n        const e = t.o.o === t;\n        if (e && t.p === 1) {\n            t = t.h;\n        } else if (t.i) {\n            t = t.i;\n            while (t.h) {\n                t = t.h;\n            }\n        } else {\n            if (e) {\n                return t.o;\n            }\n            let s = t.o;\n            while (s.i === t) {\n                t = s;\n                s = t.o;\n            }\n            t = s;\n        }\n        return t;\n    }\n    B() {\n        let t = this;\n        if (t.h) {\n            t = t.h;\n            while (t.i) {\n                t = t.i;\n            }\n            return t;\n        } else {\n            let e = t.o;\n            while (e.h === t) {\n                t = e;\n                e = t.o;\n            }\n            if (t.h !== e) {\n                return e;\n            } else return t;\n        }\n    }\n    _() {\n        const t = this.o;\n        const e = this.h;\n        const s = e.i;\n        if (t.o === this) t.o = e; else if (t.i === this) t.i = e; else t.h = e;\n        e.o = t;\n        e.i = this;\n        this.o = e;\n        this.h = s;\n        if (s) s.o = this;\n        return e;\n    }\n    g() {\n        const t = this.o;\n        const e = this.i;\n        const s = e.h;\n        if (t.o === this) t.o = e; else if (t.i === this) t.i = e; else t.h = e;\n        e.o = t;\n        e.h = this;\n        this.o = e;\n        this.i = s;\n        if (s) s.o = this;\n        return e;\n    }\n}\n\nclass TreeNodeEnableIndex extends TreeNode {\n    constructor() {\n        super(...arguments);\n        this.M = 1;\n    }\n    _() {\n        const t = super._();\n        this.O();\n        t.O();\n        return t;\n    }\n    g() {\n        const t = super.g();\n        this.O();\n        t.O();\n        return t;\n    }\n    O() {\n        this.M = 1;\n        if (this.i) {\n            this.M += this.i.M;\n        }\n        if (this.h) {\n            this.M += this.h.M;\n        }\n    }\n}\n\nclass ContainerIterator {\n    constructor(t = 0) {\n        this.iteratorType = t;\n    }\n    equals(t) {\n        return this.T === t.T;\n    }\n}\n\nclass Base {\n    constructor() {\n        this.m = 0;\n    }\n    get length() {\n        return this.m;\n    }\n    size() {\n        return this.m;\n    }\n    empty() {\n        return this.m === 0;\n    }\n}\n\nclass Container extends Base {}\n\nfunction throwIteratorAccessError() {\n    throw new RangeError(\"Iterator access denied!\");\n}\n\nclass TreeContainer extends Container {\n    constructor(t = function(t, e) {\n        if (t < e) return -1;\n        if (t > e) return 1;\n        return 0;\n    }, e = false) {\n        super();\n        this.v = undefined;\n        this.A = t;\n        this.enableIndex = e;\n        this.N = e ? TreeNodeEnableIndex : TreeNode;\n        this.C = new this.N;\n    }\n    R(t, e) {\n        let s = this.C;\n        while (t) {\n            const i = this.A(t.u, e);\n            if (i < 0) {\n                t = t.h;\n            } else if (i > 0) {\n                s = t;\n                t = t.i;\n            } else return t;\n        }\n        return s;\n    }\n    K(t, e) {\n        let s = this.C;\n        while (t) {\n            const i = this.A(t.u, e);\n            if (i <= 0) {\n                t = t.h;\n            } else {\n                s = t;\n                t = t.i;\n            }\n        }\n        return s;\n    }\n    L(t, e) {\n        let s = this.C;\n        while (t) {\n            const i = this.A(t.u, e);\n            if (i < 0) {\n                s = t;\n                t = t.h;\n            } else if (i > 0) {\n                t = t.i;\n            } else return t;\n        }\n        return s;\n    }\n    k(t, e) {\n        let s = this.C;\n        while (t) {\n            const i = this.A(t.u, e);\n            if (i < 0) {\n                s = t;\n                t = t.h;\n            } else {\n                t = t.i;\n            }\n        }\n        return s;\n    }\n    P(t) {\n        while (true) {\n            const e = t.o;\n            if (e === this.C) return;\n            if (t.p === 1) {\n                t.p = 0;\n                return;\n            }\n            if (t === e.i) {\n                const s = e.h;\n                if (s.p === 1) {\n                    s.p = 0;\n                    e.p = 1;\n                    if (e === this.v) {\n                        this.v = e._();\n                    } else e._();\n                } else {\n                    if (s.h && s.h.p === 1) {\n                        s.p = e.p;\n                        e.p = 0;\n                        s.h.p = 0;\n                        if (e === this.v) {\n                            this.v = e._();\n                        } else e._();\n                        return;\n                    } else if (s.i && s.i.p === 1) {\n                        s.p = 1;\n                        s.i.p = 0;\n                        s.g();\n                    } else {\n                        s.p = 1;\n                        t = e;\n                    }\n                }\n            } else {\n                const s = e.i;\n                if (s.p === 1) {\n                    s.p = 0;\n                    e.p = 1;\n                    if (e === this.v) {\n                        this.v = e.g();\n                    } else e.g();\n                } else {\n                    if (s.i && s.i.p === 1) {\n                        s.p = e.p;\n                        e.p = 0;\n                        s.i.p = 0;\n                        if (e === this.v) {\n                            this.v = e.g();\n                        } else e.g();\n                        return;\n                    } else if (s.h && s.h.p === 1) {\n                        s.p = 1;\n                        s.h.p = 0;\n                        s._();\n                    } else {\n                        s.p = 1;\n                        t = e;\n                    }\n                }\n            }\n        }\n    }\n    S(t) {\n        if (this.m === 1) {\n            this.clear();\n            return;\n        }\n        let e = t;\n        while (e.i || e.h) {\n            if (e.h) {\n                e = e.h;\n                while (e.i) e = e.i;\n            } else {\n                e = e.i;\n            }\n            const s = t.u;\n            t.u = e.u;\n            e.u = s;\n            const i = t.l;\n            t.l = e.l;\n            e.l = i;\n            t = e;\n        }\n        if (this.C.i === e) {\n            this.C.i = e.o;\n        } else if (this.C.h === e) {\n            this.C.h = e.o;\n        }\n        this.P(e);\n        let s = e.o;\n        if (e === s.i) {\n            s.i = undefined;\n        } else s.h = undefined;\n        this.m -= 1;\n        this.v.p = 0;\n        if (this.enableIndex) {\n            while (s !== this.C) {\n                s.M -= 1;\n                s = s.o;\n            }\n        }\n    }\n    U(t) {\n        const e = typeof t === \"number\" ? t : undefined;\n        const s = typeof t === \"function\" ? t : undefined;\n        const i = typeof t === \"undefined\" ? [] : undefined;\n        let r = 0;\n        let n = this.v;\n        const h = [];\n        while (h.length || n) {\n            if (n) {\n                h.push(n);\n                n = n.i;\n            } else {\n                n = h.pop();\n                if (r === e) return n;\n                i && i.push(n);\n                s && s(n, r, this);\n                r += 1;\n                n = n.h;\n            }\n        }\n        return i;\n    }\n    j(t) {\n        while (true) {\n            const e = t.o;\n            if (e.p === 0) return;\n            const s = e.o;\n            if (e === s.i) {\n                const i = s.h;\n                if (i && i.p === 1) {\n                    i.p = e.p = 0;\n                    if (s === this.v) return;\n                    s.p = 1;\n                    t = s;\n                    continue;\n                } else if (t === e.h) {\n                    t.p = 0;\n                    if (t.i) {\n                        t.i.o = e;\n                    }\n                    if (t.h) {\n                        t.h.o = s;\n                    }\n                    e.h = t.i;\n                    s.i = t.h;\n                    t.i = e;\n                    t.h = s;\n                    if (s === this.v) {\n                        this.v = t;\n                        this.C.o = t;\n                    } else {\n                        const e = s.o;\n                        if (e.i === s) {\n                            e.i = t;\n                        } else e.h = t;\n                    }\n                    t.o = s.o;\n                    e.o = t;\n                    s.o = t;\n                    s.p = 1;\n                } else {\n                    e.p = 0;\n                    if (s === this.v) {\n                        this.v = s.g();\n                    } else s.g();\n                    s.p = 1;\n                    return;\n                }\n            } else {\n                const i = s.i;\n                if (i && i.p === 1) {\n                    i.p = e.p = 0;\n                    if (s === this.v) return;\n                    s.p = 1;\n                    t = s;\n                    continue;\n                } else if (t === e.i) {\n                    t.p = 0;\n                    if (t.i) {\n                        t.i.o = s;\n                    }\n                    if (t.h) {\n                        t.h.o = e;\n                    }\n                    s.h = t.i;\n                    e.i = t.h;\n                    t.i = s;\n                    t.h = e;\n                    if (s === this.v) {\n                        this.v = t;\n                        this.C.o = t;\n                    } else {\n                        const e = s.o;\n                        if (e.i === s) {\n                            e.i = t;\n                        } else e.h = t;\n                    }\n                    t.o = s.o;\n                    e.o = t;\n                    s.o = t;\n                    s.p = 1;\n                } else {\n                    e.p = 0;\n                    if (s === this.v) {\n                        this.v = s._();\n                    } else s._();\n                    s.p = 1;\n                    return;\n                }\n            }\n            if (this.enableIndex) {\n                e.O();\n                s.O();\n                t.O();\n            }\n            return;\n        }\n    }\n    q(t, e, s) {\n        if (this.v === undefined) {\n            this.m += 1;\n            this.v = new this.N(t, e, 0);\n            this.v.o = this.C;\n            this.C.o = this.C.i = this.C.h = this.v;\n            return this.m;\n        }\n        let i;\n        const r = this.C.i;\n        const n = this.A(r.u, t);\n        if (n === 0) {\n            r.l = e;\n            return this.m;\n        } else if (n > 0) {\n            r.i = new this.N(t, e);\n            r.i.o = r;\n            i = r.i;\n            this.C.i = i;\n        } else {\n            const r = this.C.h;\n            const n = this.A(r.u, t);\n            if (n === 0) {\n                r.l = e;\n                return this.m;\n            } else if (n < 0) {\n                r.h = new this.N(t, e);\n                r.h.o = r;\n                i = r.h;\n                this.C.h = i;\n            } else {\n                if (s !== undefined) {\n                    const r = s.T;\n                    if (r !== this.C) {\n                        const s = this.A(r.u, t);\n                        if (s === 0) {\n                            r.l = e;\n                            return this.m;\n                        } else if (s > 0) {\n                            const s = r.I();\n                            const n = this.A(s.u, t);\n                            if (n === 0) {\n                                s.l = e;\n                                return this.m;\n                            } else if (n < 0) {\n                                i = new this.N(t, e);\n                                if (s.h === undefined) {\n                                    s.h = i;\n                                    i.o = s;\n                                } else {\n                                    r.i = i;\n                                    i.o = r;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (i === undefined) {\n                    i = this.v;\n                    while (true) {\n                        const s = this.A(i.u, t);\n                        if (s > 0) {\n                            if (i.i === undefined) {\n                                i.i = new this.N(t, e);\n                                i.i.o = i;\n                                i = i.i;\n                                break;\n                            }\n                            i = i.i;\n                        } else if (s < 0) {\n                            if (i.h === undefined) {\n                                i.h = new this.N(t, e);\n                                i.h.o = i;\n                                i = i.h;\n                                break;\n                            }\n                            i = i.h;\n                        } else {\n                            i.l = e;\n                            return this.m;\n                        }\n                    }\n                }\n            }\n        }\n        if (this.enableIndex) {\n            let t = i.o;\n            while (t !== this.C) {\n                t.M += 1;\n                t = t.o;\n            }\n        }\n        this.j(i);\n        this.m += 1;\n        return this.m;\n    }\n    H(t, e) {\n        while (t) {\n            const s = this.A(t.u, e);\n            if (s < 0) {\n                t = t.h;\n            } else if (s > 0) {\n                t = t.i;\n            } else return t;\n        }\n        return t || this.C;\n    }\n    clear() {\n        this.m = 0;\n        this.v = undefined;\n        this.C.o = undefined;\n        this.C.i = this.C.h = undefined;\n    }\n    updateKeyByIterator(t, e) {\n        const s = t.T;\n        if (s === this.C) {\n            throwIteratorAccessError();\n        }\n        if (this.m === 1) {\n            s.u = e;\n            return true;\n        }\n        const i = s.B().u;\n        if (s === this.C.i) {\n            if (this.A(i, e) > 0) {\n                s.u = e;\n                return true;\n            }\n            return false;\n        }\n        const r = s.I().u;\n        if (s === this.C.h) {\n            if (this.A(r, e) < 0) {\n                s.u = e;\n                return true;\n            }\n            return false;\n        }\n        if (this.A(r, e) >= 0 || this.A(i, e) <= 0) return false;\n        s.u = e;\n        return true;\n    }\n    eraseElementByPos(t) {\n        if (t < 0 || t > this.m - 1) {\n            throw new RangeError;\n        }\n        const e = this.U(t);\n        this.S(e);\n        return this.m;\n    }\n    eraseElementByKey(t) {\n        if (this.m === 0) return false;\n        const e = this.H(this.v, t);\n        if (e === this.C) return false;\n        this.S(e);\n        return true;\n    }\n    eraseElementByIterator(t) {\n        const e = t.T;\n        if (e === this.C) {\n            throwIteratorAccessError();\n        }\n        const s = e.h === undefined;\n        const i = t.iteratorType === 0;\n        if (i) {\n            if (s) t.next();\n        } else {\n            if (!s || e.i === undefined) t.next();\n        }\n        this.S(e);\n        return t;\n    }\n    getHeight() {\n        if (this.m === 0) return 0;\n        function traversal(t) {\n            if (!t) return 0;\n            return Math.max(traversal(t.i), traversal(t.h)) + 1;\n        }\n        return traversal(this.v);\n    }\n}\n\nclass TreeIterator extends ContainerIterator {\n    constructor(t, e, s) {\n        super(s);\n        this.T = t;\n        this.C = e;\n        if (this.iteratorType === 0) {\n            this.pre = function() {\n                if (this.T === this.C.i) {\n                    throwIteratorAccessError();\n                }\n                this.T = this.T.I();\n                return this;\n            };\n            this.next = function() {\n                if (this.T === this.C) {\n                    throwIteratorAccessError();\n                }\n                this.T = this.T.B();\n                return this;\n            };\n        } else {\n            this.pre = function() {\n                if (this.T === this.C.h) {\n                    throwIteratorAccessError();\n                }\n                this.T = this.T.B();\n                return this;\n            };\n            this.next = function() {\n                if (this.T === this.C) {\n                    throwIteratorAccessError();\n                }\n                this.T = this.T.I();\n                return this;\n            };\n        }\n    }\n    get index() {\n        let t = this.T;\n        const e = this.C.o;\n        if (t === this.C) {\n            if (e) {\n                return e.M - 1;\n            }\n            return 0;\n        }\n        let s = 0;\n        if (t.i) {\n            s += t.i.M;\n        }\n        while (t !== e) {\n            const e = t.o;\n            if (t === e.h) {\n                s += 1;\n                if (e.i) {\n                    s += e.i.M;\n                }\n            }\n            t = e;\n        }\n        return s;\n    }\n    isAccessible() {\n        return this.T !== this.C;\n    }\n}\n\nclass OrderedMapIterator extends TreeIterator {\n    constructor(t, e, s, i) {\n        super(t, e, i);\n        this.container = s;\n    }\n    get pointer() {\n        if (this.T === this.C) {\n            throwIteratorAccessError();\n        }\n        const t = this;\n        return new Proxy([], {\n            get(e, s) {\n                if (s === \"0\") return t.T.u; else if (s === \"1\") return t.T.l;\n                e[0] = t.T.u;\n                e[1] = t.T.l;\n                return e[s];\n            },\n            set(e, s, i) {\n                if (s !== \"1\") {\n                    throw new TypeError(\"prop must be 1\");\n                }\n                t.T.l = i;\n                return true;\n            }\n        });\n    }\n    copy() {\n        return new OrderedMapIterator(this.T, this.C, this.container, this.iteratorType);\n    }\n}\n\nclass OrderedMap extends TreeContainer {\n    constructor(t = [], e, s) {\n        super(e, s);\n        const i = this;\n        t.forEach((function(t) {\n            i.setElement(t[0], t[1]);\n        }));\n    }\n    begin() {\n        return new OrderedMapIterator(this.C.i || this.C, this.C, this);\n    }\n    end() {\n        return new OrderedMapIterator(this.C, this.C, this);\n    }\n    rBegin() {\n        return new OrderedMapIterator(this.C.h || this.C, this.C, this, 1);\n    }\n    rEnd() {\n        return new OrderedMapIterator(this.C, this.C, this, 1);\n    }\n    front() {\n        if (this.m === 0) return;\n        const t = this.C.i;\n        return [ t.u, t.l ];\n    }\n    back() {\n        if (this.m === 0) return;\n        const t = this.C.h;\n        return [ t.u, t.l ];\n    }\n    lowerBound(t) {\n        const e = this.R(this.v, t);\n        return new OrderedMapIterator(e, this.C, this);\n    }\n    upperBound(t) {\n        const e = this.K(this.v, t);\n        return new OrderedMapIterator(e, this.C, this);\n    }\n    reverseLowerBound(t) {\n        const e = this.L(this.v, t);\n        return new OrderedMapIterator(e, this.C, this);\n    }\n    reverseUpperBound(t) {\n        const e = this.k(this.v, t);\n        return new OrderedMapIterator(e, this.C, this);\n    }\n    forEach(t) {\n        this.U((function(e, s, i) {\n            t([ e.u, e.l ], s, i);\n        }));\n    }\n    setElement(t, e, s) {\n        return this.q(t, e, s);\n    }\n    getElementByPos(t) {\n        if (t < 0 || t > this.m - 1) {\n            throw new RangeError;\n        }\n        const e = this.U(t);\n        return [ e.u, e.l ];\n    }\n    find(t) {\n        const e = this.H(this.v, t);\n        return new OrderedMapIterator(e, this.C, this);\n    }\n    getElementByKey(t) {\n        const e = this.H(this.v, t);\n        return e.l;\n    }\n    union(t) {\n        const e = this;\n        t.forEach((function(t) {\n            e.setElement(t[0], t[1]);\n        }));\n        return this.m;\n    }\n    * [Symbol.iterator]() {\n        const t = this.m;\n        const e = this.U();\n        for (let s = 0; s < t; ++s) {\n            const t = e[s];\n            yield [ t.u, t.l ];\n        }\n    }\n}\n\nexports.OrderedMap = OrderedMap;\n//# sourceMappingURL=index.js.map\n",
    "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.registerAdminService = registerAdminService;\nexports.addAdminServicesToServer = addAdminServicesToServer;\nconst registeredAdminServices = [];\nfunction registerAdminService(getServiceDefinition, getHandlers) {\n    registeredAdminServices.push({ getServiceDefinition, getHandlers });\n}\nfunction addAdminServicesToServer(server) {\n    for (const { getServiceDefinition, getHandlers } of registeredAdminServices) {\n        server.addService(getServiceDefinition(), getHandlers());\n    }\n}\n//# sourceMappingURL=admin.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientDuplexStreamImpl = exports.ClientWritableStreamImpl = exports.ClientReadableStreamImpl = exports.ClientUnaryCallImpl = void 0;\nexports.callErrorFromStatus = callErrorFromStatus;\nconst events_1 = require(\"events\");\nconst stream_1 = require(\"stream\");\nconst constants_1 = require(\"./constants\");\n/**\n * Construct a ServiceError from a StatusObject. This function exists primarily\n * as an attempt to make the error stack trace clearly communicate that the\n * error is not necessarily a problem in gRPC itself.\n * @param status\n */\nfunction callErrorFromStatus(status, callerStack) {\n    const message = `${status.code} ${constants_1.Status[status.code]}: ${status.details}`;\n    const error = new Error(message);\n    const stack = `${error.stack}\\nfor call at\\n${callerStack}`;\n    return Object.assign(new Error(message), status, { stack });\n}\nclass ClientUnaryCallImpl extends events_1.EventEmitter {\n    constructor() {\n        super();\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n}\nexports.ClientUnaryCallImpl = ClientUnaryCallImpl;\nclass ClientReadableStreamImpl extends stream_1.Readable {\n    constructor(deserialize) {\n        super({ objectMode: true });\n        this.deserialize = deserialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n}\nexports.ClientReadableStreamImpl = ClientReadableStreamImpl;\nclass ClientWritableStreamImpl extends stream_1.Writable {\n    constructor(serialize) {\n        super({ objectMode: true });\n        this.serialize = serialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _write(chunk, encoding, cb) {\n        var _a;\n        const context = {\n            callback: cb,\n        };\n        const flags = Number(encoding);\n        if (!Number.isNaN(flags)) {\n            context.flags = flags;\n        }\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n        cb();\n    }\n}\nexports.ClientWritableStreamImpl = ClientWritableStreamImpl;\nclass ClientDuplexStreamImpl extends stream_1.Duplex {\n    constructor(serialize, deserialize) {\n        super({ objectMode: true });\n        this.serialize = serialize;\n        this.deserialize = deserialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n    _write(chunk, encoding, cb) {\n        var _a;\n        const context = {\n            callback: cb,\n        };\n        const flags = Number(encoding);\n        if (!Number.isNaN(flags)) {\n            context.flags = flags;\n        }\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n        cb();\n    }\n}\nexports.ClientDuplexStreamImpl = ClientDuplexStreamImpl;\n//# sourceMappingURL=call.js.map",
    "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InterceptingListenerImpl = void 0;\nexports.isInterceptingListener = isInterceptingListener;\nfunction isInterceptingListener(listener) {\n    return (listener.onReceiveMetadata !== undefined &&\n        listener.onReceiveMetadata.length === 1);\n}\nclass InterceptingListenerImpl {\n    constructor(listener, nextListener) {\n        this.listener = listener;\n        this.nextListener = nextListener;\n        this.processingMetadata = false;\n        this.hasPendingMessage = false;\n        this.processingMessage = false;\n        this.pendingStatus = null;\n    }\n    processPendingMessage() {\n        if (this.hasPendingMessage) {\n            this.nextListener.onReceiveMessage(this.pendingMessage);\n            this.pendingMessage = null;\n            this.hasPendingMessage = false;\n        }\n    }\n    processPendingStatus() {\n        if (this.pendingStatus) {\n            this.nextListener.onReceiveStatus(this.pendingStatus);\n        }\n    }\n    onReceiveMetadata(metadata) {\n        this.processingMetadata = true;\n        this.listener.onReceiveMetadata(metadata, metadata => {\n            this.processingMetadata = false;\n            this.nextListener.onReceiveMetadata(metadata);\n            this.processPendingMessage();\n            this.processPendingStatus();\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onReceiveMessage(message) {\n        /* If this listener processes messages asynchronously, the last message may\n         * be reordered with respect to the status */\n        this.processingMessage = true;\n        this.listener.onReceiveMessage(message, msg => {\n            this.processingMessage = false;\n            if (this.processingMetadata) {\n                this.pendingMessage = msg;\n                this.hasPendingMessage = true;\n            }\n            else {\n                this.nextListener.onReceiveMessage(msg);\n                this.processPendingStatus();\n            }\n        });\n    }\n    onReceiveStatus(status) {\n        this.listener.onReceiveStatus(status, processedStatus => {\n            if (this.processingMetadata || this.processingMessage) {\n                this.pendingStatus = processedStatus;\n            }\n            else {\n                this.nextListener.onReceiveStatus(processedStatus);\n            }\n        });\n    }\n}\nexports.InterceptingListenerImpl = InterceptingListenerImpl;\n//# sourceMappingURL=call-interface.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InterceptingCall = exports.RequesterBuilder = exports.ListenerBuilder = exports.InterceptorConfigurationError = void 0;\nexports.getInterceptingCall = getInterceptingCall;\nconst metadata_1 = require(\"./metadata\");\nconst call_interface_1 = require(\"./call-interface\");\nconst constants_1 = require(\"./constants\");\nconst error_1 = require(\"./error\");\n/**\n * Error class associated with passing both interceptors and interceptor\n * providers to a client constructor or as call options.\n */\nclass InterceptorConfigurationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InterceptorConfigurationError';\n        Error.captureStackTrace(this, InterceptorConfigurationError);\n    }\n}\nexports.InterceptorConfigurationError = InterceptorConfigurationError;\nclass ListenerBuilder {\n    constructor() {\n        this.metadata = undefined;\n        this.message = undefined;\n        this.status = undefined;\n    }\n    withOnReceiveMetadata(onReceiveMetadata) {\n        this.metadata = onReceiveMetadata;\n        return this;\n    }\n    withOnReceiveMessage(onReceiveMessage) {\n        this.message = onReceiveMessage;\n        return this;\n    }\n    withOnReceiveStatus(onReceiveStatus) {\n        this.status = onReceiveStatus;\n        return this;\n    }\n    build() {\n        return {\n            onReceiveMetadata: this.metadata,\n            onReceiveMessage: this.message,\n            onReceiveStatus: this.status,\n        };\n    }\n}\nexports.ListenerBuilder = ListenerBuilder;\nclass RequesterBuilder {\n    constructor() {\n        this.start = undefined;\n        this.message = undefined;\n        this.halfClose = undefined;\n        this.cancel = undefined;\n    }\n    withStart(start) {\n        this.start = start;\n        return this;\n    }\n    withSendMessage(sendMessage) {\n        this.message = sendMessage;\n        return this;\n    }\n    withHalfClose(halfClose) {\n        this.halfClose = halfClose;\n        return this;\n    }\n    withCancel(cancel) {\n        this.cancel = cancel;\n        return this;\n    }\n    build() {\n        return {\n            start: this.start,\n            sendMessage: this.message,\n            halfClose: this.halfClose,\n            cancel: this.cancel,\n        };\n    }\n}\nexports.RequesterBuilder = RequesterBuilder;\n/**\n * A Listener with a default pass-through implementation of each method. Used\n * for filling out Listeners with some methods omitted.\n */\nconst defaultListener = {\n    onReceiveMetadata: (metadata, next) => {\n        next(metadata);\n    },\n    onReceiveMessage: (message, next) => {\n        next(message);\n    },\n    onReceiveStatus: (status, next) => {\n        next(status);\n    },\n};\n/**\n * A Requester with a default pass-through implementation of each method. Used\n * for filling out Requesters with some methods omitted.\n */\nconst defaultRequester = {\n    start: (metadata, listener, next) => {\n        next(metadata, listener);\n    },\n    sendMessage: (message, next) => {\n        next(message);\n    },\n    halfClose: next => {\n        next();\n    },\n    cancel: next => {\n        next();\n    },\n};\nclass InterceptingCall {\n    constructor(nextCall, requester) {\n        var _a, _b, _c, _d;\n        this.nextCall = nextCall;\n        /**\n         * Indicates that metadata has been passed to the requester's start\n         * method but it has not been passed to the corresponding next callback\n         */\n        this.processingMetadata = false;\n        /**\n         * Message context for a pending message that is waiting for\n         */\n        this.pendingMessageContext = null;\n        /**\n         * Indicates that a message has been passed to the requester's sendMessage\n         * method but it has not been passed to the corresponding next callback\n         */\n        this.processingMessage = false;\n        /**\n         * Indicates that a status was received but could not be propagated because\n         * a message was still being processed.\n         */\n        this.pendingHalfClose = false;\n        if (requester) {\n            this.requester = {\n                start: (_a = requester.start) !== null && _a !== void 0 ? _a : defaultRequester.start,\n                sendMessage: (_b = requester.sendMessage) !== null && _b !== void 0 ? _b : defaultRequester.sendMessage,\n                halfClose: (_c = requester.halfClose) !== null && _c !== void 0 ? _c : defaultRequester.halfClose,\n                cancel: (_d = requester.cancel) !== null && _d !== void 0 ? _d : defaultRequester.cancel,\n            };\n        }\n        else {\n            this.requester = defaultRequester;\n        }\n    }\n    cancelWithStatus(status, details) {\n        this.requester.cancel(() => {\n            this.nextCall.cancelWithStatus(status, details);\n        });\n    }\n    getPeer() {\n        return this.nextCall.getPeer();\n    }\n    processPendingMessage() {\n        if (this.pendingMessageContext) {\n            this.nextCall.sendMessageWithContext(this.pendingMessageContext, this.pendingMessage);\n            this.pendingMessageContext = null;\n            this.pendingMessage = null;\n        }\n    }\n    processPendingHalfClose() {\n        if (this.pendingHalfClose) {\n            this.nextCall.halfClose();\n        }\n    }\n    start(metadata, interceptingListener) {\n        var _a, _b, _c, _d, _e, _f;\n        const fullInterceptingListener = {\n            onReceiveMetadata: (_b = (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.bind(interceptingListener)) !== null && _b !== void 0 ? _b : (metadata => { }),\n            onReceiveMessage: (_d = (_c = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMessage) === null || _c === void 0 ? void 0 : _c.bind(interceptingListener)) !== null && _d !== void 0 ? _d : (message => { }),\n            onReceiveStatus: (_f = (_e = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _e === void 0 ? void 0 : _e.bind(interceptingListener)) !== null && _f !== void 0 ? _f : (status => { }),\n        };\n        this.processingMetadata = true;\n        this.requester.start(metadata, fullInterceptingListener, (md, listener) => {\n            var _a, _b, _c;\n            this.processingMetadata = false;\n            let finalInterceptingListener;\n            if ((0, call_interface_1.isInterceptingListener)(listener)) {\n                finalInterceptingListener = listener;\n            }\n            else {\n                const fullListener = {\n                    onReceiveMetadata: (_a = listener.onReceiveMetadata) !== null && _a !== void 0 ? _a : defaultListener.onReceiveMetadata,\n                    onReceiveMessage: (_b = listener.onReceiveMessage) !== null && _b !== void 0 ? _b : defaultListener.onReceiveMessage,\n                    onReceiveStatus: (_c = listener.onReceiveStatus) !== null && _c !== void 0 ? _c : defaultListener.onReceiveStatus,\n                };\n                finalInterceptingListener = new call_interface_1.InterceptingListenerImpl(fullListener, fullInterceptingListener);\n            }\n            this.nextCall.start(md, finalInterceptingListener);\n            this.processPendingMessage();\n            this.processPendingHalfClose();\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessageWithContext(context, message) {\n        this.processingMessage = true;\n        this.requester.sendMessage(message, finalMessage => {\n            this.processingMessage = false;\n            if (this.processingMetadata) {\n                this.pendingMessageContext = context;\n                this.pendingMessage = message;\n            }\n            else {\n                this.nextCall.sendMessageWithContext(context, finalMessage);\n                this.processPendingHalfClose();\n            }\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessage(message) {\n        this.sendMessageWithContext({}, message);\n    }\n    startRead() {\n        this.nextCall.startRead();\n    }\n    halfClose() {\n        this.requester.halfClose(() => {\n            if (this.processingMetadata || this.processingMessage) {\n                this.pendingHalfClose = true;\n            }\n            else {\n                this.nextCall.halfClose();\n            }\n        });\n    }\n}\nexports.InterceptingCall = InterceptingCall;\nfunction getCall(channel, path, options) {\n    var _a, _b;\n    const deadline = (_a = options.deadline) !== null && _a !== void 0 ? _a : Infinity;\n    const host = options.host;\n    const parent = (_b = options.parent) !== null && _b !== void 0 ? _b : null;\n    const propagateFlags = options.propagate_flags;\n    const credentials = options.credentials;\n    const call = channel.createCall(path, deadline, host, parent, propagateFlags);\n    if (credentials) {\n        call.setCredentials(credentials);\n    }\n    return call;\n}\n/**\n * InterceptingCall implementation that directly owns the underlying Call\n * object and handles serialization and deseraizliation.\n */\nclass BaseInterceptingCall {\n    constructor(call, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    methodDefinition) {\n        this.call = call;\n        this.methodDefinition = methodDefinition;\n    }\n    cancelWithStatus(status, details) {\n        this.call.cancelWithStatus(status, details);\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessageWithContext(context, message) {\n        let serialized;\n        try {\n            serialized = this.methodDefinition.requestSerialize(message);\n        }\n        catch (e) {\n            this.call.cancelWithStatus(constants_1.Status.INTERNAL, `Request message serialization failure: ${(0, error_1.getErrorMessage)(e)}`);\n            return;\n        }\n        this.call.sendMessageWithContext(context, serialized);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendMessage(message) {\n        this.sendMessageWithContext({}, message);\n    }\n    start(metadata, interceptingListener) {\n        let readError = null;\n        this.call.start(metadata, {\n            onReceiveMetadata: metadata => {\n                var _a;\n                (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, metadata);\n            },\n            onReceiveMessage: message => {\n                var _a;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                let deserialized;\n                try {\n                    deserialized = this.methodDefinition.responseDeserialize(message);\n                }\n                catch (e) {\n                    readError = {\n                        code: constants_1.Status.INTERNAL,\n                        details: `Response message parsing error: ${(0, error_1.getErrorMessage)(e)}`,\n                        metadata: new metadata_1.Metadata(),\n                    };\n                    this.call.cancelWithStatus(readError.code, readError.details);\n                    return;\n                }\n                (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, deserialized);\n            },\n            onReceiveStatus: status => {\n                var _a, _b;\n                if (readError) {\n                    (_a = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _a === void 0 ? void 0 : _a.call(interceptingListener, readError);\n                }\n                else {\n                    (_b = interceptingListener === null || interceptingListener === void 0 ? void 0 : interceptingListener.onReceiveStatus) === null || _b === void 0 ? void 0 : _b.call(interceptingListener, status);\n                }\n            },\n        });\n    }\n    startRead() {\n        this.call.startRead();\n    }\n    halfClose() {\n        this.call.halfClose();\n    }\n}\n/**\n * BaseInterceptingCall with special-cased behavior for methods with unary\n * responses.\n */\nclass BaseUnaryInterceptingCall extends BaseInterceptingCall {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(call, methodDefinition) {\n        super(call, methodDefinition);\n    }\n    start(metadata, listener) {\n        var _a, _b;\n        let receivedMessage = false;\n        const wrapperListener = {\n            onReceiveMetadata: (_b = (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMetadata) === null || _a === void 0 ? void 0 : _a.bind(listener)) !== null && _b !== void 0 ? _b : (metadata => { }),\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage: (message) => {\n                var _a;\n                receivedMessage = true;\n                (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(listener, message);\n            },\n            onReceiveStatus: (status) => {\n                var _a, _b;\n                if (!receivedMessage) {\n                    (_a = listener === null || listener === void 0 ? void 0 : listener.onReceiveMessage) === null || _a === void 0 ? void 0 : _a.call(listener, null);\n                }\n                (_b = listener === null || listener === void 0 ? void 0 : listener.onReceiveStatus) === null || _b === void 0 ? void 0 : _b.call(listener, status);\n            },\n        };\n        super.start(metadata, wrapperListener);\n        this.call.startRead();\n    }\n}\n/**\n * BaseInterceptingCall with special-cased behavior for methods with streaming\n * responses.\n */\nclass BaseStreamingInterceptingCall extends BaseInterceptingCall {\n}\nfunction getBottomInterceptingCall(channel, options, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmethodDefinition) {\n    const call = getCall(channel, methodDefinition.path, options);\n    if (methodDefinition.responseStream) {\n        return new BaseStreamingInterceptingCall(call, methodDefinition);\n    }\n    else {\n        return new BaseUnaryInterceptingCall(call, methodDefinition);\n    }\n}\nfunction getInterceptingCall(interceptorArgs, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmethodDefinition, options, channel) {\n    if (interceptorArgs.clientInterceptors.length > 0 &&\n        interceptorArgs.clientInterceptorProviders.length > 0) {\n        throw new InterceptorConfigurationError('Both interceptors and interceptor_providers were passed as options ' +\n            'to the client constructor. Only one of these is allowed.');\n    }\n    if (interceptorArgs.callInterceptors.length > 0 &&\n        interceptorArgs.callInterceptorProviders.length > 0) {\n        throw new InterceptorConfigurationError('Both interceptors and interceptor_providers were passed as call ' +\n            'options. Only one of these is allowed.');\n    }\n    let interceptors = [];\n    // Interceptors passed to the call override interceptors passed to the client constructor\n    if (interceptorArgs.callInterceptors.length > 0 ||\n        interceptorArgs.callInterceptorProviders.length > 0) {\n        interceptors = []\n            .concat(interceptorArgs.callInterceptors, interceptorArgs.callInterceptorProviders.map(provider => provider(methodDefinition)))\n            .filter(interceptor => interceptor);\n        // Filter out falsy values when providers return nothing\n    }\n    else {\n        interceptors = []\n            .concat(interceptorArgs.clientInterceptors, interceptorArgs.clientInterceptorProviders.map(provider => provider(methodDefinition)))\n            .filter(interceptor => interceptor);\n        // Filter out falsy values when providers return nothing\n    }\n    const interceptorOptions = Object.assign({}, options, {\n        method_definition: methodDefinition,\n    });\n    /* For each interceptor in the list, the nextCall function passed to it is\n     * based on the next interceptor in the list, using a nextCall function\n     * constructed with the following interceptor in the list, and so on. The\n     * initialValue, which is effectively at the end of the list, is a nextCall\n     * function that invokes getBottomInterceptingCall, the result of which\n     * handles (de)serialization and also gets the underlying call from the\n     * channel. */\n    const getCall = interceptors.reduceRight((nextCall, nextInterceptor) => {\n        return currentOptions => nextInterceptor(currentOptions, nextCall);\n    }, (finalOptions) => getBottomInterceptingCall(channel, finalOptions, methodDefinition));\n    return getCall(interceptorOptions);\n}\n//# sourceMappingURL=client-interceptors.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst call_1 = require(\"./call\");\nconst channel_1 = require(\"./channel\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst client_interceptors_1 = require(\"./client-interceptors\");\nconst CHANNEL_SYMBOL = Symbol();\nconst INTERCEPTOR_SYMBOL = Symbol();\nconst INTERCEPTOR_PROVIDER_SYMBOL = Symbol();\nconst CALL_INVOCATION_TRANSFORMER_SYMBOL = Symbol();\nfunction isFunction(arg) {\n    return typeof arg === 'function';\n}\nfunction getErrorStackString(error) {\n    var _a;\n    return ((_a = error.stack) === null || _a === void 0 ? void 0 : _a.split('\\n').slice(1).join('\\n')) || 'no stack trace available';\n}\n/**\n * A generic gRPC client. Primarily useful as a base class for all generated\n * clients.\n */\nclass Client {\n    constructor(address, credentials, options = {}) {\n        var _a, _b;\n        options = Object.assign({}, options);\n        this[INTERCEPTOR_SYMBOL] = (_a = options.interceptors) !== null && _a !== void 0 ? _a : [];\n        delete options.interceptors;\n        this[INTERCEPTOR_PROVIDER_SYMBOL] = (_b = options.interceptor_providers) !== null && _b !== void 0 ? _b : [];\n        delete options.interceptor_providers;\n        if (this[INTERCEPTOR_SYMBOL].length > 0 &&\n            this[INTERCEPTOR_PROVIDER_SYMBOL].length > 0) {\n            throw new Error('Both interceptors and interceptor_providers were passed as options ' +\n                'to the client constructor. Only one of these is allowed.');\n        }\n        this[CALL_INVOCATION_TRANSFORMER_SYMBOL] =\n            options.callInvocationTransformer;\n        delete options.callInvocationTransformer;\n        if (options.channelOverride) {\n            this[CHANNEL_SYMBOL] = options.channelOverride;\n        }\n        else if (options.channelFactoryOverride) {\n            const channelFactoryOverride = options.channelFactoryOverride;\n            delete options.channelFactoryOverride;\n            this[CHANNEL_SYMBOL] = channelFactoryOverride(address, credentials, options);\n        }\n        else {\n            this[CHANNEL_SYMBOL] = new channel_1.ChannelImplementation(address, credentials, options);\n        }\n    }\n    close() {\n        this[CHANNEL_SYMBOL].close();\n    }\n    getChannel() {\n        return this[CHANNEL_SYMBOL];\n    }\n    waitForReady(deadline, callback) {\n        const checkState = (err) => {\n            if (err) {\n                callback(new Error('Failed to connect before the deadline'));\n                return;\n            }\n            let newState;\n            try {\n                newState = this[CHANNEL_SYMBOL].getConnectivityState(true);\n            }\n            catch (e) {\n                callback(new Error('The channel has been closed'));\n                return;\n            }\n            if (newState === connectivity_state_1.ConnectivityState.READY) {\n                callback();\n            }\n            else {\n                try {\n                    this[CHANNEL_SYMBOL].watchConnectivityState(newState, deadline, checkState);\n                }\n                catch (e) {\n                    callback(new Error('The channel has been closed'));\n                }\n            }\n        };\n        setImmediate(checkState);\n    }\n    checkOptionalUnaryResponseArguments(arg1, arg2, arg3) {\n        if (isFunction(arg1)) {\n            return { metadata: new metadata_1.Metadata(), options: {}, callback: arg1 };\n        }\n        else if (isFunction(arg2)) {\n            if (arg1 instanceof metadata_1.Metadata) {\n                return { metadata: arg1, options: {}, callback: arg2 };\n            }\n            else {\n                return { metadata: new metadata_1.Metadata(), options: arg1, callback: arg2 };\n            }\n        }\n        else {\n            if (!(arg1 instanceof metadata_1.Metadata &&\n                arg2 instanceof Object &&\n                isFunction(arg3))) {\n                throw new Error('Incorrect arguments passed');\n            }\n            return { metadata: arg1, options: arg2, callback: arg3 };\n        }\n    }\n    makeUnaryRequest(method, serialize, deserialize, argument, metadata, options, callback) {\n        var _a, _b;\n        const checkedArguments = this.checkOptionalUnaryResponseArguments(metadata, options, callback);\n        const methodDefinition = {\n            path: method,\n            requestStream: false,\n            responseStream: false,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            argument: argument,\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientUnaryCallImpl(),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n            callback: checkedArguments.callback,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const emitter = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        emitter.call = call;\n        let responseMessage = null;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata: metadata => {\n                emitter.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                if (responseMessage !== null) {\n                    call.cancelWithStatus(constants_1.Status.UNIMPLEMENTED, 'Too many responses received');\n                }\n                responseMessage = message;\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                if (status.code === constants_1.Status.OK) {\n                    if (responseMessage === null) {\n                        const callerStack = getErrorStackString(callerStackError);\n                        callProperties.callback((0, call_1.callErrorFromStatus)({\n                            code: constants_1.Status.UNIMPLEMENTED,\n                            details: 'No message received',\n                            metadata: status.metadata,\n                        }, callerStack));\n                    }\n                    else {\n                        callProperties.callback(null, responseMessage);\n                    }\n                }\n                else {\n                    const callerStack = getErrorStackString(callerStackError);\n                    callProperties.callback((0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                emitter.emit('status', status);\n            },\n        });\n        call.sendMessage(argument);\n        call.halfClose();\n        return emitter;\n    }\n    makeClientStreamRequest(method, serialize, deserialize, metadata, options, callback) {\n        var _a, _b;\n        const checkedArguments = this.checkOptionalUnaryResponseArguments(metadata, options, callback);\n        const methodDefinition = {\n            path: method,\n            requestStream: true,\n            responseStream: false,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientWritableStreamImpl(serialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n            callback: checkedArguments.callback,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const emitter = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        emitter.call = call;\n        let responseMessage = null;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata: metadata => {\n                emitter.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                if (responseMessage !== null) {\n                    call.cancelWithStatus(constants_1.Status.UNIMPLEMENTED, 'Too many responses received');\n                }\n                responseMessage = message;\n                call.startRead();\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                if (status.code === constants_1.Status.OK) {\n                    if (responseMessage === null) {\n                        const callerStack = getErrorStackString(callerStackError);\n                        callProperties.callback((0, call_1.callErrorFromStatus)({\n                            code: constants_1.Status.UNIMPLEMENTED,\n                            details: 'No message received',\n                            metadata: status.metadata,\n                        }, callerStack));\n                    }\n                    else {\n                        callProperties.callback(null, responseMessage);\n                    }\n                }\n                else {\n                    const callerStack = getErrorStackString(callerStackError);\n                    callProperties.callback((0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                emitter.emit('status', status);\n            },\n        });\n        return emitter;\n    }\n    checkMetadataAndOptions(arg1, arg2) {\n        let metadata;\n        let options;\n        if (arg1 instanceof metadata_1.Metadata) {\n            metadata = arg1;\n            if (arg2) {\n                options = arg2;\n            }\n            else {\n                options = {};\n            }\n        }\n        else {\n            if (arg1) {\n                options = arg1;\n            }\n            else {\n                options = {};\n            }\n            metadata = new metadata_1.Metadata();\n        }\n        return { metadata, options };\n    }\n    makeServerStreamRequest(method, serialize, deserialize, argument, metadata, options) {\n        var _a, _b;\n        const checkedArguments = this.checkMetadataAndOptions(metadata, options);\n        const methodDefinition = {\n            path: method,\n            requestStream: false,\n            responseStream: true,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            argument: argument,\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientReadableStreamImpl(deserialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const stream = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        stream.call = call;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata(metadata) {\n                stream.emit('metadata', metadata);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onReceiveMessage(message) {\n                stream.push(message);\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                stream.push(null);\n                if (status.code !== constants_1.Status.OK) {\n                    const callerStack = getErrorStackString(callerStackError);\n                    stream.emit('error', (0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                stream.emit('status', status);\n            },\n        });\n        call.sendMessage(argument);\n        call.halfClose();\n        return stream;\n    }\n    makeBidiStreamRequest(method, serialize, deserialize, metadata, options) {\n        var _a, _b;\n        const checkedArguments = this.checkMetadataAndOptions(metadata, options);\n        const methodDefinition = {\n            path: method,\n            requestStream: true,\n            responseStream: true,\n            requestSerialize: serialize,\n            responseDeserialize: deserialize,\n        };\n        let callProperties = {\n            metadata: checkedArguments.metadata,\n            call: new call_1.ClientDuplexStreamImpl(serialize, deserialize),\n            channel: this[CHANNEL_SYMBOL],\n            methodDefinition: methodDefinition,\n            callOptions: checkedArguments.options,\n        };\n        if (this[CALL_INVOCATION_TRANSFORMER_SYMBOL]) {\n            callProperties = this[CALL_INVOCATION_TRANSFORMER_SYMBOL](callProperties);\n        }\n        const stream = callProperties.call;\n        const interceptorArgs = {\n            clientInterceptors: this[INTERCEPTOR_SYMBOL],\n            clientInterceptorProviders: this[INTERCEPTOR_PROVIDER_SYMBOL],\n            callInterceptors: (_a = callProperties.callOptions.interceptors) !== null && _a !== void 0 ? _a : [],\n            callInterceptorProviders: (_b = callProperties.callOptions.interceptor_providers) !== null && _b !== void 0 ? _b : [],\n        };\n        const call = (0, client_interceptors_1.getInterceptingCall)(interceptorArgs, callProperties.methodDefinition, callProperties.callOptions, callProperties.channel);\n        /* This needs to happen before the emitter is used. Unfortunately we can't\n         * enforce this with the type system. We need to construct this emitter\n         * before calling the CallInvocationTransformer, and we need to create the\n         * call after that. */\n        stream.call = call;\n        let receivedStatus = false;\n        let callerStackError = new Error();\n        call.start(callProperties.metadata, {\n            onReceiveMetadata(metadata) {\n                stream.emit('metadata', metadata);\n            },\n            onReceiveMessage(message) {\n                stream.push(message);\n            },\n            onReceiveStatus(status) {\n                if (receivedStatus) {\n                    return;\n                }\n                receivedStatus = true;\n                stream.push(null);\n                if (status.code !== constants_1.Status.OK) {\n                    const callerStack = getErrorStackString(callerStackError);\n                    stream.emit('error', (0, call_1.callErrorFromStatus)(status, callerStack));\n                }\n                /* Avoid retaining the callerStackError object in the call context of\n                 * the status event handler. */\n                callerStackError = null;\n                stream.emit('status', status);\n            },\n        });\n        return stream;\n    }\n}\nexports.Client = Client;\n//# sourceMappingURL=client.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeClientConstructor = makeClientConstructor;\nexports.loadPackageDefinition = loadPackageDefinition;\nconst client_1 = require(\"./client\");\n/**\n * Map with short names for each of the requester maker functions. Used in\n * makeClientConstructor\n * @private\n */\nconst requesterFuncs = {\n    unary: client_1.Client.prototype.makeUnaryRequest,\n    server_stream: client_1.Client.prototype.makeServerStreamRequest,\n    client_stream: client_1.Client.prototype.makeClientStreamRequest,\n    bidi: client_1.Client.prototype.makeBidiStreamRequest,\n};\n/**\n * Returns true, if given key is included in the blacklisted\n * keys.\n * @param key key for check, string.\n */\nfunction isPrototypePolluted(key) {\n    return ['__proto__', 'prototype', 'constructor'].includes(key);\n}\n/**\n * Creates a constructor for a client with the given methods, as specified in\n * the methods argument. The resulting class will have an instance method for\n * each method in the service, which is a partial application of one of the\n * [Client]{@link grpc.Client} request methods, depending on `requestSerialize`\n * and `responseSerialize`, with the `method`, `serialize`, and `deserialize`\n * arguments predefined.\n * @param methods An object mapping method names to\n *     method attributes\n * @param serviceName The fully qualified name of the service\n * @param classOptions An options object.\n * @return New client constructor, which is a subclass of\n *     {@link grpc.Client}, and has the same arguments as that constructor.\n */\nfunction makeClientConstructor(methods, serviceName, classOptions) {\n    if (!classOptions) {\n        classOptions = {};\n    }\n    class ServiceClientImpl extends client_1.Client {\n    }\n    Object.keys(methods).forEach(name => {\n        if (isPrototypePolluted(name)) {\n            return;\n        }\n        const attrs = methods[name];\n        let methodType;\n        // TODO(murgatroid99): Verify that we don't need this anymore\n        if (typeof name === 'string' && name.charAt(0) === '$') {\n            throw new Error('Method names cannot start with $');\n        }\n        if (attrs.requestStream) {\n            if (attrs.responseStream) {\n                methodType = 'bidi';\n            }\n            else {\n                methodType = 'client_stream';\n            }\n        }\n        else {\n            if (attrs.responseStream) {\n                methodType = 'server_stream';\n            }\n            else {\n                methodType = 'unary';\n            }\n        }\n        const serialize = attrs.requestSerialize;\n        const deserialize = attrs.responseDeserialize;\n        const methodFunc = partial(requesterFuncs[methodType], attrs.path, serialize, deserialize);\n        ServiceClientImpl.prototype[name] = methodFunc;\n        // Associate all provided attributes with the method\n        Object.assign(ServiceClientImpl.prototype[name], attrs);\n        if (attrs.originalName && !isPrototypePolluted(attrs.originalName)) {\n            ServiceClientImpl.prototype[attrs.originalName] =\n                ServiceClientImpl.prototype[name];\n        }\n    });\n    ServiceClientImpl.service = methods;\n    ServiceClientImpl.serviceName = serviceName;\n    return ServiceClientImpl;\n}\nfunction partial(fn, path, serialize, deserialize) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (...args) {\n        return fn.call(this, path, serialize, deserialize, ...args);\n    };\n}\nfunction isProtobufTypeDefinition(obj) {\n    return 'format' in obj;\n}\n/**\n * Load a gRPC package definition as a gRPC object hierarchy.\n * @param packageDef The package definition object.\n * @return The resulting gRPC object.\n */\nfunction loadPackageDefinition(packageDef) {\n    const result = {};\n    for (const serviceFqn in packageDef) {\n        if (Object.prototype.hasOwnProperty.call(packageDef, serviceFqn)) {\n            const service = packageDef[serviceFqn];\n            const nameComponents = serviceFqn.split('.');\n            if (nameComponents.some((comp) => isPrototypePolluted(comp))) {\n                continue;\n            }\n            const serviceName = nameComponents[nameComponents.length - 1];\n            let current = result;\n            for (const packageName of nameComponents.slice(0, -1)) {\n                if (!current[packageName]) {\n                    current[packageName] = {};\n                }\n                current = current[packageName];\n            }\n            if (isProtobufTypeDefinition(service)) {\n                current[serviceName] = service;\n            }\n            else {\n                current[serviceName] = makeClientConstructor(service, serviceName, {});\n            }\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=make-client.js.map",
    "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsAstral = '[' + rsAstralRange + ']',\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n  rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n  rsUpper + '+' + rsOptUpperContr,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = camelCase;\n",
    "\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n",
    "\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n",
    "\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n",
    "\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n",
    "\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n",
    "\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n",
    "\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n",
    "\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n",
    "\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n",
    "\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n",
    "\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n",
    "\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n",
    "\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n",
    "\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n",
    "\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n",
    "\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n",
    "\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n",
    "\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n",
    "\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n",
    "\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n",
    "\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n",
    "\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n",
    "\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n",
    "\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\"),\n    OneOf    = require(\"./oneof\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n",
    "\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n",
    "\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n",
    "\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n",
    "\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/",
    "\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n",
    "\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}",
    "\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n",
    "\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n",
    "\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {Array.<number[]|string>} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n",
    "\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        if (sync)\n            throw err;\n        var cb = callback;\n        callback = null;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n        filename = getBundledFileName(filename) || filename;\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        //do not allow to extend same field twice to prevent the error\n        if (extendedType.get(sisterField.name)) {\n            return true;\n        }\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n",
    "\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\" || part === \"prototype\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n",
    "\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n",
    "\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n",
    "\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n",
    "\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n",
    "\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        lastCommentLine = 0,\n        comments = {};\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        var comment = {\n            type: source.charAt(start++),\n            lineEmpty: false,\n            leading: isLeading,\n        };\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                comment.lineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        comment.text = lines\n            .join(\"\\n\")\n            .trim();\n\n        comments[line] = comment;\n        lastCommentLine = line;\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        var isComment = /^\\s*\\/\\//.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                            // Trailing comment cannot not be multi-line,\n                            // so leading comment state should be reset to handle potential next comments\n                            isLeadingComment = true;\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset - 1)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                                if (!isLeadingComment) {\n                                    // Trailing comment cannot not be multi-line\n                                    break;\n                                }\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                            isLeadingComment = true;\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                        isLeadingComment = true;\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        var comment;\n        if (trailingLine === undefined) {\n            comment = comments[line - 1];\n            delete comments[line - 1];\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\n                ret = comment.leading ? comment.text : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (lastCommentLine < trailingLine) {\n                peek();\n            }\n            comment = comments[trailingLine];\n            delete comments[trailingLine];\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\n                ret = comment.leading ? null : comment.text;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n",
    "\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        var dummy = {options: undefined};\n        dummy.setOption = function(name, value) {\n          if (this.options === undefined) this.options = {};\n          this.options[name] = value;\n        };\n        ifBlock(\n            dummy,\n            function parseRange_block(token) {\n              /* istanbul ignore else */\n              if (token === \"option\") {\n                parseOption(dummy, token);  // skip\n                skip(\";\");\n              } else\n                throw illegal(token);\n            },\n            function parseRange_line() {\n              parseInlineOptions(dummy);  // skip\n            });\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-next-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        // Syntax is needed to understand the meaning of the optional field rule\n        // Otherwise the meaning is ambiguous between proto2 and proto3\n        root.setOption(\"syntax\", syntax);\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n        // Type names can consume multiple tokens, in multiple variants:\n        //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        // Keep reading tokens until we get a type name with no period at the end,\n        // and the next token does not start with a period.\n        while (type.endsWith(\".\") || peek().startsWith(\".\")) {\n            type += next();\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"message\":\n                    parseType(type, token);\n                    break;\n\n                case \"enum\":\n                    parseEnum(type, token);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {\n                options: undefined\n            };\n        dummy.setOption = function(name, value) {\n            if (this.options === undefined)\n                this.options = {};\n            this.options[name] = value;\n        };\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment, dummy.options);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.slice(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        // { a: \"foo\" b { c: \"bar\" } }\n        if (skip(\"{\", true)) {\n            var objectResult = {};\n\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next())) {\n                    throw illegal(token, \"name\");\n                }\n                if (token === null) {\n                  throw illegal(token, \"end of input\");\n                }\n\n                var value;\n                var propName = token;\n\n                skip(\":\", true);\n\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else if (peek() === \"[\") {\n                    // option (my_option) = {\n                    //     repeated_value: [ \"foo\", \"bar\" ]\n                    // };\n                    value = [];\n                    var lastValue;\n                    if (skip(\"[\", true)) {\n                        do {\n                            lastValue = readValue(true);\n                            value.push(lastValue);\n                        } while (skip(\",\", true));\n                        skip(\"]\");\n                        if (typeof lastValue !== \"undefined\") {\n                            setOption(parent, name + \".\" + token, lastValue);\n                        }\n                    }\n                } else {\n                    value = readValue(true);\n                    setOption(parent, name + \".\" + token, value);\n                }\n\n                var prevValue = objectResult[propName];\n\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n\n                objectResult[propName] = value;\n\n                // Semicolons and commas can be optional\n                skip(\",\", true);\n                skip(\";\", true);\n            }\n\n            return objectResult;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n",
    "\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n",
    "\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n",
    "\"use strict\";\nvar $protobuf = require(\"../..\");\nmodule.exports = exports = $protobuf.descriptor = $protobuf.Root.fromJSON(require(\"../../google/protobuf/descriptor.json\")).lookup(\".google.protobuf\");\n\nvar Namespace = $protobuf.Namespace,\n    Root      = $protobuf.Root,\n    Enum      = $protobuf.Enum,\n    Type      = $protobuf.Type,\n    Field     = $protobuf.Field,\n    MapField  = $protobuf.MapField,\n    OneOf     = $protobuf.OneOf,\n    Service   = $protobuf.Service,\n    Method    = $protobuf.Method;\n\n// --- Root ---\n\n/**\n * Properties of a FileDescriptorSet message.\n * @interface IFileDescriptorSet\n * @property {IFileDescriptorProto[]} file Files\n */\n\n/**\n * Properties of a FileDescriptorProto message.\n * @interface IFileDescriptorProto\n * @property {string} [name] File name\n * @property {string} [package] Package\n * @property {*} [dependency] Not supported\n * @property {*} [publicDependency] Not supported\n * @property {*} [weakDependency] Not supported\n * @property {IDescriptorProto[]} [messageType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IServiceDescriptorProto[]} [service] Nested services\n * @property {IFieldDescriptorProto[]} [extension] Nested extension fields\n * @property {IFileOptions} [options] Options\n * @property {*} [sourceCodeInfo] Not supported\n * @property {string} [syntax=\"proto2\"] Syntax\n */\n\n/**\n * Properties of a FileOptions message.\n * @interface IFileOptions\n * @property {string} [javaPackage]\n * @property {string} [javaOuterClassname]\n * @property {boolean} [javaMultipleFiles]\n * @property {boolean} [javaGenerateEqualsAndHash]\n * @property {boolean} [javaStringCheckUtf8]\n * @property {IFileOptionsOptimizeMode} [optimizeFor=1]\n * @property {string} [goPackage]\n * @property {boolean} [ccGenericServices]\n * @property {boolean} [javaGenericServices]\n * @property {boolean} [pyGenericServices]\n * @property {boolean} [deprecated]\n * @property {boolean} [ccEnableArenas]\n * @property {string} [objcClassPrefix]\n * @property {string} [csharpNamespace]\n */\n\n/**\n * Values of he FileOptions.OptimizeMode enum.\n * @typedef IFileOptionsOptimizeMode\n * @type {number}\n * @property {number} SPEED=1\n * @property {number} CODE_SIZE=2\n * @property {number} LITE_RUNTIME=3\n */\n\n/**\n * Creates a root from a descriptor set.\n * @param {IFileDescriptorSet|Reader|Uint8Array} descriptor Descriptor\n * @returns {Root} Root instance\n */\nRoot.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.FileDescriptorSet.decode(descriptor);\n\n    var root = new Root();\n\n    if (descriptor.file) {\n        var fileDescriptor,\n            filePackage;\n        for (var j = 0, i; j < descriptor.file.length; ++j) {\n            filePackage = root;\n            if ((fileDescriptor = descriptor.file[j])[\"package\"] && fileDescriptor[\"package\"].length)\n                filePackage = root.define(fileDescriptor[\"package\"]);\n            if (fileDescriptor.name && fileDescriptor.name.length)\n                root.files.push(filePackage.filename = fileDescriptor.name);\n            if (fileDescriptor.messageType)\n                for (i = 0; i < fileDescriptor.messageType.length; ++i)\n                    filePackage.add(Type.fromDescriptor(fileDescriptor.messageType[i], fileDescriptor.syntax));\n            if (fileDescriptor.enumType)\n                for (i = 0; i < fileDescriptor.enumType.length; ++i)\n                    filePackage.add(Enum.fromDescriptor(fileDescriptor.enumType[i]));\n            if (fileDescriptor.extension)\n                for (i = 0; i < fileDescriptor.extension.length; ++i)\n                    filePackage.add(Field.fromDescriptor(fileDescriptor.extension[i]));\n            if (fileDescriptor.service)\n                for (i = 0; i < fileDescriptor.service.length; ++i)\n                    filePackage.add(Service.fromDescriptor(fileDescriptor.service[i]));\n            var opts = fromDescriptorOptions(fileDescriptor.options, exports.FileOptions);\n            if (opts) {\n                var ks = Object.keys(opts);\n                for (i = 0; i < ks.length; ++i)\n                    filePackage.setOption(ks[i], opts[ks[i]]);\n            }\n        }\n    }\n\n    return root;\n};\n\n/**\n * Converts a root to a descriptor set.\n * @returns {Message<IFileDescriptorSet>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nRoot.prototype.toDescriptor = function toDescriptor(syntax) {\n    var set = exports.FileDescriptorSet.create();\n    Root_toDescriptorRecursive(this, set.file, syntax);\n    return set;\n};\n\n// Traverses a namespace and assembles the descriptor set\nfunction Root_toDescriptorRecursive(ns, files, syntax) {\n\n    // Create a new file\n    var file = exports.FileDescriptorProto.create({ name: ns.filename || (ns.fullName.substring(1).replace(/\\./g, \"_\") || \"root\") + \".proto\" });\n    if (syntax)\n        file.syntax = syntax;\n    if (!(ns instanceof Root))\n        file[\"package\"] = ns.fullName.substring(1);\n\n    // Add nested types\n    for (var i = 0, nested; i < ns.nestedArray.length; ++i)\n        if ((nested = ns._nestedArray[i]) instanceof Type)\n            file.messageType.push(nested.toDescriptor(syntax));\n        else if (nested instanceof Enum)\n            file.enumType.push(nested.toDescriptor());\n        else if (nested instanceof Field)\n            file.extension.push(nested.toDescriptor(syntax));\n        else if (nested instanceof Service)\n            file.service.push(nested.toDescriptor());\n        else if (nested instanceof /* plain */ Namespace)\n            Root_toDescriptorRecursive(nested, files, syntax); // requires new file\n\n    // Keep package-level options\n    file.options = toDescriptorOptions(ns.options, exports.FileOptions);\n\n    // And keep the file only if there is at least one nested object\n    if (file.messageType.length + file.enumType.length + file.extension.length + file.service.length)\n        files.push(file);\n}\n\n// --- Type ---\n\n/**\n * Properties of a DescriptorProto message.\n * @interface IDescriptorProto\n * @property {string} [name] Message type name\n * @property {IFieldDescriptorProto[]} [field] Fields\n * @property {IFieldDescriptorProto[]} [extension] Extension fields\n * @property {IDescriptorProto[]} [nestedType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IDescriptorProtoExtensionRange[]} [extensionRange] Extension ranges\n * @property {IOneofDescriptorProto[]} [oneofDecl] Oneofs\n * @property {IMessageOptions} [options] Not supported\n * @property {IDescriptorProtoReservedRange[]} [reservedRange] Reserved ranges\n * @property {string[]} [reservedName] Reserved names\n */\n\n/**\n * Properties of a MessageOptions message.\n * @interface IMessageOptions\n * @property {boolean} [mapEntry=false] Whether this message is a map entry\n */\n\n/**\n * Properties of an ExtensionRange message.\n * @interface IDescriptorProtoExtensionRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\n/**\n * Properties of a ReservedRange message.\n * @interface IDescriptorProtoReservedRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\nvar unnamedMessageIndex = 0;\n\n/**\n * Creates a type from a descriptor.\n * @param {IDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n * @returns {Type} Type instance\n */\nType.fromDescriptor = function fromDescriptor(descriptor, syntax) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    // Create the message type\n    var type = new Type(descriptor.name.length ? descriptor.name : \"Type\" + unnamedMessageIndex++, fromDescriptorOptions(descriptor.options, exports.MessageOptions)),\n        i;\n\n    /* Oneofs */ if (descriptor.oneofDecl)\n        for (i = 0; i < descriptor.oneofDecl.length; ++i)\n            type.add(OneOf.fromDescriptor(descriptor.oneofDecl[i]));\n    /* Fields */ if (descriptor.field)\n        for (i = 0; i < descriptor.field.length; ++i) {\n            var field = Field.fromDescriptor(descriptor.field[i], syntax);\n            type.add(field);\n            if (descriptor.field[i].hasOwnProperty(\"oneofIndex\")) // eslint-disable-line no-prototype-builtins\n                type.oneofsArray[descriptor.field[i].oneofIndex].add(field);\n        }\n    /* Extension fields */ if (descriptor.extension)\n        for (i = 0; i < descriptor.extension.length; ++i)\n            type.add(Field.fromDescriptor(descriptor.extension[i], syntax));\n    /* Nested types */ if (descriptor.nestedType)\n        for (i = 0; i < descriptor.nestedType.length; ++i) {\n            type.add(Type.fromDescriptor(descriptor.nestedType[i], syntax));\n            if (descriptor.nestedType[i].options && descriptor.nestedType[i].options.mapEntry)\n                type.setOption(\"map_entry\", true);\n        }\n    /* Nested enums */ if (descriptor.enumType)\n        for (i = 0; i < descriptor.enumType.length; ++i)\n            type.add(Enum.fromDescriptor(descriptor.enumType[i]));\n    /* Extension ranges */ if (descriptor.extensionRange && descriptor.extensionRange.length) {\n        type.extensions = [];\n        for (i = 0; i < descriptor.extensionRange.length; ++i)\n            type.extensions.push([ descriptor.extensionRange[i].start, descriptor.extensionRange[i].end ]);\n    }\n    /* Reserved... */ if (descriptor.reservedRange && descriptor.reservedRange.length || descriptor.reservedName && descriptor.reservedName.length) {\n        type.reserved = [];\n        /* Ranges */ if (descriptor.reservedRange)\n            for (i = 0; i < descriptor.reservedRange.length; ++i)\n                type.reserved.push([ descriptor.reservedRange[i].start, descriptor.reservedRange[i].end ]);\n        /* Names */ if (descriptor.reservedName)\n            for (i = 0; i < descriptor.reservedName.length; ++i)\n                type.reserved.push(descriptor.reservedName[i]);\n    }\n\n    return type;\n};\n\n/**\n * Converts a type to a descriptor.\n * @returns {Message<IDescriptorProto>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nType.prototype.toDescriptor = function toDescriptor(syntax) {\n    var descriptor = exports.DescriptorProto.create({ name: this.name }),\n        i;\n\n    /* Fields */ for (i = 0; i < this.fieldsArray.length; ++i) {\n        var fieldDescriptor;\n        descriptor.field.push(fieldDescriptor = this._fieldsArray[i].toDescriptor(syntax));\n        if (this._fieldsArray[i] instanceof MapField) { // map fields are repeated FieldNameEntry\n            var keyType = toDescriptorType(this._fieldsArray[i].keyType, this._fieldsArray[i].resolvedKeyType),\n                valueType = toDescriptorType(this._fieldsArray[i].type, this._fieldsArray[i].resolvedType),\n                valueTypeName = valueType === /* type */ 11 || valueType === /* enum */ 14\n                    ? this._fieldsArray[i].resolvedType && shortname(this.parent, this._fieldsArray[i].resolvedType) || this._fieldsArray[i].type\n                    : undefined;\n            descriptor.nestedType.push(exports.DescriptorProto.create({\n                name: fieldDescriptor.typeName,\n                field: [\n                    exports.FieldDescriptorProto.create({ name: \"key\", number: 1, label: 1, type: keyType }), // can't reference a type or enum\n                    exports.FieldDescriptorProto.create({ name: \"value\", number: 2, label: 1, type: valueType, typeName: valueTypeName })\n                ],\n                options: exports.MessageOptions.create({ mapEntry: true })\n            }));\n        }\n    }\n    /* Oneofs */ for (i = 0; i < this.oneofsArray.length; ++i)\n        descriptor.oneofDecl.push(this._oneofsArray[i].toDescriptor());\n    /* Nested... */ for (i = 0; i < this.nestedArray.length; ++i) {\n        /* Extension fields */ if (this._nestedArray[i] instanceof Field)\n            descriptor.field.push(this._nestedArray[i].toDescriptor(syntax));\n        /* Types */ else if (this._nestedArray[i] instanceof Type)\n            descriptor.nestedType.push(this._nestedArray[i].toDescriptor(syntax));\n        /* Enums */ else if (this._nestedArray[i] instanceof Enum)\n            descriptor.enumType.push(this._nestedArray[i].toDescriptor());\n        // plain nested namespaces become packages instead in Root#toDescriptor\n    }\n    /* Extension ranges */ if (this.extensions)\n        for (i = 0; i < this.extensions.length; ++i)\n            descriptor.extensionRange.push(exports.DescriptorProto.ExtensionRange.create({ start: this.extensions[i][0], end: this.extensions[i][1] }));\n    /* Reserved... */ if (this.reserved)\n        for (i = 0; i < this.reserved.length; ++i)\n            /* Names */ if (typeof this.reserved[i] === \"string\")\n                descriptor.reservedName.push(this.reserved[i]);\n            /* Ranges */ else\n                descriptor.reservedRange.push(exports.DescriptorProto.ReservedRange.create({ start: this.reserved[i][0], end: this.reserved[i][1] }));\n\n    descriptor.options = toDescriptorOptions(this.options, exports.MessageOptions);\n\n    return descriptor;\n};\n\n// --- Field ---\n\n/**\n * Properties of a FieldDescriptorProto message.\n * @interface IFieldDescriptorProto\n * @property {string} [name] Field name\n * @property {number} [number] Field id\n * @property {IFieldDescriptorProtoLabel} [label] Field rule\n * @property {IFieldDescriptorProtoType} [type] Field basic type\n * @property {string} [typeName] Field type name\n * @property {string} [extendee] Extended type name\n * @property {string} [defaultValue] Literal default value\n * @property {number} [oneofIndex] Oneof index if part of a oneof\n * @property {*} [jsonName] Not supported\n * @property {IFieldOptions} [options] Field options\n */\n\n/**\n * Values of the FieldDescriptorProto.Label enum.\n * @typedef IFieldDescriptorProtoLabel\n * @type {number}\n * @property {number} LABEL_OPTIONAL=1\n * @property {number} LABEL_REQUIRED=2\n * @property {number} LABEL_REPEATED=3\n */\n\n/**\n * Values of the FieldDescriptorProto.Type enum.\n * @typedef IFieldDescriptorProtoType\n * @type {number}\n * @property {number} TYPE_DOUBLE=1\n * @property {number} TYPE_FLOAT=2\n * @property {number} TYPE_INT64=3\n * @property {number} TYPE_UINT64=4\n * @property {number} TYPE_INT32=5\n * @property {number} TYPE_FIXED64=6\n * @property {number} TYPE_FIXED32=7\n * @property {number} TYPE_BOOL=8\n * @property {number} TYPE_STRING=9\n * @property {number} TYPE_GROUP=10\n * @property {number} TYPE_MESSAGE=11\n * @property {number} TYPE_BYTES=12\n * @property {number} TYPE_UINT32=13\n * @property {number} TYPE_ENUM=14\n * @property {number} TYPE_SFIXED32=15\n * @property {number} TYPE_SFIXED64=16\n * @property {number} TYPE_SINT32=17\n * @property {number} TYPE_SINT64=18\n */\n\n/**\n * Properties of a FieldOptions message.\n * @interface IFieldOptions\n * @property {boolean} [packed] Whether packed or not (defaults to `false` for proto2 and `true` for proto3)\n * @property {IFieldOptionsJSType} [jstype] JavaScript value type (not used by protobuf.js)\n */\n\n/**\n * Values of the FieldOptions.JSType enum.\n * @typedef IFieldOptionsJSType\n * @type {number}\n * @property {number} JS_NORMAL=0\n * @property {number} JS_STRING=1\n * @property {number} JS_NUMBER=2\n */\n\n// copied here from parse.js\nvar numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/;\n\n/**\n * Creates a field from a descriptor.\n * @param {IFieldDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n * @returns {Field} Field instance\n */\nField.fromDescriptor = function fromDescriptor(descriptor, syntax) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    if (typeof descriptor.number !== \"number\")\n        throw Error(\"missing field id\");\n\n    // Rewire field type\n    var fieldType;\n    if (descriptor.typeName && descriptor.typeName.length)\n        fieldType = descriptor.typeName;\n    else\n        fieldType = fromDescriptorType(descriptor.type);\n\n    // Rewire field rule\n    var fieldRule;\n    switch (descriptor.label) {\n        // 0 is reserved for errors\n        case 1: fieldRule = undefined; break;\n        case 2: fieldRule = \"required\"; break;\n        case 3: fieldRule = \"repeated\"; break;\n        default: throw Error(\"illegal label: \" + descriptor.label);\n    }\n\n\tvar extendee = descriptor.extendee;\n\tif (descriptor.extendee !== undefined) {\n\t\textendee = extendee.length ? extendee : undefined;\n\t}\n    var field = new Field(\n        descriptor.name.length ? descriptor.name : \"field\" + descriptor.number,\n        descriptor.number,\n        fieldType,\n        fieldRule,\n        extendee\n    );\n\n    field.options = fromDescriptorOptions(descriptor.options, exports.FieldOptions);\n\n    if (descriptor.defaultValue && descriptor.defaultValue.length) {\n        var defaultValue = descriptor.defaultValue;\n        switch (defaultValue) {\n            case \"true\": case \"TRUE\":\n                defaultValue = true;\n                break;\n            case \"false\": case \"FALSE\":\n                defaultValue = false;\n                break;\n            default:\n                var match = numberRe.exec(defaultValue);\n                if (match)\n                    defaultValue = parseInt(defaultValue); // eslint-disable-line radix\n                break;\n        }\n        field.setOption(\"default\", defaultValue);\n    }\n\n    if (packableDescriptorType(descriptor.type)) {\n        if (syntax === \"proto3\") { // defaults to packed=true (internal preset is packed=true)\n            if (descriptor.options && !descriptor.options.packed)\n                field.setOption(\"packed\", false);\n        } else if (!(descriptor.options && descriptor.options.packed)) // defaults to packed=false\n            field.setOption(\"packed\", false);\n    }\n\n    return field;\n};\n\n/**\n * Converts a field to a descriptor.\n * @returns {Message<IFieldDescriptorProto>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nField.prototype.toDescriptor = function toDescriptor(syntax) {\n    var descriptor = exports.FieldDescriptorProto.create({ name: this.name, number: this.id });\n\n    if (this.map) {\n\n        descriptor.type = 11; // message\n        descriptor.typeName = $protobuf.util.ucFirst(this.name); // fieldName -> FieldNameEntry (built in Type#toDescriptor)\n        descriptor.label = 3; // repeated\n\n    } else {\n\n        // Rewire field type\n        switch (descriptor.type = toDescriptorType(this.type, this.resolve().resolvedType)) {\n            case 10: // group\n            case 11: // type\n            case 14: // enum\n                descriptor.typeName = this.resolvedType ? shortname(this.parent, this.resolvedType) : this.type;\n                break;\n        }\n\n        // Rewire field rule\n        switch (this.rule) {\n            case \"repeated\": descriptor.label = 3; break;\n            case \"required\": descriptor.label = 2; break;\n            default: descriptor.label = 1; break;\n        }\n\n    }\n\n    // Handle extension field\n    descriptor.extendee = this.extensionField ? this.extensionField.parent.fullName : this.extend;\n\n    // Handle part of oneof\n    if (this.partOf)\n        if ((descriptor.oneofIndex = this.parent.oneofsArray.indexOf(this.partOf)) < 0)\n            throw Error(\"missing oneof\");\n\n    if (this.options) {\n        descriptor.options = toDescriptorOptions(this.options, exports.FieldOptions);\n        if (this.options[\"default\"] != null)\n            descriptor.defaultValue = String(this.options[\"default\"]);\n    }\n\n    if (syntax === \"proto3\") { // defaults to packed=true\n        if (!this.packed)\n            (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = false;\n    } else if (this.packed) // defaults to packed=false\n        (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = true;\n\n    return descriptor;\n};\n\n// --- Enum ---\n\n/**\n * Properties of an EnumDescriptorProto message.\n * @interface IEnumDescriptorProto\n * @property {string} [name] Enum name\n * @property {IEnumValueDescriptorProto[]} [value] Enum values\n * @property {IEnumOptions} [options] Enum options\n */\n\n/**\n * Properties of an EnumValueDescriptorProto message.\n * @interface IEnumValueDescriptorProto\n * @property {string} [name] Name\n * @property {number} [number] Value\n * @property {*} [options] Not supported\n */\n\n/**\n * Properties of an EnumOptions message.\n * @interface IEnumOptions\n * @property {boolean} [allowAlias] Whether aliases are allowed\n * @property {boolean} [deprecated]\n */\n\nvar unnamedEnumIndex = 0;\n\n/**\n * Creates an enum from a descriptor.\n * @param {IEnumDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Enum} Enum instance\n */\nEnum.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.EnumDescriptorProto.decode(descriptor);\n\n    // Construct values object\n    var values = {};\n    if (descriptor.value)\n        for (var i = 0; i < descriptor.value.length; ++i) {\n            var name  = descriptor.value[i].name,\n                value = descriptor.value[i].number || 0;\n            values[name && name.length ? name : \"NAME\" + value] = value;\n        }\n\n    return new Enum(\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Enum\" + unnamedEnumIndex++,\n        values,\n        fromDescriptorOptions(descriptor.options, exports.EnumOptions)\n    );\n};\n\n/**\n * Converts an enum to a descriptor.\n * @returns {Message<IEnumDescriptorProto>} Descriptor\n */\nEnum.prototype.toDescriptor = function toDescriptor() {\n\n    // Values\n    var values = [];\n    for (var i = 0, ks = Object.keys(this.values); i < ks.length; ++i)\n        values.push(exports.EnumValueDescriptorProto.create({ name: ks[i], number: this.values[ks[i]] }));\n\n    return exports.EnumDescriptorProto.create({\n        name: this.name,\n        value: values,\n        options: toDescriptorOptions(this.options, exports.EnumOptions)\n    });\n};\n\n// --- OneOf ---\n\n/**\n * Properties of a OneofDescriptorProto message.\n * @interface IOneofDescriptorProto\n * @property {string} [name] Oneof name\n * @property {*} [options] Not supported\n */\n\nvar unnamedOneofIndex = 0;\n\n/**\n * Creates a oneof from a descriptor.\n * @param {IOneofDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {OneOf} OneOf instance\n */\nOneOf.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.OneofDescriptorProto.decode(descriptor);\n\n    return new OneOf(\n        // unnamedOneOfIndex is global, not per type, because we have no ref to a type here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"oneof\" + unnamedOneofIndex++\n        // fromDescriptorOptions(descriptor.options, exports.OneofOptions) - only uninterpreted_option\n    );\n};\n\n/**\n * Converts a oneof to a descriptor.\n * @returns {Message<IOneofDescriptorProto>} Descriptor\n */\nOneOf.prototype.toDescriptor = function toDescriptor() {\n    return exports.OneofDescriptorProto.create({\n        name: this.name\n        // options: toDescriptorOptions(this.options, exports.OneofOptions) - only uninterpreted_option\n    });\n};\n\n// --- Service ---\n\n/**\n * Properties of a ServiceDescriptorProto message.\n * @interface IServiceDescriptorProto\n * @property {string} [name] Service name\n * @property {IMethodDescriptorProto[]} [method] Methods\n * @property {IServiceOptions} [options] Options\n */\n\n/**\n * Properties of a ServiceOptions message.\n * @interface IServiceOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedServiceIndex = 0;\n\n/**\n * Creates a service from a descriptor.\n * @param {IServiceDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Service} Service instance\n */\nService.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.ServiceDescriptorProto.decode(descriptor);\n\n    var service = new Service(descriptor.name && descriptor.name.length ? descriptor.name : \"Service\" + unnamedServiceIndex++, fromDescriptorOptions(descriptor.options, exports.ServiceOptions));\n    if (descriptor.method)\n        for (var i = 0; i < descriptor.method.length; ++i)\n            service.add(Method.fromDescriptor(descriptor.method[i]));\n\n    return service;\n};\n\n/**\n * Converts a service to a descriptor.\n * @returns {Message<IServiceDescriptorProto>} Descriptor\n */\nService.prototype.toDescriptor = function toDescriptor() {\n\n    // Methods\n    var methods = [];\n    for (var i = 0; i < this.methodsArray.length; ++i)\n        methods.push(this._methodsArray[i].toDescriptor());\n\n    return exports.ServiceDescriptorProto.create({\n        name: this.name,\n        method: methods,\n        options: toDescriptorOptions(this.options, exports.ServiceOptions)\n    });\n};\n\n// --- Method ---\n\n/**\n * Properties of a MethodDescriptorProto message.\n * @interface IMethodDescriptorProto\n * @property {string} [name] Method name\n * @property {string} [inputType] Request type name\n * @property {string} [outputType] Response type name\n * @property {IMethodOptions} [options] Not supported\n * @property {boolean} [clientStreaming=false] Whether requests are streamed\n * @property {boolean} [serverStreaming=false] Whether responses are streamed\n */\n\n/**\n * Properties of a MethodOptions message.\n * @interface IMethodOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedMethodIndex = 0;\n\n/**\n * Creates a method from a descriptor.\n * @param {IMethodDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Method} Reflected method instance\n */\nMethod.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.MethodDescriptorProto.decode(descriptor);\n\n    return new Method(\n        // unnamedMethodIndex is global, not per service, because we have no ref to a service here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Method\" + unnamedMethodIndex++,\n        \"rpc\",\n        descriptor.inputType,\n        descriptor.outputType,\n        Boolean(descriptor.clientStreaming),\n        Boolean(descriptor.serverStreaming),\n        fromDescriptorOptions(descriptor.options, exports.MethodOptions)\n    );\n};\n\n/**\n * Converts a method to a descriptor.\n * @returns {Message<IMethodDescriptorProto>} Descriptor\n */\nMethod.prototype.toDescriptor = function toDescriptor() {\n    return exports.MethodDescriptorProto.create({\n        name: this.name,\n        inputType: this.resolvedRequestType ? this.resolvedRequestType.fullName : this.requestType,\n        outputType: this.resolvedResponseType ? this.resolvedResponseType.fullName : this.responseType,\n        clientStreaming: this.requestStream,\n        serverStreaming: this.responseStream,\n        options: toDescriptorOptions(this.options, exports.MethodOptions)\n    });\n};\n\n// --- utility ---\n\n// Converts a descriptor type to a protobuf.js basic type\nfunction fromDescriptorType(type) {\n    switch (type) {\n        // 0 is reserved for errors\n        case 1: return \"double\";\n        case 2: return \"float\";\n        case 3: return \"int64\";\n        case 4: return \"uint64\";\n        case 5: return \"int32\";\n        case 6: return \"fixed64\";\n        case 7: return \"fixed32\";\n        case 8: return \"bool\";\n        case 9: return \"string\";\n        case 12: return \"bytes\";\n        case 13: return \"uint32\";\n        case 15: return \"sfixed32\";\n        case 16: return \"sfixed64\";\n        case 17: return \"sint32\";\n        case 18: return \"sint64\";\n    }\n    throw Error(\"illegal type: \" + type);\n}\n\n// Tests if a descriptor type is packable\nfunction packableDescriptorType(type) {\n    switch (type) {\n        case 1: // double\n        case 2: // float\n        case 3: // int64\n        case 4: // uint64\n        case 5: // int32\n        case 6: // fixed64\n        case 7: // fixed32\n        case 8: // bool\n        case 13: // uint32\n        case 14: // enum (!)\n        case 15: // sfixed32\n        case 16: // sfixed64\n        case 17: // sint32\n        case 18: // sint64\n            return true;\n    }\n    return false;\n}\n\n// Converts a protobuf.js basic type to a descriptor type\nfunction toDescriptorType(type, resolvedType) {\n    switch (type) {\n        // 0 is reserved for errors\n        case \"double\": return 1;\n        case \"float\": return 2;\n        case \"int64\": return 3;\n        case \"uint64\": return 4;\n        case \"int32\": return 5;\n        case \"fixed64\": return 6;\n        case \"fixed32\": return 7;\n        case \"bool\": return 8;\n        case \"string\": return 9;\n        case \"bytes\": return 12;\n        case \"uint32\": return 13;\n        case \"sfixed32\": return 15;\n        case \"sfixed64\": return 16;\n        case \"sint32\": return 17;\n        case \"sint64\": return 18;\n    }\n    if (resolvedType instanceof Enum)\n        return 14;\n    if (resolvedType instanceof Type)\n        return resolvedType.group ? 10 : 11;\n    throw Error(\"illegal type: \" + type);\n}\n\n// Converts descriptor options to an options object\nfunction fromDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    var out = [];\n    for (var i = 0, field, key, val; i < type.fieldsArray.length; ++i)\n        if ((key = (field = type._fieldsArray[i]).name) !== \"uninterpretedOption\")\n            if (options.hasOwnProperty(key)) { // eslint-disable-line no-prototype-builtins\n                val = options[key];\n                if (field.resolvedType instanceof Enum && typeof val === \"number\" && field.resolvedType.valuesById[val] !== undefined)\n                    val = field.resolvedType.valuesById[val];\n                out.push(underScore(key), val);\n            }\n    return out.length ? $protobuf.util.toObject(out) : undefined;\n}\n\n// Converts an options object to descriptor options\nfunction toDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    var out = [];\n    for (var i = 0, ks = Object.keys(options), key, val; i < ks.length; ++i) {\n        val = options[key = ks[i]];\n        if (key === \"default\")\n            continue;\n        var field = type.fields[key];\n        if (!field && !(field = type.fields[key = $protobuf.util.camelCase(key)]))\n            continue;\n        out.push(key, val);\n    }\n    return out.length ? type.fromObject($protobuf.util.toObject(out)) : undefined;\n}\n\n// Calculates the shortest relative path from `from` to `to`.\nfunction shortname(from, to) {\n    var fromPath = from.fullName.split(\".\"),\n        toPath = to.fullName.split(\".\"),\n        i = 0,\n        j = 0,\n        k = toPath.length - 1;\n    if (!(from instanceof Root) && to instanceof Namespace)\n        while (i < fromPath.length && j < k && fromPath[i] === toPath[j]) {\n            var other = to.lookup(fromPath[i++], true);\n            if (other !== null && other !== to)\n                break;\n            ++j;\n        }\n    else\n        for (; i < fromPath.length && j < k && fromPath[i] === toPath[j]; ++i, ++j);\n    return toPath.slice(j).join(\".\");\n}\n\n// copied here from cli/targets/proto.js\nfunction underScore(str) {\n    return str.substring(0,1)\n         + str.substring(1)\n               .replace(/([A-Z])(?=[a-z]|$)/g, function($0, $1) { return \"_\" + $1.toLowerCase(); });\n}\n\n// --- exports ---\n\n/**\n * Reflected file descriptor set.\n * @name FileDescriptorSet\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file descriptor proto.\n * @name FileDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected descriptor proto.\n * @name DescriptorProto\n * @type {Type}\n * @property {Type} ExtensionRange\n * @property {Type} ReservedRange\n * @const\n * @tstype $protobuf.Type & {\n *     ExtensionRange: $protobuf.Type,\n *     ReservedRange: $protobuf.Type\n * }\n */\n\n/**\n * Reflected field descriptor proto.\n * @name FieldDescriptorProto\n * @type {Type}\n * @property {Enum} Label\n * @property {Enum} Type\n * @const\n * @tstype $protobuf.Type & {\n *     Label: $protobuf.Enum,\n *     Type: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof descriptor proto.\n * @name OneofDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum descriptor proto.\n * @name EnumDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service descriptor proto.\n * @name ServiceDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value descriptor proto.\n * @name EnumValueDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method descriptor proto.\n * @name MethodDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file options.\n * @name FileOptions\n * @type {Type}\n * @property {Enum} OptimizeMode\n * @const\n * @tstype $protobuf.Type & {\n *     OptimizeMode: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected message options.\n * @name MessageOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected field options.\n * @name FieldOptions\n * @type {Type}\n * @property {Enum} CType\n * @property {Enum} JSType\n * @const\n * @tstype $protobuf.Type & {\n *     CType: $protobuf.Enum,\n *     JSType: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof options.\n * @name OneofOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum options.\n * @name EnumOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value options.\n * @name EnumValueOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service options.\n * @name ServiceOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method options.\n * @name MethodOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected uninterpretet option.\n * @name UninterpretedOption\n * @type {Type}\n * @property {Type} NamePart\n * @const\n * @tstype $protobuf.Type & {\n *     NamePart: $protobuf.Type\n * }\n */\n\n/**\n * Reflected source code info.\n * @name SourceCodeInfo\n * @type {Type}\n * @property {Type} Location\n * @const\n * @tstype $protobuf.Type & {\n *     Location: $protobuf.Type\n * }\n */\n\n/**\n * Reflected generated code info.\n * @name GeneratedCodeInfo\n * @type {Type}\n * @property {Type} Annotation\n * @const\n * @tstype $protobuf.Type & {\n *     Annotation: $protobuf.Type\n * }\n */\n",
    "\"use strict\";\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addCommonProtos = exports.loadProtosWithOptionsSync = exports.loadProtosWithOptions = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst Protobuf = require(\"protobufjs\");\nfunction addIncludePathResolver(root, includePaths) {\n    const originalResolvePath = root.resolvePath;\n    root.resolvePath = (origin, target) => {\n        if (path.isAbsolute(target)) {\n            return target;\n        }\n        for (const directory of includePaths) {\n            const fullPath = path.join(directory, target);\n            try {\n                fs.accessSync(fullPath, fs.constants.R_OK);\n                return fullPath;\n            }\n            catch (err) {\n                continue;\n            }\n        }\n        process.emitWarning(`${target} not found in any of the include paths ${includePaths}`);\n        return originalResolvePath(origin, target);\n    };\n}\nasync function loadProtosWithOptions(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            return Promise.reject(new Error('The includeDirs option must be an array'));\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = await root.load(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptions = loadProtosWithOptions;\nfunction loadProtosWithOptionsSync(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            throw new Error('The includeDirs option must be an array');\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = root.loadSync(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptionsSync = loadProtosWithOptionsSync;\n/**\n * Load Google's well-known proto files that aren't exposed by Protobuf.js.\n */\nfunction addCommonProtos() {\n    // Protobuf.js exposes: any, duration, empty, field_mask, struct, timestamp,\n    // and wrappers. compiler/plugin is excluded in Protobuf.js and here.\n    // Using constant strings for compatibility with tools like Webpack\n    const apiDescriptor = require('protobufjs/google/protobuf/api.json');\n    const descriptorDescriptor = require('protobufjs/google/protobuf/descriptor.json');\n    const sourceContextDescriptor = require('protobufjs/google/protobuf/source_context.json');\n    const typeDescriptor = require('protobufjs/google/protobuf/type.json');\n    Protobuf.common('api', apiDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('descriptor', descriptorDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('source_context', sourceContextDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('type', typeDescriptor.nested.google.nested.protobuf.nested);\n}\nexports.addCommonProtos = addCommonProtos;\n//# sourceMappingURL=util.js.map",
    "// GENERATED FILE. DO NOT EDIT.\nvar Long = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  /**\n   * @license\n   * Copyright 2009 The Closure Library Authors\n   * Copyright 2020 Daniel Wirtz / The long.js Authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   * SPDX-License-Identifier: Apache-2.0\n   */\n  \n  // WebAssembly optimizations to do native i64 multiplication and divide\n  var wasm = null;\n  try {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n    // \\0asm\n    0, 97, 115, 109,\n    // version 1\n    1, 0, 0, 0,\n    // section \"type\"\n    1, 13, 2,\n    // 0, () => i32\n    96, 0, 1, 127,\n    // 1, (i32, i32, i32, i32) => i32\n    96, 4, 127, 127, 127, 127, 1, 127,\n    // section \"function\"\n    3, 7, 6,\n    // 0, type 0\n    0,\n    // 1, type 1\n    1,\n    // 2, type 1\n    1,\n    // 3, type 1\n    1,\n    // 4, type 1\n    1,\n    // 5, type 1\n    1,\n    // section \"global\"\n    6, 6, 1,\n    // 0, \"high\", mutable i32\n    127, 1, 65, 0, 11,\n    // section \"export\"\n    7, 50, 6,\n    // 0, \"mul\"\n    3, 109, 117, 108, 0, 1,\n    // 1, \"div_s\"\n    5, 100, 105, 118, 95, 115, 0, 2,\n    // 2, \"div_u\"\n    5, 100, 105, 118, 95, 117, 0, 3,\n    // 3, \"rem_s\"\n    5, 114, 101, 109, 95, 115, 0, 4,\n    // 4, \"rem_u\"\n    5, 114, 101, 109, 95, 117, 0, 5,\n    // 5, \"get_high\"\n    8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0,\n    // section \"code\"\n    10, 191, 1, 6,\n    // 0, \"get_high\"\n    4, 0, 35, 0, 11,\n    // 1, \"mul\"\n    36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11,\n    // 2, \"div_s\"\n    36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11,\n    // 3, \"div_u\"\n    36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11,\n    // 4, \"rem_s\"\n    36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11,\n    // 5, \"rem_u\"\n    36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n  } catch {\n    // no wasm support :(\n  }\n  \n  /**\n   * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n   *  See the from* functions below for more convenient ways of constructing Longs.\n   * @exports Long\n   * @class A Long class for representing a 64 bit two's-complement integer value.\n   * @param {number} low The low (signed) 32 bits of the long\n   * @param {number} high The high (signed) 32 bits of the long\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @constructor\n   */\n  function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n  \n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n  \n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n  }\n  \n  // The internal representation of a long is the two given signed, 32-bit values.\n  // We use 32-bit pieces because these are the size of integers on which\n  // Javascript performs bit-operations.  For operations like addition and\n  // multiplication, we split each number into 16 bit pieces, which can easily be\n  // multiplied within Javascript's floating-point representation without overflow\n  // or change in sign.\n  //\n  // In the algorithms below, we frequently reduce the negative case to the\n  // positive case by negating the input(s) and then post-processing the result.\n  // Note that we must ALWAYS check specially whether those values are MIN_VALUE\n  // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n  // a positive number, it overflows back into a negative).  Not handling this\n  // case would often result in infinite recursion.\n  //\n  // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n  // methods on which they depend.\n  \n  /**\n   * An indicator used to reliably determine if an object is a Long or not.\n   * @type {boolean}\n   * @const\n   * @private\n   */\n  Long.prototype.__isLong__;\n  Object.defineProperty(Long.prototype, \"__isLong__\", {\n    value: true\n  });\n  \n  /**\n   * @function\n   * @param {*} obj Object\n   * @returns {boolean}\n   * @inner\n   */\n  function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n  }\n  \n  /**\n   * @function\n   * @param {*} value number\n   * @returns {number}\n   * @inner\n   */\n  function ctz32(value) {\n    var c = Math.clz32(value & -value);\n    return value ? 31 - c : c;\n  }\n  \n  /**\n   * Tests if the specified object is a Long.\n   * @function\n   * @param {*} obj Object\n   * @returns {boolean}\n   */\n  Long.isLong = isLong;\n  \n  /**\n   * A cache of the Long representations of small integer values.\n   * @type {!Object}\n   * @inner\n   */\n  var INT_CACHE = {};\n  \n  /**\n   * A cache of the Long representations of small unsigned integer values.\n   * @type {!Object}\n   * @inner\n   */\n  var UINT_CACHE = {};\n  \n  /**\n   * @param {number} value\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n      value >>>= 0;\n      if (cache = 0 <= value && value < 256) {\n        cachedObj = UINT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n      obj = fromBits(value, 0, true);\n      if (cache) UINT_CACHE[value] = obj;\n      return obj;\n    } else {\n      value |= 0;\n      if (cache = -128 <= value && value < 128) {\n        cachedObj = INT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n      obj = fromBits(value, value < 0 ? -1 : 0, false);\n      if (cache) INT_CACHE[value] = obj;\n      return obj;\n    }\n  }\n  \n  /**\n   * Returns a Long representing the given 32 bit integer value.\n   * @function\n   * @param {number} value The 32 bit integer in question\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  Long.fromInt = fromInt;\n  \n  /**\n   * @param {number} value\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  function fromNumber(value, unsigned) {\n    if (isNaN(value)) return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n      if (value < 0) return UZERO;\n      if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n    } else {\n      if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;\n      if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;\n    }\n    if (value < 0) return fromNumber(-value, unsigned).neg();\n    return fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);\n  }\n  \n  /**\n   * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n   * @function\n   * @param {number} value The number in question\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  Long.fromNumber = fromNumber;\n  \n  /**\n   * @param {number} lowBits\n   * @param {number} highBits\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n  }\n  \n  /**\n   * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n   *  assumed to use 32 bits.\n   * @function\n   * @param {number} lowBits The low 32 bits\n   * @param {number} highBits The high 32 bits\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  Long.fromBits = fromBits;\n  \n  /**\n   * @function\n   * @param {number} base\n   * @param {number} exponent\n   * @returns {number}\n   * @inner\n   */\n  var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n  \n  /**\n   * @param {string} str\n   * @param {(boolean|number)=} unsigned\n   * @param {number=} radix\n   * @returns {!Long}\n   * @inner\n   */\n  function fromString(str, unsigned, radix) {\n    if (str.length === 0) throw Error('empty string');\n    if (typeof unsigned === 'number') {\n      // For goog.math.long compatibility\n      radix = unsigned;\n      unsigned = false;\n    } else {\n      unsigned = !!unsigned;\n    }\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\") return unsigned ? UZERO : ZERO;\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n    var p;\n    if ((p = str.indexOf('-')) > 0) throw Error('interior hyphen');else if (p === 0) {\n      return fromString(str.substring(1), unsigned, radix).neg();\n    }\n  \n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n      var size = Math.min(8, str.length - i),\n        value = parseInt(str.substring(i, i + size), radix);\n      if (size < 8) {\n        var power = fromNumber(pow_dbl(radix, size));\n        result = result.mul(power).add(fromNumber(value));\n      } else {\n        result = result.mul(radixToPower);\n        result = result.add(fromNumber(value));\n      }\n    }\n    result.unsigned = unsigned;\n    return result;\n  }\n  \n  /**\n   * Returns a Long representation of the given string, written using the specified radix.\n   * @function\n   * @param {string} str The textual representation of the Long\n   * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n   * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n   * @returns {!Long} The corresponding Long value\n   */\n  Long.fromString = fromString;\n  \n  /**\n   * @function\n   * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  function fromValue(val, unsigned) {\n    if (typeof val === 'number') return fromNumber(val, unsigned);\n    if (typeof val === 'string') return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n  }\n  \n  /**\n   * Converts the specified value to a Long using the appropriate from* function for its type.\n   * @function\n   * @param {!Long|number|bigint|string|!{low: number, high: number, unsigned: boolean}} val Value\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long}\n   */\n  Long.fromValue = fromValue;\n  \n  // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n  // no runtime penalty for these.\n  \n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  var TWO_PWR_16_DBL = 1 << 16;\n  \n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  var TWO_PWR_24_DBL = 1 << 24;\n  \n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n  \n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n  \n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n  \n  /**\n   * @type {!Long}\n   * @const\n   * @inner\n   */\n  var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n  \n  /**\n   * @type {!Long}\n   * @inner\n   */\n  var ZERO = fromInt(0);\n  \n  /**\n   * Signed zero.\n   * @type {!Long}\n   */\n  Long.ZERO = ZERO;\n  \n  /**\n   * @type {!Long}\n   * @inner\n   */\n  var UZERO = fromInt(0, true);\n  \n  /**\n   * Unsigned zero.\n   * @type {!Long}\n   */\n  Long.UZERO = UZERO;\n  \n  /**\n   * @type {!Long}\n   * @inner\n   */\n  var ONE = fromInt(1);\n  \n  /**\n   * Signed one.\n   * @type {!Long}\n   */\n  Long.ONE = ONE;\n  \n  /**\n   * @type {!Long}\n   * @inner\n   */\n  var UONE = fromInt(1, true);\n  \n  /**\n   * Unsigned one.\n   * @type {!Long}\n   */\n  Long.UONE = UONE;\n  \n  /**\n   * @type {!Long}\n   * @inner\n   */\n  var NEG_ONE = fromInt(-1);\n  \n  /**\n   * Signed negative one.\n   * @type {!Long}\n   */\n  Long.NEG_ONE = NEG_ONE;\n  \n  /**\n   * @type {!Long}\n   * @inner\n   */\n  var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n  \n  /**\n   * Maximum signed value.\n   * @type {!Long}\n   */\n  Long.MAX_VALUE = MAX_VALUE;\n  \n  /**\n   * @type {!Long}\n   * @inner\n   */\n  var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n  \n  /**\n   * Maximum unsigned value.\n   * @type {!Long}\n   */\n  Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n  \n  /**\n   * @type {!Long}\n   * @inner\n   */\n  var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n  \n  /**\n   * Minimum signed value.\n   * @type {!Long}\n   */\n  Long.MIN_VALUE = MIN_VALUE;\n  \n  /**\n   * @alias Long.prototype\n   * @inner\n   */\n  var LongPrototype = Long.prototype;\n  \n  /**\n   * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n   * @this {!Long}\n   * @returns {number}\n   */\n  LongPrototype.toInt = function toInt() {\n    return this.unsigned ? this.low >>> 0 : this.low;\n  };\n  \n  /**\n   * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n   * @this {!Long}\n   * @returns {number}\n   */\n  LongPrototype.toNumber = function toNumber() {\n    if (this.unsigned) return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n  };\n  \n  /**\n   * Converts the Long to a string written in the specified radix.\n   * @this {!Long}\n   * @param {number=} radix Radix (2-36), defaults to 10\n   * @returns {string}\n   * @override\n   * @throws {RangeError} If `radix` is out of range\n   */\n  LongPrototype.toString = function toString(radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n    if (this.isZero()) return '0';\n    if (this.isNegative()) {\n      // Unsigned Longs are never negative\n      if (this.eq(MIN_VALUE)) {\n        // We need to change the Long value before it can be negated, so we remove\n        // the bottom-most digit in this base and then recurse to do the rest.\n        var radixLong = fromNumber(radix),\n          div = this.div(radixLong),\n          rem1 = div.mul(radixLong).sub(this);\n        return div.toString(radix) + rem1.toInt().toString(radix);\n      } else return '-' + this.neg().toString(radix);\n    }\n  \n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n      rem = this;\n    var result = '';\n    while (true) {\n      var remDiv = rem.div(radixToPower),\n        intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n        digits = intval.toString(radix);\n      rem = remDiv;\n      if (rem.isZero()) return digits + result;else {\n        while (digits.length < 6) digits = '0' + digits;\n        result = '' + digits + result;\n      }\n    }\n  };\n  \n  /**\n   * Gets the high 32 bits as a signed integer.\n   * @this {!Long}\n   * @returns {number} Signed high bits\n   */\n  LongPrototype.getHighBits = function getHighBits() {\n    return this.high;\n  };\n  \n  /**\n   * Gets the high 32 bits as an unsigned integer.\n   * @this {!Long}\n   * @returns {number} Unsigned high bits\n   */\n  LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n    return this.high >>> 0;\n  };\n  \n  /**\n   * Gets the low 32 bits as a signed integer.\n   * @this {!Long}\n   * @returns {number} Signed low bits\n   */\n  LongPrototype.getLowBits = function getLowBits() {\n    return this.low;\n  };\n  \n  /**\n   * Gets the low 32 bits as an unsigned integer.\n   * @this {!Long}\n   * @returns {number} Unsigned low bits\n   */\n  LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n    return this.low >>> 0;\n  };\n  \n  /**\n   * Gets the number of bits needed to represent the absolute value of this Long.\n   * @this {!Long}\n   * @returns {number}\n   */\n  LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n    if (this.isNegative())\n      // Unsigned Longs are never negative\n      return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n    var val = this.high != 0 ? this.high : this.low;\n    for (var bit = 31; bit > 0; bit--) if ((val & 1 << bit) != 0) break;\n    return this.high != 0 ? bit + 33 : bit + 1;\n  };\n  \n  /**\n   * Tests if this Long can be safely represented as a JavaScript number.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  LongPrototype.isSafeInteger = function isSafeInteger() {\n    // 2^53-1 is the maximum safe value\n    var top11Bits = this.high >> 21;\n    // [0, 2^53-1]\n    if (!top11Bits) return true;\n    // > 2^53-1\n    if (this.unsigned) return false;\n    // [-2^53, -1] except -2^53\n    return top11Bits === -1 && !(this.low === 0 && this.high === -0x200000);\n  };\n  \n  /**\n   * Tests if this Long's value equals zero.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  LongPrototype.isZero = function isZero() {\n    return this.high === 0 && this.low === 0;\n  };\n  \n  /**\n   * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n   * @returns {boolean}\n   */\n  LongPrototype.eqz = LongPrototype.isZero;\n  \n  /**\n   * Tests if this Long's value is negative.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  LongPrototype.isNegative = function isNegative() {\n    return !this.unsigned && this.high < 0;\n  };\n  \n  /**\n   * Tests if this Long's value is positive or zero.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  LongPrototype.isPositive = function isPositive() {\n    return this.unsigned || this.high >= 0;\n  };\n  \n  /**\n   * Tests if this Long's value is odd.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  LongPrototype.isOdd = function isOdd() {\n    return (this.low & 1) === 1;\n  };\n  \n  /**\n   * Tests if this Long's value is even.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  LongPrototype.isEven = function isEven() {\n    return (this.low & 1) === 0;\n  };\n  \n  /**\n   * Tests if this Long's value equals the specified's.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.equals = function equals(other) {\n    if (!isLong(other)) other = fromValue(other);\n    if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n    return this.high === other.high && this.low === other.low;\n  };\n  \n  /**\n   * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n   * @function\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.eq = LongPrototype.equals;\n  \n  /**\n   * Tests if this Long's value differs from the specified's.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.notEquals = function notEquals(other) {\n    return !this.eq(/* validates */other);\n  };\n  \n  /**\n   * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n   * @function\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.neq = LongPrototype.notEquals;\n  \n  /**\n   * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n   * @function\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.ne = LongPrototype.notEquals;\n  \n  /**\n   * Tests if this Long's value is less than the specified's.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.lessThan = function lessThan(other) {\n    return this.comp(/* validates */other) < 0;\n  };\n  \n  /**\n   * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n   * @function\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.lt = LongPrototype.lessThan;\n  \n  /**\n   * Tests if this Long's value is less than or equal the specified's.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n    return this.comp(/* validates */other) <= 0;\n  };\n  \n  /**\n   * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n   * @function\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.lte = LongPrototype.lessThanOrEqual;\n  \n  /**\n   * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n   * @function\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.le = LongPrototype.lessThanOrEqual;\n  \n  /**\n   * Tests if this Long's value is greater than the specified's.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.greaterThan = function greaterThan(other) {\n    return this.comp(/* validates */other) > 0;\n  };\n  \n  /**\n   * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n   * @function\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.gt = LongPrototype.greaterThan;\n  \n  /**\n   * Tests if this Long's value is greater than or equal the specified's.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n    return this.comp(/* validates */other) >= 0;\n  };\n  \n  /**\n   * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n   * @function\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n  \n  /**\n   * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n   * @function\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {boolean}\n   */\n  LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n  \n  /**\n   * Compares this Long's value with the specified's.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n   *  if the given one is greater\n   */\n  LongPrototype.compare = function compare(other) {\n    if (!isLong(other)) other = fromValue(other);\n    if (this.eq(other)) return 0;\n    var thisNeg = this.isNegative(),\n      otherNeg = other.isNegative();\n    if (thisNeg && !otherNeg) return -1;\n    if (!thisNeg && otherNeg) return 1;\n    // At this point the sign bits are the same\n    if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n  };\n  \n  /**\n   * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n   * @function\n   * @param {!Long|number|bigint|string} other Other value\n   * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n   *  if the given one is greater\n   */\n  LongPrototype.comp = LongPrototype.compare;\n  \n  /**\n   * Negates this Long's value.\n   * @this {!Long}\n   * @returns {!Long} Negated Long\n   */\n  LongPrototype.negate = function negate() {\n    if (!this.unsigned && this.eq(MIN_VALUE)) return MIN_VALUE;\n    return this.not().add(ONE);\n  };\n  \n  /**\n   * Negates this Long's value. This is an alias of {@link Long#negate}.\n   * @function\n   * @returns {!Long} Negated Long\n   */\n  LongPrototype.neg = LongPrototype.negate;\n  \n  /**\n   * Returns the sum of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} addend Addend\n   * @returns {!Long} Sum\n   */\n  LongPrototype.add = function add(addend) {\n    if (!isLong(addend)) addend = fromValue(addend);\n  \n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n  \n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xFFFF;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0,\n      c32 = 0,\n      c16 = 0,\n      c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n  };\n  \n  /**\n   * Returns the difference of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} subtrahend Subtrahend\n   * @returns {!Long} Difference\n   */\n  LongPrototype.subtract = function subtract(subtrahend) {\n    if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);\n    return this.add(subtrahend.neg());\n  };\n  \n  /**\n   * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n   * @function\n   * @param {!Long|number|bigint|string} subtrahend Subtrahend\n   * @returns {!Long} Difference\n   */\n  LongPrototype.sub = LongPrototype.subtract;\n  \n  /**\n   * Returns the product of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} multiplier Multiplier\n   * @returns {!Long} Product\n   */\n  LongPrototype.multiply = function multiply(multiplier) {\n    if (this.isZero()) return this;\n    if (!isLong(multiplier)) multiplier = fromValue(multiplier);\n  \n    // use wasm support if present\n    if (wasm) {\n      var low = wasm[\"mul\"](this.low, this.high, multiplier.low, multiplier.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n    if (multiplier.isZero()) return this.unsigned ? UZERO : ZERO;\n    if (this.eq(MIN_VALUE)) return multiplier.isOdd() ? MIN_VALUE : ZERO;\n    if (multiplier.eq(MIN_VALUE)) return this.isOdd() ? MIN_VALUE : ZERO;\n    if (this.isNegative()) {\n      if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());else return this.neg().mul(multiplier).neg();\n    } else if (multiplier.isNegative()) return this.mul(multiplier.neg()).neg();\n  \n    // If both longs are small, use float multiplication\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24)) return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n  \n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n  \n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xFFFF;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0,\n      c32 = 0,\n      c16 = 0,\n      c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n  };\n  \n  /**\n   * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n   * @function\n   * @param {!Long|number|bigint|string} multiplier Multiplier\n   * @returns {!Long} Product\n   */\n  LongPrototype.mul = LongPrototype.multiply;\n  \n  /**\n   * Returns this Long divided by the specified. The result is signed if this Long is signed or\n   *  unsigned if this Long is unsigned.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} divisor Divisor\n   * @returns {!Long} Quotient\n   */\n  LongPrototype.divide = function divide(divisor) {\n    if (!isLong(divisor)) divisor = fromValue(divisor);\n    if (divisor.isZero()) throw Error('division by zero');\n  \n    // use wasm support if present\n    if (wasm) {\n      // guard against signed division overflow: the largest\n      // negative number / -1 would be 1 larger than the largest\n      // positive number, due to two's complement.\n      if (!this.unsigned && this.high === -0x80000000 && divisor.low === -1 && divisor.high === -1) {\n        // be consistent with non-wasm code path\n        return this;\n      }\n      var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(this.low, this.high, divisor.low, divisor.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n    if (this.isZero()) return this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!this.unsigned) {\n      // This section is only relevant for signed longs and is derived from the\n      // closure library as a whole.\n      if (this.eq(MIN_VALUE)) {\n        if (divisor.eq(ONE) || divisor.eq(NEG_ONE)) return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n        else if (divisor.eq(MIN_VALUE)) return ONE;else {\n          // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n          var halfThis = this.shr(1);\n          approx = halfThis.div(divisor).shl(1);\n          if (approx.eq(ZERO)) {\n            return divisor.isNegative() ? ONE : NEG_ONE;\n          } else {\n            rem = this.sub(divisor.mul(approx));\n            res = approx.add(rem.div(divisor));\n            return res;\n          }\n        }\n      } else if (divisor.eq(MIN_VALUE)) return this.unsigned ? UZERO : ZERO;\n      if (this.isNegative()) {\n        if (divisor.isNegative()) return this.neg().div(divisor.neg());\n        return this.neg().div(divisor).neg();\n      } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\n      res = ZERO;\n    } else {\n      // The algorithm below has not been made for unsigned longs. It's therefore\n      // required to take special care of the MSB prior to running it.\n      if (!divisor.unsigned) divisor = divisor.toUnsigned();\n      if (divisor.gt(this)) return UZERO;\n      if (divisor.gt(this.shru(1)))\n        // 15 >>> 1 = 7 ; with divisor = 8 ; true\n        return UONE;\n      res = UZERO;\n    }\n  \n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = this;\n    while (rem.gte(divisor)) {\n      // Approximate the result of division. This may be a little greater or\n      // smaller than the actual value.\n      approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n  \n      // We will tweak the approximate result by changing it in the 48-th digit or\n      // the smallest non-fractional digit, whichever is larger.\n      var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n        delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48),\n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx),\n        approxRem = approxRes.mul(divisor);\n      while (approxRem.isNegative() || approxRem.gt(rem)) {\n        approx -= delta;\n        approxRes = fromNumber(approx, this.unsigned);\n        approxRem = approxRes.mul(divisor);\n      }\n  \n      // We know the answer can't be zero... and actually, zero would cause\n      // infinite recursion since we would make no progress.\n      if (approxRes.isZero()) approxRes = ONE;\n      res = res.add(approxRes);\n      rem = rem.sub(approxRem);\n    }\n    return res;\n  };\n  \n  /**\n   * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n   * @function\n   * @param {!Long|number|bigint|string} divisor Divisor\n   * @returns {!Long} Quotient\n   */\n  LongPrototype.div = LongPrototype.divide;\n  \n  /**\n   * Returns this Long modulo the specified.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  LongPrototype.modulo = function modulo(divisor) {\n    if (!isLong(divisor)) divisor = fromValue(divisor);\n  \n    // use wasm support if present\n    if (wasm) {\n      var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(this.low, this.high, divisor.low, divisor.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n    return this.sub(this.div(divisor).mul(divisor));\n  };\n  \n  /**\n   * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n   * @function\n   * @param {!Long|number|bigint|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  LongPrototype.mod = LongPrototype.modulo;\n  \n  /**\n   * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n   * @function\n   * @param {!Long|number|bigint|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  LongPrototype.rem = LongPrototype.modulo;\n  \n  /**\n   * Returns the bitwise NOT of this Long.\n   * @this {!Long}\n   * @returns {!Long}\n   */\n  LongPrototype.not = function not() {\n    return fromBits(~this.low, ~this.high, this.unsigned);\n  };\n  \n  /**\n   * Returns count leading zeros of this Long.\n   * @this {!Long}\n   * @returns {!number}\n   */\n  LongPrototype.countLeadingZeros = function countLeadingZeros() {\n    return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\n  };\n  \n  /**\n   * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\n   * @function\n   * @param {!Long}\n   * @returns {!number}\n   */\n  LongPrototype.clz = LongPrototype.countLeadingZeros;\n  \n  /**\n   * Returns count trailing zeros of this Long.\n   * @this {!Long}\n   * @returns {!number}\n   */\n  LongPrototype.countTrailingZeros = function countTrailingZeros() {\n    return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\n  };\n  \n  /**\n   * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\n   * @function\n   * @param {!Long}\n   * @returns {!number}\n   */\n  LongPrototype.ctz = LongPrototype.countTrailingZeros;\n  \n  /**\n   * Returns the bitwise AND of this Long and the specified.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} other Other Long\n   * @returns {!Long}\n   */\n  LongPrototype.and = function and(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n  };\n  \n  /**\n   * Returns the bitwise OR of this Long and the specified.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} other Other Long\n   * @returns {!Long}\n   */\n  LongPrototype.or = function or(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n  };\n  \n  /**\n   * Returns the bitwise XOR of this Long and the given one.\n   * @this {!Long}\n   * @param {!Long|number|bigint|string} other Other Long\n   * @returns {!Long}\n   */\n  LongPrototype.xor = function xor(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n  };\n  \n  /**\n   * Returns this Long with bits shifted to the left by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  LongPrototype.shiftLeft = function shiftLeft(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low << numBits, this.high << numBits | this.low >>> 32 - numBits, this.unsigned);else return fromBits(0, this.low << numBits - 32, this.unsigned);\n  };\n  \n  /**\n   * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  LongPrototype.shl = LongPrototype.shiftLeft;\n  \n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  LongPrototype.shiftRight = function shiftRight(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >> numBits, this.unsigned);else return fromBits(this.high >> numBits - 32, this.high >= 0 ? 0 : -1, this.unsigned);\n  };\n  \n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  LongPrototype.shr = LongPrototype.shiftRight;\n  \n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >>> numBits, this.unsigned);\n    if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\n    return fromBits(this.high >>> numBits - 32, 0, this.unsigned);\n  };\n  \n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n  \n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n  \n  /**\n   * Returns this Long with bits rotated to the left by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  LongPrototype.rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n      b = 32 - numBits;\n      return fromBits(this.low << numBits | this.high >>> b, this.high << numBits | this.low >>> b, this.unsigned);\n    }\n    numBits -= 32;\n    b = 32 - numBits;\n    return fromBits(this.high << numBits | this.low >>> b, this.low << numBits | this.high >>> b, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  LongPrototype.rotl = LongPrototype.rotateLeft;\n  \n  /**\n   * Returns this Long with bits rotated to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  LongPrototype.rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n      b = 32 - numBits;\n      return fromBits(this.high << b | this.low >>> numBits, this.low << b | this.high >>> numBits, this.unsigned);\n    }\n    numBits -= 32;\n    b = 32 - numBits;\n    return fromBits(this.low << b | this.high >>> numBits, this.high << b | this.low >>> numBits, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  LongPrototype.rotr = LongPrototype.rotateRight;\n  \n  /**\n   * Converts this Long to signed.\n   * @this {!Long}\n   * @returns {!Long} Signed long\n   */\n  LongPrototype.toSigned = function toSigned() {\n    if (!this.unsigned) return this;\n    return fromBits(this.low, this.high, false);\n  };\n  \n  /**\n   * Converts this Long to unsigned.\n   * @this {!Long}\n   * @returns {!Long} Unsigned long\n   */\n  LongPrototype.toUnsigned = function toUnsigned() {\n    if (this.unsigned) return this;\n    return fromBits(this.low, this.high, true);\n  };\n  \n  /**\n   * Converts this Long to its byte representation.\n   * @param {boolean=} le Whether little or big endian, defaults to big endian\n   * @this {!Long}\n   * @returns {!Array.<number>} Byte representation\n   */\n  LongPrototype.toBytes = function toBytes(le) {\n    return le ? this.toBytesLE() : this.toBytesBE();\n  };\n  \n  /**\n   * Converts this Long to its little endian byte representation.\n   * @this {!Long}\n   * @returns {!Array.<number>} Little endian byte representation\n   */\n  LongPrototype.toBytesLE = function toBytesLE() {\n    var hi = this.high,\n      lo = this.low;\n    return [lo & 0xff, lo >>> 8 & 0xff, lo >>> 16 & 0xff, lo >>> 24, hi & 0xff, hi >>> 8 & 0xff, hi >>> 16 & 0xff, hi >>> 24];\n  };\n  \n  /**\n   * Converts this Long to its big endian byte representation.\n   * @this {!Long}\n   * @returns {!Array.<number>} Big endian byte representation\n   */\n  LongPrototype.toBytesBE = function toBytesBE() {\n    var hi = this.high,\n      lo = this.low;\n    return [hi >>> 24, hi >>> 16 & 0xff, hi >>> 8 & 0xff, hi & 0xff, lo >>> 24, lo >>> 16 & 0xff, lo >>> 8 & 0xff, lo & 0xff];\n  };\n  \n  /**\n   * Creates a Long from its byte representation.\n   * @param {!Array.<number>} bytes Byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @param {boolean=} le Whether little or big endian, defaults to big endian\n   * @returns {Long} The corresponding Long value\n   */\n  Long.fromBytes = function fromBytes(bytes, unsigned, le) {\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n  };\n  \n  /**\n   * Creates a Long from its little endian byte representation.\n   * @param {!Array.<number>} bytes Little endian byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {Long} The corresponding Long value\n   */\n  Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24, unsigned);\n  };\n  \n  /**\n   * Creates a Long from its big endian byte representation.\n   * @param {!Array.<number>} bytes Big endian byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {Long} The corresponding Long value\n   */\n  Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7], bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], unsigned);\n  };\n  \n  // Support conversion to/from BigInt where available\n  if (typeof BigInt === \"function\") {\n    /**\n     * Returns a Long representing the given big integer.\n     * @function\n     * @param {number} value The big integer value\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n     * @returns {!Long} The corresponding Long value\n     */\n    Long.fromBigInt = function fromBigInt(value, unsigned) {\n      var lowBits = Number(BigInt.asIntN(32, value));\n      var highBits = Number(BigInt.asIntN(32, value >> BigInt(32)));\n      return fromBits(lowBits, highBits, unsigned);\n    };\n  \n    // Override\n    Long.fromValue = function fromValueWithBigInt(value, unsigned) {\n      if (typeof value === \"bigint\") return fromBigInt(value, unsigned);\n      return fromValue(value, unsigned);\n    };\n  \n    /**\n     * Converts the Long to its big integer representation.\n     * @this {!Long}\n     * @returns {bigint}\n     */\n    LongPrototype.toBigInt = function toBigInt() {\n      var lowBigInt = BigInt(this.low >>> 0);\n      var highBigInt = BigInt(this.unsigned ? this.high >>> 0 : this.high);\n      return highBigInt << BigInt(32) | lowBigInt;\n    };\n  }\n  var _default = exports.default = Long;\n  return \"default\" in exports ? exports.default : exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return Long; });\nelse if (typeof module === 'object' && typeof exports === 'object') module.exports = Long;\n",
    "\"use strict\";\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadFileDescriptorSetFromObject = exports.loadFileDescriptorSetFromBuffer = exports.fromJSON = exports.loadSync = exports.load = exports.IdempotencyLevel = exports.isAnyExtension = exports.Long = void 0;\nconst camelCase = require(\"lodash.camelcase\");\nconst Protobuf = require(\"protobufjs\");\nconst descriptor = require(\"protobufjs/ext/descriptor\");\nconst util_1 = require(\"./util\");\nconst Long = require(\"long\");\nexports.Long = Long;\nfunction isAnyExtension(obj) {\n    return ('@type' in obj) && (typeof obj['@type'] === 'string');\n}\nexports.isAnyExtension = isAnyExtension;\nvar IdempotencyLevel;\n(function (IdempotencyLevel) {\n    IdempotencyLevel[\"IDEMPOTENCY_UNKNOWN\"] = \"IDEMPOTENCY_UNKNOWN\";\n    IdempotencyLevel[\"NO_SIDE_EFFECTS\"] = \"NO_SIDE_EFFECTS\";\n    IdempotencyLevel[\"IDEMPOTENT\"] = \"IDEMPOTENT\";\n})(IdempotencyLevel = exports.IdempotencyLevel || (exports.IdempotencyLevel = {}));\nconst descriptorOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    defaults: true,\n    oneofs: true,\n    json: true,\n};\nfunction joinName(baseName, name) {\n    if (baseName === '') {\n        return name;\n    }\n    else {\n        return baseName + '.' + name;\n    }\n}\nfunction isHandledReflectionObject(obj) {\n    return (obj instanceof Protobuf.Service ||\n        obj instanceof Protobuf.Type ||\n        obj instanceof Protobuf.Enum);\n}\nfunction isNamespaceBase(obj) {\n    return obj instanceof Protobuf.Namespace || obj instanceof Protobuf.Root;\n}\nfunction getAllHandledReflectionObjects(obj, parentName) {\n    const objName = joinName(parentName, obj.name);\n    if (isHandledReflectionObject(obj)) {\n        return [[objName, obj]];\n    }\n    else {\n        if (isNamespaceBase(obj) && typeof obj.nested !== 'undefined') {\n            return Object.keys(obj.nested)\n                .map(name => {\n                return getAllHandledReflectionObjects(obj.nested[name], objName);\n            })\n                .reduce((accumulator, currentValue) => accumulator.concat(currentValue), []);\n        }\n    }\n    return [];\n}\nfunction createDeserializer(cls, options) {\n    return function deserialize(argBuf) {\n        return cls.toObject(cls.decode(argBuf), options);\n    };\n}\nfunction createSerializer(cls) {\n    return function serialize(arg) {\n        if (Array.isArray(arg)) {\n            throw new Error(`Failed to serialize message: expected object with ${cls.name} structure, got array instead`);\n        }\n        const message = cls.fromObject(arg);\n        return cls.encode(message).finish();\n    };\n}\nfunction mapMethodOptions(options) {\n    return (options || []).reduce((obj, item) => {\n        for (const [key, value] of Object.entries(item)) {\n            switch (key) {\n                case 'uninterpreted_option':\n                    obj.uninterpreted_option.push(item.uninterpreted_option);\n                    break;\n                default:\n                    obj[key] = value;\n            }\n        }\n        return obj;\n    }, {\n        deprecated: false,\n        idempotency_level: IdempotencyLevel.IDEMPOTENCY_UNKNOWN,\n        uninterpreted_option: [],\n    });\n}\nfunction createMethodDefinition(method, serviceName, options, fileDescriptors) {\n    /* This is only ever called after the corresponding root.resolveAll(), so we\n     * can assume that the resolved request and response types are non-null */\n    const requestType = method.resolvedRequestType;\n    const responseType = method.resolvedResponseType;\n    return {\n        path: '/' + serviceName + '/' + method.name,\n        requestStream: !!method.requestStream,\n        responseStream: !!method.responseStream,\n        requestSerialize: createSerializer(requestType),\n        requestDeserialize: createDeserializer(requestType, options),\n        responseSerialize: createSerializer(responseType),\n        responseDeserialize: createDeserializer(responseType, options),\n        // TODO(murgatroid99): Find a better way to handle this\n        originalName: camelCase(method.name),\n        requestType: createMessageDefinition(requestType, fileDescriptors),\n        responseType: createMessageDefinition(responseType, fileDescriptors),\n        options: mapMethodOptions(method.parsedOptions),\n    };\n}\nfunction createServiceDefinition(service, name, options, fileDescriptors) {\n    const def = {};\n    for (const method of service.methodsArray) {\n        def[method.name] = createMethodDefinition(method, name, options, fileDescriptors);\n    }\n    return def;\n}\nfunction createMessageDefinition(message, fileDescriptors) {\n    const messageDescriptor = message.toDescriptor('proto3');\n    return {\n        format: 'Protocol Buffer 3 DescriptorProto',\n        type: messageDescriptor.$type.toObject(messageDescriptor, descriptorOptions),\n        fileDescriptorProtos: fileDescriptors,\n    };\n}\nfunction createEnumDefinition(enumType, fileDescriptors) {\n    const enumDescriptor = enumType.toDescriptor('proto3');\n    return {\n        format: 'Protocol Buffer 3 EnumDescriptorProto',\n        type: enumDescriptor.$type.toObject(enumDescriptor, descriptorOptions),\n        fileDescriptorProtos: fileDescriptors,\n    };\n}\n/**\n * function createDefinition(obj: Protobuf.Service, name: string, options:\n * Options): ServiceDefinition; function createDefinition(obj: Protobuf.Type,\n * name: string, options: Options): MessageTypeDefinition; function\n * createDefinition(obj: Protobuf.Enum, name: string, options: Options):\n * EnumTypeDefinition;\n */\nfunction createDefinition(obj, name, options, fileDescriptors) {\n    if (obj instanceof Protobuf.Service) {\n        return createServiceDefinition(obj, name, options, fileDescriptors);\n    }\n    else if (obj instanceof Protobuf.Type) {\n        return createMessageDefinition(obj, fileDescriptors);\n    }\n    else if (obj instanceof Protobuf.Enum) {\n        return createEnumDefinition(obj, fileDescriptors);\n    }\n    else {\n        throw new Error('Type mismatch in reflection object handling');\n    }\n}\nfunction createPackageDefinition(root, options) {\n    const def = {};\n    root.resolveAll();\n    const descriptorList = root.toDescriptor('proto3').file;\n    const bufferList = descriptorList.map(value => Buffer.from(descriptor.FileDescriptorProto.encode(value).finish()));\n    for (const [name, obj] of getAllHandledReflectionObjects(root, '')) {\n        def[name] = createDefinition(obj, name, options, bufferList);\n    }\n    return def;\n}\nfunction createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options) {\n    options = options || {};\n    const root = Protobuf.Root.fromDescriptor(decodedDescriptorSet);\n    root.resolveAll();\n    return createPackageDefinition(root, options);\n}\n/**\n * Load a .proto file with the specified options.\n * @param filename One or multiple file paths to load. Can be an absolute path\n *     or relative to an include path.\n * @param options.keepCase Preserve field names. The default is to change them\n *     to camel case.\n * @param options.longs The type that should be used to represent `long` values.\n *     Valid options are `Number` and `String`. Defaults to a `Long` object type\n *     from a library.\n * @param options.enums The type that should be used to represent `enum` values.\n *     The only valid option is `String`. Defaults to the numeric value.\n * @param options.bytes The type that should be used to represent `bytes`\n *     values. Valid options are `Array` and `String`. The default is to use\n *     `Buffer`.\n * @param options.defaults Set default values on output objects. Defaults to\n *     `false`.\n * @param options.arrays Set empty arrays for missing array values even if\n *     `defaults` is `false`. Defaults to `false`.\n * @param options.objects Set empty objects for missing object values even if\n *     `defaults` is `false`. Defaults to `false`.\n * @param options.oneofs Set virtual oneof properties to the present field's\n *     name\n * @param options.json Represent Infinity and NaN as strings in float fields,\n *     and automatically decode google.protobuf.Any values.\n * @param options.includeDirs Paths to search for imported `.proto` files.\n */\nfunction load(filename, options) {\n    return (0, util_1.loadProtosWithOptions)(filename, options).then(loadedRoot => {\n        return createPackageDefinition(loadedRoot, options);\n    });\n}\nexports.load = load;\nfunction loadSync(filename, options) {\n    const loadedRoot = (0, util_1.loadProtosWithOptionsSync)(filename, options);\n    return createPackageDefinition(loadedRoot, options);\n}\nexports.loadSync = loadSync;\nfunction fromJSON(json, options) {\n    options = options || {};\n    const loadedRoot = Protobuf.Root.fromJSON(json);\n    loadedRoot.resolveAll();\n    return createPackageDefinition(loadedRoot, options);\n}\nexports.fromJSON = fromJSON;\nfunction loadFileDescriptorSetFromBuffer(descriptorSet, options) {\n    const decodedDescriptorSet = descriptor.FileDescriptorSet.decode(descriptorSet);\n    return createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options);\n}\nexports.loadFileDescriptorSetFromBuffer = loadFileDescriptorSetFromBuffer;\nfunction loadFileDescriptorSetFromObject(descriptorSet, options) {\n    const decodedDescriptorSet = descriptor.FileDescriptorSet.fromObject(descriptorSet);\n    return createPackageDefinitionFromDescriptorSet(decodedDescriptorSet, options);\n}\nexports.loadFileDescriptorSetFromObject = loadFileDescriptorSetFromObject;\n(0, util_1.addCommonProtos)();\n//# sourceMappingURL=index.js.map",
    "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.registerChannelzSocket = exports.registerChannelzServer = exports.registerChannelzSubchannel = exports.registerChannelzChannel = exports.ChannelzCallTrackerStub = exports.ChannelzCallTracker = exports.ChannelzChildrenTrackerStub = exports.ChannelzChildrenTracker = exports.ChannelzTrace = exports.ChannelzTraceStub = void 0;\nexports.unregisterChannelzRef = unregisterChannelzRef;\nexports.getChannelzHandlers = getChannelzHandlers;\nexports.getChannelzServiceDefinition = getChannelzServiceDefinition;\nexports.setup = setup;\nconst net_1 = require(\"net\");\nconst ordered_map_1 = require(\"@js-sdsl/ordered-map\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst admin_1 = require(\"./admin\");\nconst make_client_1 = require(\"./make-client\");\nfunction channelRefToMessage(ref) {\n    return {\n        channel_id: ref.id,\n        name: ref.name,\n    };\n}\nfunction subchannelRefToMessage(ref) {\n    return {\n        subchannel_id: ref.id,\n        name: ref.name,\n    };\n}\nfunction serverRefToMessage(ref) {\n    return {\n        server_id: ref.id,\n    };\n}\nfunction socketRefToMessage(ref) {\n    return {\n        socket_id: ref.id,\n        name: ref.name,\n    };\n}\n/**\n * The loose upper bound on the number of events that should be retained in a\n * trace. This may be exceeded by up to a factor of 2. Arbitrarily chosen as a\n * number that should be large enough to contain the recent relevant\n * information, but small enough to not use excessive memory.\n */\nconst TARGET_RETAINED_TRACES = 32;\n/**\n * Default number of sockets/servers/channels/subchannels to return\n */\nconst DEFAULT_MAX_RESULTS = 100;\nclass ChannelzTraceStub {\n    constructor() {\n        this.events = [];\n        this.creationTimestamp = new Date();\n        this.eventsLogged = 0;\n    }\n    addTrace() { }\n    getTraceMessage() {\n        return {\n            creation_timestamp: dateToProtoTimestamp(this.creationTimestamp),\n            num_events_logged: this.eventsLogged,\n            events: [],\n        };\n    }\n}\nexports.ChannelzTraceStub = ChannelzTraceStub;\nclass ChannelzTrace {\n    constructor() {\n        this.events = [];\n        this.eventsLogged = 0;\n        this.creationTimestamp = new Date();\n    }\n    addTrace(severity, description, child) {\n        const timestamp = new Date();\n        this.events.push({\n            description: description,\n            severity: severity,\n            timestamp: timestamp,\n            childChannel: (child === null || child === void 0 ? void 0 : child.kind) === 'channel' ? child : undefined,\n            childSubchannel: (child === null || child === void 0 ? void 0 : child.kind) === 'subchannel' ? child : undefined,\n        });\n        // Whenever the trace array gets too large, discard the first half\n        if (this.events.length >= TARGET_RETAINED_TRACES * 2) {\n            this.events = this.events.slice(TARGET_RETAINED_TRACES);\n        }\n        this.eventsLogged += 1;\n    }\n    getTraceMessage() {\n        return {\n            creation_timestamp: dateToProtoTimestamp(this.creationTimestamp),\n            num_events_logged: this.eventsLogged,\n            events: this.events.map(event => {\n                return {\n                    description: event.description,\n                    severity: event.severity,\n                    timestamp: dateToProtoTimestamp(event.timestamp),\n                    channel_ref: event.childChannel\n                        ? channelRefToMessage(event.childChannel)\n                        : null,\n                    subchannel_ref: event.childSubchannel\n                        ? subchannelRefToMessage(event.childSubchannel)\n                        : null,\n                };\n            }),\n        };\n    }\n}\nexports.ChannelzTrace = ChannelzTrace;\nclass ChannelzChildrenTracker {\n    constructor() {\n        this.channelChildren = new ordered_map_1.OrderedMap();\n        this.subchannelChildren = new ordered_map_1.OrderedMap();\n        this.socketChildren = new ordered_map_1.OrderedMap();\n        this.trackerMap = {\n            [\"channel\" /* EntityTypes.channel */]: this.channelChildren,\n            [\"subchannel\" /* EntityTypes.subchannel */]: this.subchannelChildren,\n            [\"socket\" /* EntityTypes.socket */]: this.socketChildren,\n        };\n    }\n    refChild(child) {\n        const tracker = this.trackerMap[child.kind];\n        const trackedChild = tracker.find(child.id);\n        if (trackedChild.equals(tracker.end())) {\n            tracker.setElement(child.id, {\n                ref: child,\n                count: 1,\n            }, trackedChild);\n        }\n        else {\n            trackedChild.pointer[1].count += 1;\n        }\n    }\n    unrefChild(child) {\n        const tracker = this.trackerMap[child.kind];\n        const trackedChild = tracker.getElementByKey(child.id);\n        if (trackedChild !== undefined) {\n            trackedChild.count -= 1;\n            if (trackedChild.count === 0) {\n                tracker.eraseElementByKey(child.id);\n            }\n        }\n    }\n    getChildLists() {\n        return {\n            channels: this.channelChildren,\n            subchannels: this.subchannelChildren,\n            sockets: this.socketChildren,\n        };\n    }\n}\nexports.ChannelzChildrenTracker = ChannelzChildrenTracker;\nclass ChannelzChildrenTrackerStub extends ChannelzChildrenTracker {\n    refChild() { }\n    unrefChild() { }\n}\nexports.ChannelzChildrenTrackerStub = ChannelzChildrenTrackerStub;\nclass ChannelzCallTracker {\n    constructor() {\n        this.callsStarted = 0;\n        this.callsSucceeded = 0;\n        this.callsFailed = 0;\n        this.lastCallStartedTimestamp = null;\n    }\n    addCallStarted() {\n        this.callsStarted += 1;\n        this.lastCallStartedTimestamp = new Date();\n    }\n    addCallSucceeded() {\n        this.callsSucceeded += 1;\n    }\n    addCallFailed() {\n        this.callsFailed += 1;\n    }\n}\nexports.ChannelzCallTracker = ChannelzCallTracker;\nclass ChannelzCallTrackerStub extends ChannelzCallTracker {\n    addCallStarted() { }\n    addCallSucceeded() { }\n    addCallFailed() { }\n}\nexports.ChannelzCallTrackerStub = ChannelzCallTrackerStub;\nconst entityMaps = {\n    [\"channel\" /* EntityTypes.channel */]: new ordered_map_1.OrderedMap(),\n    [\"subchannel\" /* EntityTypes.subchannel */]: new ordered_map_1.OrderedMap(),\n    [\"server\" /* EntityTypes.server */]: new ordered_map_1.OrderedMap(),\n    [\"socket\" /* EntityTypes.socket */]: new ordered_map_1.OrderedMap(),\n};\nconst generateRegisterFn = (kind) => {\n    let nextId = 1;\n    function getNextId() {\n        return nextId++;\n    }\n    const entityMap = entityMaps[kind];\n    return (name, getInfo, channelzEnabled) => {\n        const id = getNextId();\n        const ref = { id, name, kind };\n        if (channelzEnabled) {\n            entityMap.setElement(id, { ref, getInfo });\n        }\n        return ref;\n    };\n};\nexports.registerChannelzChannel = generateRegisterFn(\"channel\" /* EntityTypes.channel */);\nexports.registerChannelzSubchannel = generateRegisterFn(\"subchannel\" /* EntityTypes.subchannel */);\nexports.registerChannelzServer = generateRegisterFn(\"server\" /* EntityTypes.server */);\nexports.registerChannelzSocket = generateRegisterFn(\"socket\" /* EntityTypes.socket */);\nfunction unregisterChannelzRef(ref) {\n    entityMaps[ref.kind].eraseElementByKey(ref.id);\n}\n/**\n * Parse a single section of an IPv6 address as two bytes\n * @param addressSection A hexadecimal string of length up to 4\n * @returns The pair of bytes representing this address section\n */\nfunction parseIPv6Section(addressSection) {\n    const numberValue = Number.parseInt(addressSection, 16);\n    return [(numberValue / 256) | 0, numberValue % 256];\n}\n/**\n * Parse a chunk of an IPv6 address string to some number of bytes\n * @param addressChunk Some number of segments of up to 4 hexadecimal\n *   characters each, joined by colons.\n * @returns The list of bytes representing this address chunk\n */\nfunction parseIPv6Chunk(addressChunk) {\n    if (addressChunk === '') {\n        return [];\n    }\n    const bytePairs = addressChunk\n        .split(':')\n        .map(section => parseIPv6Section(section));\n    const result = [];\n    return result.concat(...bytePairs);\n}\n/**\n * Converts an IPv4 or IPv6 address from string representation to binary\n * representation\n * @param ipAddress an IP address in standard IPv4 or IPv6 text format\n * @returns\n */\nfunction ipAddressStringToBuffer(ipAddress) {\n    if ((0, net_1.isIPv4)(ipAddress)) {\n        return Buffer.from(Uint8Array.from(ipAddress.split('.').map(segment => Number.parseInt(segment))));\n    }\n    else if ((0, net_1.isIPv6)(ipAddress)) {\n        let leftSection;\n        let rightSection;\n        const doubleColonIndex = ipAddress.indexOf('::');\n        if (doubleColonIndex === -1) {\n            leftSection = ipAddress;\n            rightSection = '';\n        }\n        else {\n            leftSection = ipAddress.substring(0, doubleColonIndex);\n            rightSection = ipAddress.substring(doubleColonIndex + 2);\n        }\n        const leftBuffer = Buffer.from(parseIPv6Chunk(leftSection));\n        const rightBuffer = Buffer.from(parseIPv6Chunk(rightSection));\n        const middleBuffer = Buffer.alloc(16 - leftBuffer.length - rightBuffer.length, 0);\n        return Buffer.concat([leftBuffer, middleBuffer, rightBuffer]);\n    }\n    else {\n        return null;\n    }\n}\nfunction connectivityStateToMessage(state) {\n    switch (state) {\n        case connectivity_state_1.ConnectivityState.CONNECTING:\n            return {\n                state: 'CONNECTING',\n            };\n        case connectivity_state_1.ConnectivityState.IDLE:\n            return {\n                state: 'IDLE',\n            };\n        case connectivity_state_1.ConnectivityState.READY:\n            return {\n                state: 'READY',\n            };\n        case connectivity_state_1.ConnectivityState.SHUTDOWN:\n            return {\n                state: 'SHUTDOWN',\n            };\n        case connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE:\n            return {\n                state: 'TRANSIENT_FAILURE',\n            };\n        default:\n            return {\n                state: 'UNKNOWN',\n            };\n    }\n}\nfunction dateToProtoTimestamp(date) {\n    if (!date) {\n        return null;\n    }\n    const millisSinceEpoch = date.getTime();\n    return {\n        seconds: (millisSinceEpoch / 1000) | 0,\n        nanos: (millisSinceEpoch % 1000) * 1000000,\n    };\n}\nfunction getChannelMessage(channelEntry) {\n    const resolvedInfo = channelEntry.getInfo();\n    const channelRef = [];\n    const subchannelRef = [];\n    resolvedInfo.children.channels.forEach(el => {\n        channelRef.push(channelRefToMessage(el[1].ref));\n    });\n    resolvedInfo.children.subchannels.forEach(el => {\n        subchannelRef.push(subchannelRefToMessage(el[1].ref));\n    });\n    return {\n        ref: channelRefToMessage(channelEntry.ref),\n        data: {\n            target: resolvedInfo.target,\n            state: connectivityStateToMessage(resolvedInfo.state),\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        channel_ref: channelRef,\n        subchannel_ref: subchannelRef,\n    };\n}\nfunction GetChannel(call, callback) {\n    const channelId = parseInt(call.request.channel_id, 10);\n    const channelEntry = entityMaps[\"channel\" /* EntityTypes.channel */].getElementByKey(channelId);\n    if (channelEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No channel data found for id ' + channelId,\n        });\n        return;\n    }\n    callback(null, { channel: getChannelMessage(channelEntry) });\n}\nfunction GetTopChannels(call, callback) {\n    const maxResults = parseInt(call.request.max_results, 10) || DEFAULT_MAX_RESULTS;\n    const resultList = [];\n    const startId = parseInt(call.request.start_channel_id, 10);\n    const channelEntries = entityMaps[\"channel\" /* EntityTypes.channel */];\n    let i;\n    for (i = channelEntries.lowerBound(startId); !i.equals(channelEntries.end()) && resultList.length < maxResults; i = i.next()) {\n        resultList.push(getChannelMessage(i.pointer[1]));\n    }\n    callback(null, {\n        channel: resultList,\n        end: i.equals(channelEntries.end()),\n    });\n}\nfunction getServerMessage(serverEntry) {\n    const resolvedInfo = serverEntry.getInfo();\n    const listenSocket = [];\n    resolvedInfo.listenerChildren.sockets.forEach(el => {\n        listenSocket.push(socketRefToMessage(el[1].ref));\n    });\n    return {\n        ref: serverRefToMessage(serverEntry.ref),\n        data: {\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        listen_socket: listenSocket,\n    };\n}\nfunction GetServer(call, callback) {\n    const serverId = parseInt(call.request.server_id, 10);\n    const serverEntries = entityMaps[\"server\" /* EntityTypes.server */];\n    const serverEntry = serverEntries.getElementByKey(serverId);\n    if (serverEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No server data found for id ' + serverId,\n        });\n        return;\n    }\n    callback(null, { server: getServerMessage(serverEntry) });\n}\nfunction GetServers(call, callback) {\n    const maxResults = parseInt(call.request.max_results, 10) || DEFAULT_MAX_RESULTS;\n    const startId = parseInt(call.request.start_server_id, 10);\n    const serverEntries = entityMaps[\"server\" /* EntityTypes.server */];\n    const resultList = [];\n    let i;\n    for (i = serverEntries.lowerBound(startId); !i.equals(serverEntries.end()) && resultList.length < maxResults; i = i.next()) {\n        resultList.push(getServerMessage(i.pointer[1]));\n    }\n    callback(null, {\n        server: resultList,\n        end: i.equals(serverEntries.end()),\n    });\n}\nfunction GetSubchannel(call, callback) {\n    const subchannelId = parseInt(call.request.subchannel_id, 10);\n    const subchannelEntry = entityMaps[\"subchannel\" /* EntityTypes.subchannel */].getElementByKey(subchannelId);\n    if (subchannelEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No subchannel data found for id ' + subchannelId,\n        });\n        return;\n    }\n    const resolvedInfo = subchannelEntry.getInfo();\n    const listenSocket = [];\n    resolvedInfo.children.sockets.forEach(el => {\n        listenSocket.push(socketRefToMessage(el[1].ref));\n    });\n    const subchannelMessage = {\n        ref: subchannelRefToMessage(subchannelEntry.ref),\n        data: {\n            target: resolvedInfo.target,\n            state: connectivityStateToMessage(resolvedInfo.state),\n            calls_started: resolvedInfo.callTracker.callsStarted,\n            calls_succeeded: resolvedInfo.callTracker.callsSucceeded,\n            calls_failed: resolvedInfo.callTracker.callsFailed,\n            last_call_started_timestamp: dateToProtoTimestamp(resolvedInfo.callTracker.lastCallStartedTimestamp),\n            trace: resolvedInfo.trace.getTraceMessage(),\n        },\n        socket_ref: listenSocket,\n    };\n    callback(null, { subchannel: subchannelMessage });\n}\nfunction subchannelAddressToAddressMessage(subchannelAddress) {\n    var _a;\n    if ((0, subchannel_address_1.isTcpSubchannelAddress)(subchannelAddress)) {\n        return {\n            address: 'tcpip_address',\n            tcpip_address: {\n                ip_address: (_a = ipAddressStringToBuffer(subchannelAddress.host)) !== null && _a !== void 0 ? _a : undefined,\n                port: subchannelAddress.port,\n            },\n        };\n    }\n    else {\n        return {\n            address: 'uds_address',\n            uds_address: {\n                filename: subchannelAddress.path,\n            },\n        };\n    }\n}\nfunction GetSocket(call, callback) {\n    var _a, _b, _c, _d, _e;\n    const socketId = parseInt(call.request.socket_id, 10);\n    const socketEntry = entityMaps[\"socket\" /* EntityTypes.socket */].getElementByKey(socketId);\n    if (socketEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No socket data found for id ' + socketId,\n        });\n        return;\n    }\n    const resolvedInfo = socketEntry.getInfo();\n    const securityMessage = resolvedInfo.security\n        ? {\n            model: 'tls',\n            tls: {\n                cipher_suite: resolvedInfo.security.cipherSuiteStandardName\n                    ? 'standard_name'\n                    : 'other_name',\n                standard_name: (_a = resolvedInfo.security.cipherSuiteStandardName) !== null && _a !== void 0 ? _a : undefined,\n                other_name: (_b = resolvedInfo.security.cipherSuiteOtherName) !== null && _b !== void 0 ? _b : undefined,\n                local_certificate: (_c = resolvedInfo.security.localCertificate) !== null && _c !== void 0 ? _c : undefined,\n                remote_certificate: (_d = resolvedInfo.security.remoteCertificate) !== null && _d !== void 0 ? _d : undefined,\n            },\n        }\n        : null;\n    const socketMessage = {\n        ref: socketRefToMessage(socketEntry.ref),\n        local: resolvedInfo.localAddress\n            ? subchannelAddressToAddressMessage(resolvedInfo.localAddress)\n            : null,\n        remote: resolvedInfo.remoteAddress\n            ? subchannelAddressToAddressMessage(resolvedInfo.remoteAddress)\n            : null,\n        remote_name: (_e = resolvedInfo.remoteName) !== null && _e !== void 0 ? _e : undefined,\n        security: securityMessage,\n        data: {\n            keep_alives_sent: resolvedInfo.keepAlivesSent,\n            streams_started: resolvedInfo.streamsStarted,\n            streams_succeeded: resolvedInfo.streamsSucceeded,\n            streams_failed: resolvedInfo.streamsFailed,\n            last_local_stream_created_timestamp: dateToProtoTimestamp(resolvedInfo.lastLocalStreamCreatedTimestamp),\n            last_remote_stream_created_timestamp: dateToProtoTimestamp(resolvedInfo.lastRemoteStreamCreatedTimestamp),\n            messages_received: resolvedInfo.messagesReceived,\n            messages_sent: resolvedInfo.messagesSent,\n            last_message_received_timestamp: dateToProtoTimestamp(resolvedInfo.lastMessageReceivedTimestamp),\n            last_message_sent_timestamp: dateToProtoTimestamp(resolvedInfo.lastMessageSentTimestamp),\n            local_flow_control_window: resolvedInfo.localFlowControlWindow\n                ? { value: resolvedInfo.localFlowControlWindow }\n                : null,\n            remote_flow_control_window: resolvedInfo.remoteFlowControlWindow\n                ? { value: resolvedInfo.remoteFlowControlWindow }\n                : null,\n        },\n    };\n    callback(null, { socket: socketMessage });\n}\nfunction GetServerSockets(call, callback) {\n    const serverId = parseInt(call.request.server_id, 10);\n    const serverEntry = entityMaps[\"server\" /* EntityTypes.server */].getElementByKey(serverId);\n    if (serverEntry === undefined) {\n        callback({\n            code: constants_1.Status.NOT_FOUND,\n            details: 'No server data found for id ' + serverId,\n        });\n        return;\n    }\n    const startId = parseInt(call.request.start_socket_id, 10);\n    const maxResults = parseInt(call.request.max_results, 10) || DEFAULT_MAX_RESULTS;\n    const resolvedInfo = serverEntry.getInfo();\n    // If we wanted to include listener sockets in the result, this line would\n    // instead say\n    // const allSockets = resolvedInfo.listenerChildren.sockets.concat(resolvedInfo.sessionChildren.sockets).sort((ref1, ref2) => ref1.id - ref2.id);\n    const allSockets = resolvedInfo.sessionChildren.sockets;\n    const resultList = [];\n    let i;\n    for (i = allSockets.lowerBound(startId); !i.equals(allSockets.end()) && resultList.length < maxResults; i = i.next()) {\n        resultList.push(socketRefToMessage(i.pointer[1].ref));\n    }\n    callback(null, {\n        socket_ref: resultList,\n        end: i.equals(allSockets.end()),\n    });\n}\nfunction getChannelzHandlers() {\n    return {\n        GetChannel,\n        GetTopChannels,\n        GetServer,\n        GetServers,\n        GetSubchannel,\n        GetSocket,\n        GetServerSockets,\n    };\n}\nlet loadedChannelzDefinition = null;\nfunction getChannelzServiceDefinition() {\n    if (loadedChannelzDefinition) {\n        return loadedChannelzDefinition;\n    }\n    /* The purpose of this complexity is to avoid loading @grpc/proto-loader at\n     * runtime for users who will not use/enable channelz. */\n    const loaderLoadSync = require('@grpc/proto-loader')\n        .loadSync;\n    const loadedProto = loaderLoadSync('channelz.proto', {\n        keepCase: true,\n        longs: String,\n        enums: String,\n        defaults: true,\n        oneofs: true,\n        includeDirs: [`${__dirname}/../../proto`],\n    });\n    const channelzGrpcObject = (0, make_client_1.loadPackageDefinition)(loadedProto);\n    loadedChannelzDefinition =\n        channelzGrpcObject.grpc.channelz.v1.Channelz.service;\n    return loadedChannelzDefinition;\n}\nfunction setup() {\n    (0, admin_1.registerAdminService)(getChannelzServiceDefinition, getChannelzHandlers);\n}\n//# sourceMappingURL=channelz.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Subchannel = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst channelz_1 = require(\"./channelz\");\nconst TRACER_NAME = 'subchannel';\n/* setInterval and setTimeout only accept signed 32 bit integers. JS doesn't\n * have a constant for the max signed 32 bit integer, so this is a simple way\n * to calculate it */\nconst KEEPALIVE_MAX_TIME_MS = ~(1 << 31);\nclass Subchannel {\n    /**\n     * A class representing a connection to a single backend.\n     * @param channelTarget The target string for the channel as a whole\n     * @param subchannelAddress The address for the backend that this subchannel\n     *     will connect to\n     * @param options The channel options, plus any specific subchannel options\n     *     for this subchannel\n     * @param credentials The channel credentials used to establish this\n     *     connection\n     */\n    constructor(channelTarget, subchannelAddress, options, credentials, connector) {\n        var _a;\n        this.channelTarget = channelTarget;\n        this.subchannelAddress = subchannelAddress;\n        this.options = options;\n        this.credentials = credentials;\n        this.connector = connector;\n        /**\n         * The subchannel's current connectivity state. Invariant: `session` === `null`\n         * if and only if `connectivityState` is IDLE or TRANSIENT_FAILURE.\n         */\n        this.connectivityState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The underlying http2 session used to make requests.\n         */\n        this.transport = null;\n        /**\n         * Indicates that the subchannel should transition from TRANSIENT_FAILURE to\n         * CONNECTING instead of IDLE when the backoff timeout ends.\n         */\n        this.continueConnecting = false;\n        /**\n         * A list of listener functions that will be called whenever the connectivity\n         * state changes. Will be modified by `addConnectivityStateListener` and\n         * `removeConnectivityStateListener`\n         */\n        this.stateListeners = new Set();\n        /**\n         * Tracks channels and subchannel pools with references to this subchannel\n         */\n        this.refcount = 0;\n        // Channelz info\n        this.channelzEnabled = true;\n        const backoffOptions = {\n            initialDelay: options['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: options['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoffTimeout = new backoff_timeout_1.BackoffTimeout(() => {\n            this.handleBackoffTimer();\n        }, backoffOptions);\n        this.backoffTimeout.unref();\n        this.subchannelAddressString = (0, subchannel_address_1.subchannelAddressToString)(subchannelAddress);\n        this.keepaliveTime = (_a = options['grpc.keepalive_time_ms']) !== null && _a !== void 0 ? _a : -1;\n        if (options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n            this.channelzTrace = new channelz_1.ChannelzTraceStub();\n            this.callTracker = new channelz_1.ChannelzCallTrackerStub();\n            this.childrenTracker = new channelz_1.ChannelzChildrenTrackerStub();\n            this.streamTracker = new channelz_1.ChannelzCallTrackerStub();\n        }\n        else {\n            this.channelzTrace = new channelz_1.ChannelzTrace();\n            this.callTracker = new channelz_1.ChannelzCallTracker();\n            this.childrenTracker = new channelz_1.ChannelzChildrenTracker();\n            this.streamTracker = new channelz_1.ChannelzCallTracker();\n        }\n        this.channelzRef = (0, channelz_1.registerChannelzSubchannel)(this.subchannelAddressString, () => this.getChannelzInfo(), this.channelzEnabled);\n        this.channelzTrace.addTrace('CT_INFO', 'Subchannel created');\n        this.trace('Subchannel constructed with options ' +\n            JSON.stringify(options, undefined, 2));\n        credentials._ref();\n    }\n    getChannelzInfo() {\n        return {\n            state: this.connectivityState,\n            trace: this.channelzTrace,\n            callTracker: this.callTracker,\n            children: this.childrenTracker.getChildLists(),\n            target: this.subchannelAddressString,\n        };\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    refTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'subchannel_refcount', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    handleBackoffTimer() {\n        if (this.continueConnecting) {\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.CONNECTING);\n        }\n        else {\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.IDLE);\n        }\n    }\n    /**\n     * Start a backoff timer with the current nextBackoff timeout\n     */\n    startBackoff() {\n        this.backoffTimeout.runOnce();\n    }\n    stopBackoff() {\n        this.backoffTimeout.stop();\n        this.backoffTimeout.reset();\n    }\n    startConnectingInternal() {\n        let options = this.options;\n        if (options['grpc.keepalive_time_ms']) {\n            const adjustedKeepaliveTime = Math.min(this.keepaliveTime, KEEPALIVE_MAX_TIME_MS);\n            options = Object.assign(Object.assign({}, options), { 'grpc.keepalive_time_ms': adjustedKeepaliveTime });\n        }\n        this.connector\n            .connect(this.subchannelAddress, this.credentials, options)\n            .then(transport => {\n            if (this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING], connectivity_state_1.ConnectivityState.READY)) {\n                this.transport = transport;\n                if (this.channelzEnabled) {\n                    this.childrenTracker.refChild(transport.getChannelzRef());\n                }\n                transport.addDisconnectListener(tooManyPings => {\n                    this.transitionToState([connectivity_state_1.ConnectivityState.READY], connectivity_state_1.ConnectivityState.IDLE);\n                    if (tooManyPings && this.keepaliveTime > 0) {\n                        this.keepaliveTime *= 2;\n                        logging.log(constants_1.LogVerbosity.ERROR, `Connection to ${(0, uri_parser_1.uriToString)(this.channelTarget)} at ${this.subchannelAddressString} rejected by server because of excess pings. Increasing ping interval to ${this.keepaliveTime} ms`);\n                    }\n                });\n            }\n            else {\n                /* If we can't transition from CONNECTING to READY here, we will\n                 * not be using this transport, so release its resources. */\n                transport.shutdown();\n            }\n        }, error => {\n            this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING], connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, `${error}`);\n        });\n    }\n    /**\n     * Initiate a state transition from any element of oldStates to the new\n     * state. If the current connectivityState is not in oldStates, do nothing.\n     * @param oldStates The set of states to transition from\n     * @param newState The state to transition to\n     * @returns True if the state changed, false otherwise\n     */\n    transitionToState(oldStates, newState, errorMessage) {\n        var _a, _b;\n        if (oldStates.indexOf(this.connectivityState) === -1) {\n            return false;\n        }\n        if (errorMessage) {\n            this.trace(connectivity_state_1.ConnectivityState[this.connectivityState] +\n                ' -> ' +\n                connectivity_state_1.ConnectivityState[newState] +\n                ' with error \"' + errorMessage + '\"');\n        }\n        else {\n            this.trace(connectivity_state_1.ConnectivityState[this.connectivityState] +\n                ' -> ' +\n                connectivity_state_1.ConnectivityState[newState]);\n        }\n        if (this.channelzEnabled) {\n            this.channelzTrace.addTrace('CT_INFO', 'Connectivity state change to ' + connectivity_state_1.ConnectivityState[newState]);\n        }\n        const previousState = this.connectivityState;\n        this.connectivityState = newState;\n        switch (newState) {\n            case connectivity_state_1.ConnectivityState.READY:\n                this.stopBackoff();\n                break;\n            case connectivity_state_1.ConnectivityState.CONNECTING:\n                this.startBackoff();\n                this.startConnectingInternal();\n                this.continueConnecting = false;\n                break;\n            case connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE:\n                if (this.channelzEnabled && this.transport) {\n                    this.childrenTracker.unrefChild(this.transport.getChannelzRef());\n                }\n                (_a = this.transport) === null || _a === void 0 ? void 0 : _a.shutdown();\n                this.transport = null;\n                /* If the backoff timer has already ended by the time we get to the\n                 * TRANSIENT_FAILURE state, we want to immediately transition out of\n                 * TRANSIENT_FAILURE as though the backoff timer is ending right now */\n                if (!this.backoffTimeout.isRunning()) {\n                    process.nextTick(() => {\n                        this.handleBackoffTimer();\n                    });\n                }\n                break;\n            case connectivity_state_1.ConnectivityState.IDLE:\n                if (this.channelzEnabled && this.transport) {\n                    this.childrenTracker.unrefChild(this.transport.getChannelzRef());\n                }\n                (_b = this.transport) === null || _b === void 0 ? void 0 : _b.shutdown();\n                this.transport = null;\n                break;\n            default:\n                throw new Error(`Invalid state: unknown ConnectivityState ${newState}`);\n        }\n        for (const listener of this.stateListeners) {\n            listener(this, previousState, newState, this.keepaliveTime, errorMessage);\n        }\n        return true;\n    }\n    ref() {\n        this.refTrace('refcount ' + this.refcount + ' -> ' + (this.refcount + 1));\n        this.refcount += 1;\n    }\n    unref() {\n        this.refTrace('refcount ' + this.refcount + ' -> ' + (this.refcount - 1));\n        this.refcount -= 1;\n        if (this.refcount === 0) {\n            this.channelzTrace.addTrace('CT_INFO', 'Shutting down');\n            (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n            this.credentials._unref();\n            process.nextTick(() => {\n                this.transitionToState([connectivity_state_1.ConnectivityState.CONNECTING, connectivity_state_1.ConnectivityState.READY], connectivity_state_1.ConnectivityState.IDLE);\n            });\n        }\n    }\n    unrefIfOneRef() {\n        if (this.refcount === 1) {\n            this.unref();\n            return true;\n        }\n        return false;\n    }\n    createCall(metadata, host, method, listener) {\n        if (!this.transport) {\n            throw new Error('Cannot create call, subchannel not READY');\n        }\n        let statsTracker;\n        if (this.channelzEnabled) {\n            this.callTracker.addCallStarted();\n            this.streamTracker.addCallStarted();\n            statsTracker = {\n                onCallEnd: status => {\n                    if (status.code === constants_1.Status.OK) {\n                        this.callTracker.addCallSucceeded();\n                    }\n                    else {\n                        this.callTracker.addCallFailed();\n                    }\n                },\n            };\n        }\n        else {\n            statsTracker = {};\n        }\n        return this.transport.createCall(metadata, host, method, listener, statsTracker);\n    }\n    /**\n     * If the subchannel is currently IDLE, start connecting and switch to the\n     * CONNECTING state. If the subchannel is current in TRANSIENT_FAILURE,\n     * the next time it would transition to IDLE, start connecting again instead.\n     * Otherwise, do nothing.\n     */\n    startConnecting() {\n        process.nextTick(() => {\n            /* First, try to transition from IDLE to connecting. If that doesn't happen\n             * because the state is not currently IDLE, check if it is\n             * TRANSIENT_FAILURE, and if so indicate that it should go back to\n             * connecting after the backoff timer ends. Otherwise do nothing */\n            if (!this.transitionToState([connectivity_state_1.ConnectivityState.IDLE], connectivity_state_1.ConnectivityState.CONNECTING)) {\n                if (this.connectivityState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                    this.continueConnecting = true;\n                }\n            }\n        });\n    }\n    /**\n     * Get the subchannel's current connectivity state.\n     */\n    getConnectivityState() {\n        return this.connectivityState;\n    }\n    /**\n     * Add a listener function to be called whenever the subchannel's\n     * connectivity state changes.\n     * @param listener\n     */\n    addConnectivityStateListener(listener) {\n        this.stateListeners.add(listener);\n    }\n    /**\n     * Remove a listener previously added with `addConnectivityStateListener`\n     * @param listener A reference to a function previously passed to\n     *     `addConnectivityStateListener`\n     */\n    removeConnectivityStateListener(listener) {\n        this.stateListeners.delete(listener);\n    }\n    /**\n     * Reset the backoff timeout, and immediately start connecting if in backoff.\n     */\n    resetBackoff() {\n        process.nextTick(() => {\n            this.backoffTimeout.reset();\n            this.transitionToState([connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE], connectivity_state_1.ConnectivityState.CONNECTING);\n        });\n    }\n    getAddress() {\n        return this.subchannelAddressString;\n    }\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    isHealthy() {\n        return true;\n    }\n    addHealthStateWatcher(listener) {\n        // Do nothing with the listener\n    }\n    removeHealthStateWatcher(listener) {\n        // Do nothing with the listener\n    }\n    getRealSubchannel() {\n        return this;\n    }\n    realSubchannelEquals(other) {\n        return other.getRealSubchannel() === this;\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        if (newKeepaliveTime > this.keepaliveTime) {\n            this.keepaliveTime = newKeepaliveTime;\n        }\n    }\n}\nexports.Subchannel = Subchannel;\n//# sourceMappingURL=subchannel.js.map",
    "\"use strict\";\n/*\n * Copyright 2024 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GRPC_NODE_USE_ALTERNATIVE_RESOLVER = void 0;\nexports.GRPC_NODE_USE_ALTERNATIVE_RESOLVER = ((_a = process.env.GRPC_NODE_USE_ALTERNATIVE_RESOLVER) !== null && _a !== void 0 ? _a : 'false') === 'true';\n//# sourceMappingURL=environment.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_PORT = void 0;\nexports.setup = setup;\nconst resolver_1 = require(\"./resolver\");\nconst dns_1 = require(\"dns\");\nconst service_config_1 = require(\"./service-config\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst net_1 = require(\"net\");\nconst backoff_timeout_1 = require(\"./backoff-timeout\");\nconst environment_1 = require(\"./environment\");\nconst TRACER_NAME = 'dns_resolver';\nfunction trace(text) {\n    logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\n/**\n * The default TCP port to connect to if not explicitly specified in the target.\n */\nexports.DEFAULT_PORT = 443;\nconst DEFAULT_MIN_TIME_BETWEEN_RESOLUTIONS_MS = 30000;\n/**\n * Resolver implementation that handles DNS names and IP addresses.\n */\nclass DnsResolver {\n    constructor(target, listener, channelOptions) {\n        var _a, _b, _c;\n        this.target = target;\n        this.listener = listener;\n        this.pendingLookupPromise = null;\n        this.pendingTxtPromise = null;\n        this.latestLookupResult = null;\n        this.latestServiceConfig = null;\n        this.latestServiceConfigError = null;\n        this.continueResolving = false;\n        this.isNextResolutionTimerRunning = false;\n        this.isServiceConfigEnabled = true;\n        this.returnedIpResult = false;\n        this.alternativeResolver = new dns_1.promises.Resolver();\n        trace('Resolver constructed for target ' + (0, uri_parser_1.uriToString)(target));\n        if (target.authority) {\n            this.alternativeResolver.setServers([target.authority]);\n        }\n        const hostPort = (0, uri_parser_1.splitHostPort)(target.path);\n        if (hostPort === null) {\n            this.ipResult = null;\n            this.dnsHostname = null;\n            this.port = null;\n        }\n        else {\n            if ((0, net_1.isIPv4)(hostPort.host) || (0, net_1.isIPv6)(hostPort.host)) {\n                this.ipResult = [\n                    {\n                        addresses: [\n                            {\n                                host: hostPort.host,\n                                port: (_a = hostPort.port) !== null && _a !== void 0 ? _a : exports.DEFAULT_PORT,\n                            },\n                        ],\n                    },\n                ];\n                this.dnsHostname = null;\n                this.port = null;\n            }\n            else {\n                this.ipResult = null;\n                this.dnsHostname = hostPort.host;\n                this.port = (_b = hostPort.port) !== null && _b !== void 0 ? _b : exports.DEFAULT_PORT;\n            }\n        }\n        this.percentage = Math.random() * 100;\n        if (channelOptions['grpc.service_config_disable_resolution'] === 1) {\n            this.isServiceConfigEnabled = false;\n        }\n        this.defaultResolutionError = {\n            code: constants_1.Status.UNAVAILABLE,\n            details: `Name resolution failed for target ${(0, uri_parser_1.uriToString)(this.target)}`,\n            metadata: new metadata_1.Metadata(),\n        };\n        const backoffOptions = {\n            initialDelay: channelOptions['grpc.initial_reconnect_backoff_ms'],\n            maxDelay: channelOptions['grpc.max_reconnect_backoff_ms'],\n        };\n        this.backoff = new backoff_timeout_1.BackoffTimeout(() => {\n            if (this.continueResolving) {\n                this.startResolutionWithBackoff();\n            }\n        }, backoffOptions);\n        this.backoff.unref();\n        this.minTimeBetweenResolutionsMs =\n            (_c = channelOptions['grpc.dns_min_time_between_resolutions_ms']) !== null && _c !== void 0 ? _c : DEFAULT_MIN_TIME_BETWEEN_RESOLUTIONS_MS;\n        this.nextResolutionTimer = setTimeout(() => { }, 0);\n        clearTimeout(this.nextResolutionTimer);\n    }\n    /**\n     * If the target is an IP address, just provide that address as a result.\n     * Otherwise, initiate A, AAAA, and TXT lookups\n     */\n    startResolution() {\n        if (this.ipResult !== null) {\n            if (!this.returnedIpResult) {\n                trace('Returning IP address for target ' + (0, uri_parser_1.uriToString)(this.target));\n                setImmediate(() => {\n                    this.listener.onSuccessfulResolution(this.ipResult, null, null, null, {});\n                });\n                this.returnedIpResult = true;\n            }\n            this.backoff.stop();\n            this.backoff.reset();\n            this.stopNextResolutionTimer();\n            return;\n        }\n        if (this.dnsHostname === null) {\n            trace('Failed to parse DNS address ' + (0, uri_parser_1.uriToString)(this.target));\n            setImmediate(() => {\n                this.listener.onError({\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse DNS address ${(0, uri_parser_1.uriToString)(this.target)}`,\n                    metadata: new metadata_1.Metadata(),\n                });\n            });\n            this.stopNextResolutionTimer();\n        }\n        else {\n            if (this.pendingLookupPromise !== null) {\n                return;\n            }\n            trace('Looking up DNS hostname ' + this.dnsHostname);\n            /* We clear out latestLookupResult here to ensure that it contains the\n             * latest result since the last time we started resolving. That way, the\n             * TXT resolution handler can use it, but only if it finishes second. We\n             * don't clear out any previous service config results because it's\n             * better to use a service config that's slightly out of date than to\n             * revert to an effectively blank one. */\n            this.latestLookupResult = null;\n            const hostname = this.dnsHostname;\n            this.pendingLookupPromise = this.lookup(hostname);\n            this.pendingLookupPromise.then(addressList => {\n                if (this.pendingLookupPromise === null) {\n                    return;\n                }\n                this.pendingLookupPromise = null;\n                this.backoff.reset();\n                this.backoff.stop();\n                this.latestLookupResult = addressList.map(address => ({\n                    addresses: [address],\n                }));\n                const allAddressesString = '[' +\n                    addressList.map(addr => addr.host + ':' + addr.port).join(',') +\n                    ']';\n                trace('Resolved addresses for target ' +\n                    (0, uri_parser_1.uriToString)(this.target) +\n                    ': ' +\n                    allAddressesString);\n                if (this.latestLookupResult.length === 0) {\n                    this.listener.onError(this.defaultResolutionError);\n                    return;\n                }\n                /* If the TXT lookup has not yet finished, both of the last two\n                 * arguments will be null, which is the equivalent of getting an\n                 * empty TXT response. When the TXT lookup does finish, its handler\n                 * can update the service config by using the same address list */\n                this.listener.onSuccessfulResolution(this.latestLookupResult, this.latestServiceConfig, this.latestServiceConfigError, null, {});\n            }, err => {\n                if (this.pendingLookupPromise === null) {\n                    return;\n                }\n                trace('Resolution error for target ' +\n                    (0, uri_parser_1.uriToString)(this.target) +\n                    ': ' +\n                    err.message);\n                this.pendingLookupPromise = null;\n                this.stopNextResolutionTimer();\n                this.listener.onError(this.defaultResolutionError);\n            });\n            /* If there already is a still-pending TXT resolution, we can just use\n             * that result when it comes in */\n            if (this.isServiceConfigEnabled && this.pendingTxtPromise === null) {\n                /* We handle the TXT query promise differently than the others because\n                 * the name resolution attempt as a whole is a success even if the TXT\n                 * lookup fails */\n                this.pendingTxtPromise = this.resolveTxt(hostname);\n                this.pendingTxtPromise.then(txtRecord => {\n                    if (this.pendingTxtPromise === null) {\n                        return;\n                    }\n                    this.pendingTxtPromise = null;\n                    try {\n                        this.latestServiceConfig = (0, service_config_1.extractAndSelectServiceConfig)(txtRecord, this.percentage);\n                    }\n                    catch (err) {\n                        this.latestServiceConfigError = {\n                            code: constants_1.Status.UNAVAILABLE,\n                            details: `Parsing service config failed with error ${err.message}`,\n                            metadata: new metadata_1.Metadata(),\n                        };\n                    }\n                    if (this.latestLookupResult !== null) {\n                        /* We rely here on the assumption that calling this function with\n                         * identical parameters will be essentialy idempotent, and calling\n                         * it with the same address list and a different service config\n                         * should result in a fast and seamless switchover. */\n                        this.listener.onSuccessfulResolution(this.latestLookupResult, this.latestServiceConfig, this.latestServiceConfigError, null, {});\n                    }\n                }, err => {\n                    /* If TXT lookup fails we should do nothing, which means that we\n                     * continue to use the result of the most recent successful lookup,\n                     * or the default null config object if there has never been a\n                     * successful lookup. We do not set the latestServiceConfigError\n                     * here because that is specifically used for response validation\n                     * errors. We still need to handle this error so that it does not\n                     * bubble up as an unhandled promise rejection. */\n                });\n            }\n        }\n    }\n    async lookup(hostname) {\n        if (environment_1.GRPC_NODE_USE_ALTERNATIVE_RESOLVER) {\n            trace('Using alternative DNS resolver.');\n            const records = await Promise.allSettled([\n                this.alternativeResolver.resolve4(hostname),\n                this.alternativeResolver.resolve6(hostname),\n            ]);\n            if (records.every(result => result.status === 'rejected')) {\n                throw new Error(records[0].reason);\n            }\n            return records\n                .reduce((acc, result) => {\n                return result.status === 'fulfilled'\n                    ? [...acc, ...result.value]\n                    : acc;\n            }, [])\n                .map(addr => ({\n                host: addr,\n                port: +this.port,\n            }));\n        }\n        /* We lookup both address families here and then split them up later\n         * because when looking up a single family, dns.lookup outputs an error\n         * if the name exists but there are no records for that family, and that\n         * error is indistinguishable from other kinds of errors */\n        const addressList = await dns_1.promises.lookup(hostname, { all: true });\n        return addressList.map(addr => ({ host: addr.address, port: +this.port }));\n    }\n    async resolveTxt(hostname) {\n        if (environment_1.GRPC_NODE_USE_ALTERNATIVE_RESOLVER) {\n            trace('Using alternative DNS resolver.');\n            return this.alternativeResolver.resolveTxt(hostname);\n        }\n        return dns_1.promises.resolveTxt(hostname);\n    }\n    startNextResolutionTimer() {\n        var _a, _b;\n        clearTimeout(this.nextResolutionTimer);\n        this.nextResolutionTimer = setTimeout(() => {\n            this.stopNextResolutionTimer();\n            if (this.continueResolving) {\n                this.startResolutionWithBackoff();\n            }\n        }, this.minTimeBetweenResolutionsMs);\n        (_b = (_a = this.nextResolutionTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.isNextResolutionTimerRunning = true;\n    }\n    stopNextResolutionTimer() {\n        clearTimeout(this.nextResolutionTimer);\n        this.isNextResolutionTimerRunning = false;\n    }\n    startResolutionWithBackoff() {\n        if (this.pendingLookupPromise === null) {\n            this.continueResolving = false;\n            this.backoff.runOnce();\n            this.startNextResolutionTimer();\n            this.startResolution();\n        }\n    }\n    updateResolution() {\n        /* If there is a pending lookup, just let it finish. Otherwise, if the\n         * nextResolutionTimer or backoff timer is running, set the\n         * continueResolving flag to resolve when whichever of those timers\n         * fires. Otherwise, start resolving immediately. */\n        if (this.pendingLookupPromise === null) {\n            if (this.isNextResolutionTimerRunning || this.backoff.isRunning()) {\n                if (this.isNextResolutionTimerRunning) {\n                    trace('resolution update delayed by \"min time between resolutions\" rate limit');\n                }\n                else {\n                    trace('resolution update delayed by backoff timer until ' +\n                        this.backoff.getEndTime().toISOString());\n                }\n                this.continueResolving = true;\n            }\n            else {\n                this.startResolutionWithBackoff();\n            }\n        }\n    }\n    /**\n     * Reset the resolver to the same state it had when it was created. In-flight\n     * DNS requests cannot be cancelled, but they are discarded and their results\n     * will be ignored.\n     */\n    destroy() {\n        this.continueResolving = false;\n        this.backoff.reset();\n        this.backoff.stop();\n        this.stopNextResolutionTimer();\n        this.pendingLookupPromise = null;\n        this.pendingTxtPromise = null;\n        this.latestLookupResult = null;\n        this.latestServiceConfig = null;\n        this.latestServiceConfigError = null;\n        this.returnedIpResult = false;\n    }\n    /**\n     * Get the default authority for the given target. For IP targets, that is\n     * the IP address. For DNS targets, it is the hostname.\n     * @param target\n     */\n    static getDefaultAuthority(target) {\n        return target.path;\n    }\n}\n/**\n * Set up the DNS resolver class by registering it as the handler for the\n * \"dns:\" prefix and as the default resolver.\n */\nfunction setup() {\n    (0, resolver_1.registerResolver)('dns', DnsResolver);\n    (0, resolver_1.registerDefaultScheme)('dns');\n}\n//# sourceMappingURL=resolver-dns.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapProxyName = mapProxyName;\nexports.getProxiedConnection = getProxiedConnection;\nconst logging_1 = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst resolver_1 = require(\"./resolver\");\nconst http = require(\"http\");\nconst tls = require(\"tls\");\nconst logging = require(\"./logging\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst url_1 = require(\"url\");\nconst resolver_dns_1 = require(\"./resolver-dns\");\nconst TRACER_NAME = 'proxy';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nfunction getProxyInfo() {\n    let proxyEnv = '';\n    let envVar = '';\n    /* Prefer using 'grpc_proxy'. Fallback on 'http_proxy' if it is not set.\n     * Also prefer using 'https_proxy' with fallback on 'http_proxy'. The\n     * fallback behavior can be removed if there's a demand for it.\n     */\n    if (process.env.grpc_proxy) {\n        envVar = 'grpc_proxy';\n        proxyEnv = process.env.grpc_proxy;\n    }\n    else if (process.env.https_proxy) {\n        envVar = 'https_proxy';\n        proxyEnv = process.env.https_proxy;\n    }\n    else if (process.env.http_proxy) {\n        envVar = 'http_proxy';\n        proxyEnv = process.env.http_proxy;\n    }\n    else {\n        return {};\n    }\n    let proxyUrl;\n    try {\n        proxyUrl = new url_1.URL(proxyEnv);\n    }\n    catch (e) {\n        (0, logging_1.log)(constants_1.LogVerbosity.ERROR, `cannot parse value of \"${envVar}\" env var`);\n        return {};\n    }\n    if (proxyUrl.protocol !== 'http:') {\n        (0, logging_1.log)(constants_1.LogVerbosity.ERROR, `\"${proxyUrl.protocol}\" scheme not supported in proxy URI`);\n        return {};\n    }\n    let userCred = null;\n    if (proxyUrl.username) {\n        if (proxyUrl.password) {\n            (0, logging_1.log)(constants_1.LogVerbosity.INFO, 'userinfo found in proxy URI');\n            userCred = decodeURIComponent(`${proxyUrl.username}:${proxyUrl.password}`);\n        }\n        else {\n            userCred = proxyUrl.username;\n        }\n    }\n    const hostname = proxyUrl.hostname;\n    let port = proxyUrl.port;\n    /* The proxy URL uses the scheme \"http:\", which has a default port number of\n     * 80. We need to set that explicitly here if it is omitted because otherwise\n     * it will use gRPC's default port 443. */\n    if (port === '') {\n        port = '80';\n    }\n    const result = {\n        address: `${hostname}:${port}`,\n    };\n    if (userCred) {\n        result.creds = userCred;\n    }\n    trace('Proxy server ' + result.address + ' set by environment variable ' + envVar);\n    return result;\n}\nfunction getNoProxyHostList() {\n    /* Prefer using 'no_grpc_proxy'. Fallback on 'no_proxy' if it is not set. */\n    let noProxyStr = process.env.no_grpc_proxy;\n    let envVar = 'no_grpc_proxy';\n    if (!noProxyStr) {\n        noProxyStr = process.env.no_proxy;\n        envVar = 'no_proxy';\n    }\n    if (noProxyStr) {\n        trace('No proxy server list set by environment variable ' + envVar);\n        return noProxyStr.split(',');\n    }\n    else {\n        return [];\n    }\n}\nfunction mapProxyName(target, options) {\n    var _a;\n    const noProxyResult = {\n        target: target,\n        extraOptions: {},\n    };\n    if (((_a = options['grpc.enable_http_proxy']) !== null && _a !== void 0 ? _a : 1) === 0) {\n        return noProxyResult;\n    }\n    if (target.scheme === 'unix') {\n        return noProxyResult;\n    }\n    const proxyInfo = getProxyInfo();\n    if (!proxyInfo.address) {\n        return noProxyResult;\n    }\n    const hostPort = (0, uri_parser_1.splitHostPort)(target.path);\n    if (!hostPort) {\n        return noProxyResult;\n    }\n    const serverHost = hostPort.host;\n    for (const host of getNoProxyHostList()) {\n        if (host === serverHost) {\n            trace('Not using proxy for target in no_proxy list: ' + (0, uri_parser_1.uriToString)(target));\n            return noProxyResult;\n        }\n    }\n    const extraOptions = {\n        'grpc.http_connect_target': (0, uri_parser_1.uriToString)(target),\n    };\n    if (proxyInfo.creds) {\n        extraOptions['grpc.http_connect_creds'] = proxyInfo.creds;\n    }\n    return {\n        target: {\n            scheme: 'dns',\n            path: proxyInfo.address,\n        },\n        extraOptions: extraOptions,\n    };\n}\nfunction getProxiedConnection(address, channelOptions, connectionOptions) {\n    var _a;\n    if (!('grpc.http_connect_target' in channelOptions)) {\n        return Promise.resolve({});\n    }\n    const realTarget = channelOptions['grpc.http_connect_target'];\n    const parsedTarget = (0, uri_parser_1.parseUri)(realTarget);\n    if (parsedTarget === null) {\n        return Promise.resolve({});\n    }\n    const splitHostPost = (0, uri_parser_1.splitHostPort)(parsedTarget.path);\n    if (splitHostPost === null) {\n        return Promise.resolve({});\n    }\n    const hostPort = `${splitHostPost.host}:${(_a = splitHostPost.port) !== null && _a !== void 0 ? _a : resolver_dns_1.DEFAULT_PORT}`;\n    const options = {\n        method: 'CONNECT',\n        path: hostPort,\n    };\n    const headers = {\n        Host: hostPort,\n    };\n    // Connect to the subchannel address as a proxy\n    if ((0, subchannel_address_1.isTcpSubchannelAddress)(address)) {\n        options.host = address.host;\n        options.port = address.port;\n    }\n    else {\n        options.socketPath = address.path;\n    }\n    if ('grpc.http_connect_creds' in channelOptions) {\n        headers['Proxy-Authorization'] =\n            'Basic ' +\n                Buffer.from(channelOptions['grpc.http_connect_creds']).toString('base64');\n    }\n    options.headers = headers;\n    const proxyAddressString = (0, subchannel_address_1.subchannelAddressToString)(address);\n    trace('Using proxy ' + proxyAddressString + ' to connect to ' + options.path);\n    return new Promise((resolve, reject) => {\n        const request = http.request(options);\n        request.once('connect', (res, socket, head) => {\n            var _a;\n            request.removeAllListeners();\n            socket.removeAllListeners();\n            if (res.statusCode === 200) {\n                trace('Successfully connected to ' +\n                    options.path +\n                    ' through proxy ' +\n                    proxyAddressString);\n                // The HTTP client may have already read a few bytes of the proxied\n                // connection. If that's the case, put them back into the socket.\n                // See https://github.com/grpc/grpc-node/issues/2744.\n                if (head.length > 0) {\n                    socket.unshift(head);\n                }\n                if ('secureContext' in connectionOptions) {\n                    /* The proxy is connecting to a TLS server, so upgrade this socket\n                     * connection to a TLS connection.\n                     * This is a workaround for https://github.com/nodejs/node/issues/32922\n                     * See https://github.com/grpc/grpc-node/pull/1369 for more info. */\n                    const targetPath = (0, resolver_1.getDefaultAuthority)(parsedTarget);\n                    const hostPort = (0, uri_parser_1.splitHostPort)(targetPath);\n                    const remoteHost = (_a = hostPort === null || hostPort === void 0 ? void 0 : hostPort.host) !== null && _a !== void 0 ? _a : targetPath;\n                    const cts = tls.connect(Object.assign({ host: remoteHost, servername: remoteHost, socket: socket }, connectionOptions), () => {\n                        trace('Successfully established a TLS connection to ' +\n                            options.path +\n                            ' through proxy ' +\n                            proxyAddressString);\n                        resolve({ socket: cts, realTarget: parsedTarget });\n                    });\n                    cts.on('error', (error) => {\n                        trace('Failed to establish a TLS connection to ' +\n                            options.path +\n                            ' through proxy ' +\n                            proxyAddressString +\n                            ' with error ' +\n                            error.message);\n                        reject();\n                    });\n                }\n                else {\n                    trace('Successfully established a plaintext connection to ' +\n                        options.path +\n                        ' through proxy ' +\n                        proxyAddressString);\n                    resolve({\n                        socket,\n                        realTarget: parsedTarget,\n                    });\n                }\n            }\n            else {\n                (0, logging_1.log)(constants_1.LogVerbosity.ERROR, 'Failed to connect to ' +\n                    options.path +\n                    ' through proxy ' +\n                    proxyAddressString +\n                    ' with status ' +\n                    res.statusCode);\n                reject();\n            }\n        });\n        request.once('error', err => {\n            request.removeAllListeners();\n            (0, logging_1.log)(constants_1.LogVerbosity.ERROR, 'Failed to connect to proxy ' +\n                proxyAddressString +\n                ' with error ' +\n                err.message);\n            reject();\n        });\n        request.end();\n    });\n}\n//# sourceMappingURL=http_proxy.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamDecoder = void 0;\nvar ReadState;\n(function (ReadState) {\n    ReadState[ReadState[\"NO_DATA\"] = 0] = \"NO_DATA\";\n    ReadState[ReadState[\"READING_SIZE\"] = 1] = \"READING_SIZE\";\n    ReadState[ReadState[\"READING_MESSAGE\"] = 2] = \"READING_MESSAGE\";\n})(ReadState || (ReadState = {}));\nclass StreamDecoder {\n    constructor(maxReadMessageLength) {\n        this.maxReadMessageLength = maxReadMessageLength;\n        this.readState = ReadState.NO_DATA;\n        this.readCompressFlag = Buffer.alloc(1);\n        this.readPartialSize = Buffer.alloc(4);\n        this.readSizeRemaining = 4;\n        this.readMessageSize = 0;\n        this.readPartialMessage = [];\n        this.readMessageRemaining = 0;\n    }\n    write(data) {\n        let readHead = 0;\n        let toRead;\n        const result = [];\n        while (readHead < data.length) {\n            switch (this.readState) {\n                case ReadState.NO_DATA:\n                    this.readCompressFlag = data.slice(readHead, readHead + 1);\n                    readHead += 1;\n                    this.readState = ReadState.READING_SIZE;\n                    this.readPartialSize.fill(0);\n                    this.readSizeRemaining = 4;\n                    this.readMessageSize = 0;\n                    this.readMessageRemaining = 0;\n                    this.readPartialMessage = [];\n                    break;\n                case ReadState.READING_SIZE:\n                    toRead = Math.min(data.length - readHead, this.readSizeRemaining);\n                    data.copy(this.readPartialSize, 4 - this.readSizeRemaining, readHead, readHead + toRead);\n                    this.readSizeRemaining -= toRead;\n                    readHead += toRead;\n                    // readSizeRemaining >=0 here\n                    if (this.readSizeRemaining === 0) {\n                        this.readMessageSize = this.readPartialSize.readUInt32BE(0);\n                        if (this.maxReadMessageLength !== -1 && this.readMessageSize > this.maxReadMessageLength) {\n                            throw new Error(`Received message larger than max (${this.readMessageSize} vs ${this.maxReadMessageLength})`);\n                        }\n                        this.readMessageRemaining = this.readMessageSize;\n                        if (this.readMessageRemaining > 0) {\n                            this.readState = ReadState.READING_MESSAGE;\n                        }\n                        else {\n                            const message = Buffer.concat([this.readCompressFlag, this.readPartialSize], 5);\n                            this.readState = ReadState.NO_DATA;\n                            result.push(message);\n                        }\n                    }\n                    break;\n                case ReadState.READING_MESSAGE:\n                    toRead = Math.min(data.length - readHead, this.readMessageRemaining);\n                    this.readPartialMessage.push(data.slice(readHead, readHead + toRead));\n                    this.readMessageRemaining -= toRead;\n                    readHead += toRead;\n                    // readMessageRemaining >=0 here\n                    if (this.readMessageRemaining === 0) {\n                        // At this point, we have read a full message\n                        const framedMessageBuffers = [\n                            this.readCompressFlag,\n                            this.readPartialSize,\n                        ].concat(this.readPartialMessage);\n                        const framedMessage = Buffer.concat(framedMessageBuffers, this.readMessageSize + 5);\n                        this.readState = ReadState.NO_DATA;\n                        result.push(framedMessage);\n                    }\n                    break;\n                default:\n                    throw new Error('Unexpected read state');\n            }\n        }\n        return result;\n    }\n}\nexports.StreamDecoder = StreamDecoder;\n//# sourceMappingURL=stream-decoder.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2SubchannelCall = void 0;\nconst http2 = require(\"http2\");\nconst os = require(\"os\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst stream_decoder_1 = require(\"./stream-decoder\");\nconst logging = require(\"./logging\");\nconst constants_2 = require(\"./constants\");\nconst TRACER_NAME = 'subchannel_call';\n/**\n * Should do approximately the same thing as util.getSystemErrorName but the\n * TypeScript types don't have that function for some reason so I just made my\n * own.\n * @param errno\n */\nfunction getSystemErrorName(errno) {\n    for (const [name, num] of Object.entries(os.constants.errno)) {\n        if (num === errno) {\n            return name;\n        }\n    }\n    return 'Unknown system error ' + errno;\n}\nfunction mapHttpStatusCode(code) {\n    const details = `Received HTTP status code ${code}`;\n    let mappedStatusCode;\n    switch (code) {\n        // TODO(murgatroid99): handle 100 and 101\n        case 400:\n            mappedStatusCode = constants_1.Status.INTERNAL;\n            break;\n        case 401:\n            mappedStatusCode = constants_1.Status.UNAUTHENTICATED;\n            break;\n        case 403:\n            mappedStatusCode = constants_1.Status.PERMISSION_DENIED;\n            break;\n        case 404:\n            mappedStatusCode = constants_1.Status.UNIMPLEMENTED;\n            break;\n        case 429:\n        case 502:\n        case 503:\n        case 504:\n            mappedStatusCode = constants_1.Status.UNAVAILABLE;\n            break;\n        default:\n            mappedStatusCode = constants_1.Status.UNKNOWN;\n    }\n    return {\n        code: mappedStatusCode,\n        details: details,\n        metadata: new metadata_1.Metadata()\n    };\n}\nclass Http2SubchannelCall {\n    constructor(http2Stream, callEventTracker, listener, transport, callId) {\n        var _a;\n        this.http2Stream = http2Stream;\n        this.callEventTracker = callEventTracker;\n        this.listener = listener;\n        this.transport = transport;\n        this.callId = callId;\n        this.isReadFilterPending = false;\n        this.isPushPending = false;\n        this.canPush = false;\n        /**\n         * Indicates that an 'end' event has come from the http2 stream, so there\n         * will be no more data events.\n         */\n        this.readsClosed = false;\n        this.statusOutput = false;\n        this.unpushedReadMessages = [];\n        // This is populated (non-null) if and only if the call has ended\n        this.finalStatus = null;\n        this.internalError = null;\n        this.serverEndedCall = false;\n        this.connectionDropped = false;\n        const maxReceiveMessageLength = (_a = transport.getOptions()['grpc.max_receive_message_length']) !== null && _a !== void 0 ? _a : constants_1.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n        this.decoder = new stream_decoder_1.StreamDecoder(maxReceiveMessageLength);\n        http2Stream.on('response', (headers, flags) => {\n            let headersString = '';\n            for (const header of Object.keys(headers)) {\n                headersString += '\\t\\t' + header + ': ' + headers[header] + '\\n';\n            }\n            this.trace('Received server headers:\\n' + headersString);\n            this.httpStatusCode = headers[':status'];\n            if (flags & http2.constants.NGHTTP2_FLAG_END_STREAM) {\n                this.handleTrailers(headers);\n            }\n            else {\n                let metadata;\n                try {\n                    metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n                }\n                catch (error) {\n                    this.endCall({\n                        code: constants_1.Status.UNKNOWN,\n                        details: error.message,\n                        metadata: new metadata_1.Metadata(),\n                    });\n                    return;\n                }\n                this.listener.onReceiveMetadata(metadata);\n            }\n        });\n        http2Stream.on('trailers', (headers) => {\n            this.handleTrailers(headers);\n        });\n        http2Stream.on('data', (data) => {\n            /* If the status has already been output, allow the http2 stream to\n             * drain without processing the data. */\n            if (this.statusOutput) {\n                return;\n            }\n            this.trace('receive HTTP/2 data frame of length ' + data.length);\n            let messages;\n            try {\n                messages = this.decoder.write(data);\n            }\n            catch (e) {\n                /* Some servers send HTML error pages along with HTTP status codes.\n                 * When the client attempts to parse this as a length-delimited\n                 * message, the parsed message size is greater than the default limit,\n                 * resulting in a message decoding error. In that situation, the HTTP\n                 * error code information is more useful to the user than the\n                 * RESOURCE_EXHAUSTED error is, so we report that instead. Normally,\n                 * we delay processing the HTTP status until after the stream ends, to\n                 * prioritize reporting the gRPC status from trailers if it is present,\n                 * but when there is a message parsing error we end the stream early\n                 * before processing trailers. */\n                if (this.httpStatusCode !== undefined && this.httpStatusCode !== 200) {\n                    const mappedStatus = mapHttpStatusCode(this.httpStatusCode);\n                    this.cancelWithStatus(mappedStatus.code, mappedStatus.details);\n                }\n                else {\n                    this.cancelWithStatus(constants_1.Status.RESOURCE_EXHAUSTED, e.message);\n                }\n                return;\n            }\n            for (const message of messages) {\n                this.trace('parsed message of length ' + message.length);\n                this.callEventTracker.addMessageReceived();\n                this.tryPush(message);\n            }\n        });\n        http2Stream.on('end', () => {\n            this.readsClosed = true;\n            this.maybeOutputStatus();\n        });\n        http2Stream.on('close', () => {\n            this.serverEndedCall = true;\n            /* Use process.next tick to ensure that this code happens after any\n             * \"error\" event that may be emitted at about the same time, so that\n             * we can bubble up the error message from that event. */\n            process.nextTick(() => {\n                var _a;\n                this.trace('HTTP/2 stream closed with code ' + http2Stream.rstCode);\n                /* If we have a final status with an OK status code, that means that\n                 * we have received all of the messages and we have processed the\n                 * trailers and the call completed successfully, so it doesn't matter\n                 * how the stream ends after that */\n                if (((_a = this.finalStatus) === null || _a === void 0 ? void 0 : _a.code) === constants_1.Status.OK) {\n                    return;\n                }\n                let code;\n                let details = '';\n                switch (http2Stream.rstCode) {\n                    case http2.constants.NGHTTP2_NO_ERROR:\n                        /* If we get a NO_ERROR code and we already have a status, the\n                         * stream completed properly and we just haven't fully processed\n                         * it yet */\n                        if (this.finalStatus !== null) {\n                            return;\n                        }\n                        if (this.httpStatusCode && this.httpStatusCode !== 200) {\n                            const mappedStatus = mapHttpStatusCode(this.httpStatusCode);\n                            code = mappedStatus.code;\n                            details = mappedStatus.details;\n                        }\n                        else {\n                            code = constants_1.Status.INTERNAL;\n                            details = `Received RST_STREAM with code ${http2Stream.rstCode} (Call ended without gRPC status)`;\n                        }\n                        break;\n                    case http2.constants.NGHTTP2_REFUSED_STREAM:\n                        code = constants_1.Status.UNAVAILABLE;\n                        details = 'Stream refused by server';\n                        break;\n                    case http2.constants.NGHTTP2_CANCEL:\n                        /* Bug reports indicate that Node synthesizes a NGHTTP2_CANCEL\n                         * code from connection drops. We want to prioritize reporting\n                         * an unavailable status when that happens. */\n                        if (this.connectionDropped) {\n                            code = constants_1.Status.UNAVAILABLE;\n                            details = 'Connection dropped';\n                        }\n                        else {\n                            code = constants_1.Status.CANCELLED;\n                            details = 'Call cancelled';\n                        }\n                        break;\n                    case http2.constants.NGHTTP2_ENHANCE_YOUR_CALM:\n                        code = constants_1.Status.RESOURCE_EXHAUSTED;\n                        details = 'Bandwidth exhausted or memory limit exceeded';\n                        break;\n                    case http2.constants.NGHTTP2_INADEQUATE_SECURITY:\n                        code = constants_1.Status.PERMISSION_DENIED;\n                        details = 'Protocol not secure enough';\n                        break;\n                    case http2.constants.NGHTTP2_INTERNAL_ERROR:\n                        code = constants_1.Status.INTERNAL;\n                        if (this.internalError === null) {\n                            /* This error code was previously handled in the default case, and\n                             * there are several instances of it online, so I wanted to\n                             * preserve the original error message so that people find existing\n                             * information in searches, but also include the more recognizable\n                             * \"Internal server error\" message. */\n                            details = `Received RST_STREAM with code ${http2Stream.rstCode} (Internal server error)`;\n                        }\n                        else {\n                            if (this.internalError.code === 'ECONNRESET' ||\n                                this.internalError.code === 'ETIMEDOUT') {\n                                code = constants_1.Status.UNAVAILABLE;\n                                details = this.internalError.message;\n                            }\n                            else {\n                                /* The \"Received RST_STREAM with code ...\" error is preserved\n                                 * here for continuity with errors reported online, but the\n                                 * error message at the end will probably be more relevant in\n                                 * most cases. */\n                                details = `Received RST_STREAM with code ${http2Stream.rstCode} triggered by internal client error: ${this.internalError.message}`;\n                            }\n                        }\n                        break;\n                    default:\n                        code = constants_1.Status.INTERNAL;\n                        details = `Received RST_STREAM with code ${http2Stream.rstCode}`;\n                }\n                // This is a no-op if trailers were received at all.\n                // This is OK, because status codes emitted here correspond to more\n                // catastrophic issues that prevent us from receiving trailers in the\n                // first place.\n                this.endCall({\n                    code,\n                    details,\n                    metadata: new metadata_1.Metadata(),\n                    rstCode: http2Stream.rstCode,\n                });\n            });\n        });\n        http2Stream.on('error', (err) => {\n            /* We need an error handler here to stop \"Uncaught Error\" exceptions\n             * from bubbling up. However, errors here should all correspond to\n             * \"close\" events, where we will handle the error more granularly */\n            /* Specifically looking for stream errors that were *not* constructed\n             * from a RST_STREAM response here:\n             * https://github.com/nodejs/node/blob/8b8620d580314050175983402dfddf2674e8e22a/lib/internal/http2/core.js#L2267\n             */\n            if (err.code !== 'ERR_HTTP2_STREAM_ERROR') {\n                this.trace('Node error event: message=' +\n                    err.message +\n                    ' code=' +\n                    err.code +\n                    ' errno=' +\n                    getSystemErrorName(err.errno) +\n                    ' syscall=' +\n                    err.syscall);\n                this.internalError = err;\n            }\n            this.callEventTracker.onStreamEnd(false);\n        });\n    }\n    getDeadlineInfo() {\n        return [`remote_addr=${this.getPeer()}`];\n    }\n    onDisconnect() {\n        this.connectionDropped = true;\n        /* Give the call an event loop cycle to finish naturally before reporting\n         * the disconnection as an error. */\n        setImmediate(() => {\n            this.endCall({\n                code: constants_1.Status.UNAVAILABLE,\n                details: 'Connection dropped',\n                metadata: new metadata_1.Metadata(),\n            });\n        });\n    }\n    outputStatus() {\n        /* Precondition: this.finalStatus !== null */\n        if (!this.statusOutput) {\n            this.statusOutput = true;\n            this.trace('ended with status: code=' +\n                this.finalStatus.code +\n                ' details=\"' +\n                this.finalStatus.details +\n                '\"');\n            this.callEventTracker.onCallEnd(this.finalStatus);\n            /* We delay the actual action of bubbling up the status to insulate the\n             * cleanup code in this class from any errors that may be thrown in the\n             * upper layers as a result of bubbling up the status. In particular,\n             * if the status is not OK, the \"error\" event may be emitted\n             * synchronously at the top level, which will result in a thrown error if\n             * the user does not handle that event. */\n            process.nextTick(() => {\n                this.listener.onReceiveStatus(this.finalStatus);\n            });\n            /* Leave the http2 stream in flowing state to drain incoming messages, to\n             * ensure that the stream closure completes. The call stream already does\n             * not push more messages after the status is output, so the messages go\n             * nowhere either way. */\n            this.http2Stream.resume();\n        }\n    }\n    trace(text) {\n        logging.trace(constants_2.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callId + '] ' + text);\n    }\n    /**\n     * On first call, emits a 'status' event with the given StatusObject.\n     * Subsequent calls are no-ops.\n     * @param status The status of the call.\n     */\n    endCall(status) {\n        /* If the status is OK and a new status comes in (e.g. from a\n         * deserialization failure), that new status takes priority */\n        if (this.finalStatus === null || this.finalStatus.code === constants_1.Status.OK) {\n            this.finalStatus = status;\n            this.maybeOutputStatus();\n        }\n        this.destroyHttp2Stream();\n    }\n    maybeOutputStatus() {\n        if (this.finalStatus !== null) {\n            /* The combination check of readsClosed and that the two message buffer\n             * arrays are empty checks that there all incoming data has been fully\n             * processed */\n            if (this.finalStatus.code !== constants_1.Status.OK ||\n                (this.readsClosed &&\n                    this.unpushedReadMessages.length === 0 &&\n                    !this.isReadFilterPending &&\n                    !this.isPushPending)) {\n                this.outputStatus();\n            }\n        }\n    }\n    push(message) {\n        this.trace('pushing to reader message of length ' +\n            (message instanceof Buffer ? message.length : null));\n        this.canPush = false;\n        this.isPushPending = true;\n        process.nextTick(() => {\n            this.isPushPending = false;\n            /* If we have already output the status any later messages should be\n             * ignored, and can cause out-of-order operation errors higher up in the\n             * stack. Checking as late as possible here to avoid any race conditions.\n             */\n            if (this.statusOutput) {\n                return;\n            }\n            this.listener.onReceiveMessage(message);\n            this.maybeOutputStatus();\n        });\n    }\n    tryPush(messageBytes) {\n        if (this.canPush) {\n            this.http2Stream.pause();\n            this.push(messageBytes);\n        }\n        else {\n            this.trace('unpushedReadMessages.push message of length ' + messageBytes.length);\n            this.unpushedReadMessages.push(messageBytes);\n        }\n    }\n    handleTrailers(headers) {\n        this.serverEndedCall = true;\n        this.callEventTracker.onStreamEnd(true);\n        let headersString = '';\n        for (const header of Object.keys(headers)) {\n            headersString += '\\t\\t' + header + ': ' + headers[header] + '\\n';\n        }\n        this.trace('Received server trailers:\\n' + headersString);\n        let metadata;\n        try {\n            metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n        }\n        catch (e) {\n            metadata = new metadata_1.Metadata();\n        }\n        const metadataMap = metadata.getMap();\n        let status;\n        if (typeof metadataMap['grpc-status'] === 'string') {\n            const receivedStatus = Number(metadataMap['grpc-status']);\n            this.trace('received status code ' + receivedStatus + ' from server');\n            metadata.remove('grpc-status');\n            let details = '';\n            if (typeof metadataMap['grpc-message'] === 'string') {\n                try {\n                    details = decodeURI(metadataMap['grpc-message']);\n                }\n                catch (e) {\n                    details = metadataMap['grpc-message'];\n                }\n                metadata.remove('grpc-message');\n                this.trace('received status details string \"' + details + '\" from server');\n            }\n            status = {\n                code: receivedStatus,\n                details: details,\n                metadata: metadata\n            };\n        }\n        else if (this.httpStatusCode) {\n            status = mapHttpStatusCode(this.httpStatusCode);\n            status.metadata = metadata;\n        }\n        else {\n            status = {\n                code: constants_1.Status.UNKNOWN,\n                details: 'No status information received',\n                metadata: metadata\n            };\n        }\n        // This is a no-op if the call was already ended when handling headers.\n        this.endCall(status);\n    }\n    destroyHttp2Stream() {\n        var _a;\n        // The http2 stream could already have been destroyed if cancelWithStatus\n        // is called in response to an internal http2 error.\n        if (this.http2Stream.destroyed) {\n            return;\n        }\n        /* If the server ended the call, sending an RST_STREAM is redundant, so we\n         * just half close on the client side instead to finish closing the stream.\n         */\n        if (this.serverEndedCall) {\n            this.http2Stream.end();\n        }\n        else {\n            /* If the call has ended with an OK status, communicate that when closing\n             * the stream, partly to avoid a situation in which we detect an error\n             * RST_STREAM as a result after we have the status */\n            let code;\n            if (((_a = this.finalStatus) === null || _a === void 0 ? void 0 : _a.code) === constants_1.Status.OK) {\n                code = http2.constants.NGHTTP2_NO_ERROR;\n            }\n            else {\n                code = http2.constants.NGHTTP2_CANCEL;\n            }\n            this.trace('close http2 stream with code ' + code);\n            this.http2Stream.close(code);\n        }\n    }\n    cancelWithStatus(status, details) {\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        this.endCall({ code: status, details, metadata: new metadata_1.Metadata() });\n    }\n    getStatus() {\n        return this.finalStatus;\n    }\n    getPeer() {\n        return this.transport.getPeerName();\n    }\n    getCallNumber() {\n        return this.callId;\n    }\n    startRead() {\n        /* If the stream has ended with an error, we should not emit any more\n         * messages and we should communicate that the stream has ended */\n        if (this.finalStatus !== null && this.finalStatus.code !== constants_1.Status.OK) {\n            this.readsClosed = true;\n            this.maybeOutputStatus();\n            return;\n        }\n        this.canPush = true;\n        if (this.unpushedReadMessages.length > 0) {\n            const nextMessage = this.unpushedReadMessages.shift();\n            this.push(nextMessage);\n            return;\n        }\n        /* Only resume reading from the http2Stream if we don't have any pending\n         * messages to emit */\n        this.http2Stream.resume();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        const cb = (error) => {\n            /* nextTick here ensures that no stream action can be taken in the call\n             * stack of the write callback, in order to hopefully work around\n             * https://github.com/nodejs/node/issues/49147 */\n            process.nextTick(() => {\n                var _a;\n                let code = constants_1.Status.UNAVAILABLE;\n                if ((error === null || error === void 0 ? void 0 : error.code) ===\n                    'ERR_STREAM_WRITE_AFTER_END') {\n                    code = constants_1.Status.INTERNAL;\n                }\n                if (error) {\n                    this.cancelWithStatus(code, `Write error: ${error.message}`);\n                }\n                (_a = context.callback) === null || _a === void 0 ? void 0 : _a.call(context);\n            });\n        };\n        this.trace('sending data chunk of length ' + message.length);\n        this.callEventTracker.addMessageSent();\n        try {\n            this.http2Stream.write(message, cb);\n        }\n        catch (error) {\n            this.endCall({\n                code: constants_1.Status.UNAVAILABLE,\n                details: `Write failed with error ${error.message}`,\n                metadata: new metadata_1.Metadata(),\n            });\n        }\n    }\n    halfClose() {\n        this.trace('end() called');\n        this.trace('calling end() on HTTP/2 stream');\n        this.http2Stream.end();\n    }\n}\nexports.Http2SubchannelCall = Http2SubchannelCall;\n//# sourceMappingURL=subchannel-call.js.map",
    "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNextCallNumber = getNextCallNumber;\nlet nextCallNumber = 0;\nfunction getNextCallNumber() {\n    return nextCallNumber++;\n}\n//# sourceMappingURL=call-number.js.map",
    "\"use strict\";\n/*\n * Copyright 2023 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Http2SubchannelConnector = void 0;\nconst http2 = require(\"http2\");\nconst tls_1 = require(\"tls\");\nconst channelz_1 = require(\"./channelz\");\nconst constants_1 = require(\"./constants\");\nconst http_proxy_1 = require(\"./http_proxy\");\nconst logging = require(\"./logging\");\nconst resolver_1 = require(\"./resolver\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst net = require(\"net\");\nconst subchannel_call_1 = require(\"./subchannel-call\");\nconst call_number_1 = require(\"./call-number\");\nconst TRACER_NAME = 'transport';\nconst FLOW_CONTROL_TRACER_NAME = 'transport_flowctrl';\nconst clientVersion = require('../../package.json').version;\nconst { HTTP2_HEADER_AUTHORITY, HTTP2_HEADER_CONTENT_TYPE, HTTP2_HEADER_METHOD, HTTP2_HEADER_PATH, HTTP2_HEADER_TE, HTTP2_HEADER_USER_AGENT, } = http2.constants;\nconst KEEPALIVE_TIMEOUT_MS = 20000;\nconst tooManyPingsData = Buffer.from('too_many_pings', 'ascii');\nclass Http2Transport {\n    constructor(session, subchannelAddress, options, \n    /**\n     * Name of the remote server, if it is not the same as the subchannel\n     * address, i.e. if connecting through an HTTP CONNECT proxy.\n     */\n    remoteName) {\n        this.session = session;\n        this.options = options;\n        this.remoteName = remoteName;\n        /**\n         * Timer reference indicating when to send the next ping or when the most recent ping will be considered lost.\n         */\n        this.keepaliveTimer = null;\n        /**\n         * Indicates that the keepalive timer ran out while there were no active\n         * calls, and a ping should be sent the next time a call starts.\n         */\n        this.pendingSendKeepalivePing = false;\n        this.activeCalls = new Set();\n        this.disconnectListeners = [];\n        this.disconnectHandled = false;\n        this.channelzEnabled = true;\n        this.keepalivesSent = 0;\n        this.messagesSent = 0;\n        this.messagesReceived = 0;\n        this.lastMessageSentTimestamp = null;\n        this.lastMessageReceivedTimestamp = null;\n        /* Populate subchannelAddressString and channelzRef before doing anything\n         * else, because they are used in the trace methods. */\n        this.subchannelAddressString = (0, subchannel_address_1.subchannelAddressToString)(subchannelAddress);\n        if (options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n            this.streamTracker = new channelz_1.ChannelzCallTrackerStub();\n        }\n        else {\n            this.streamTracker = new channelz_1.ChannelzCallTracker();\n        }\n        this.channelzRef = (0, channelz_1.registerChannelzSocket)(this.subchannelAddressString, () => this.getChannelzInfo(), this.channelzEnabled);\n        // Build user-agent string.\n        this.userAgent = [\n            options['grpc.primary_user_agent'],\n            `grpc-node-js/${clientVersion}`,\n            options['grpc.secondary_user_agent'],\n        ]\n            .filter(e => e)\n            .join(' '); // remove falsey values first\n        if ('grpc.keepalive_time_ms' in options) {\n            this.keepaliveTimeMs = options['grpc.keepalive_time_ms'];\n        }\n        else {\n            this.keepaliveTimeMs = -1;\n        }\n        if ('grpc.keepalive_timeout_ms' in options) {\n            this.keepaliveTimeoutMs = options['grpc.keepalive_timeout_ms'];\n        }\n        else {\n            this.keepaliveTimeoutMs = KEEPALIVE_TIMEOUT_MS;\n        }\n        if ('grpc.keepalive_permit_without_calls' in options) {\n            this.keepaliveWithoutCalls =\n                options['grpc.keepalive_permit_without_calls'] === 1;\n        }\n        else {\n            this.keepaliveWithoutCalls = false;\n        }\n        session.once('close', () => {\n            this.trace('session closed');\n            this.handleDisconnect();\n        });\n        session.once('goaway', (errorCode, lastStreamID, opaqueData) => {\n            let tooManyPings = false;\n            /* See the last paragraph of\n             * https://github.com/grpc/proposal/blob/master/A8-client-side-keepalive.md#basic-keepalive */\n            if (errorCode === http2.constants.NGHTTP2_ENHANCE_YOUR_CALM &&\n                opaqueData &&\n                opaqueData.equals(tooManyPingsData)) {\n                tooManyPings = true;\n            }\n            this.trace('connection closed by GOAWAY with code ' +\n                errorCode +\n                ' and data ' +\n                (opaqueData === null || opaqueData === void 0 ? void 0 : opaqueData.toString()));\n            this.reportDisconnectToOwner(tooManyPings);\n        });\n        session.once('error', error => {\n            this.trace('connection closed with error ' + error.message);\n            this.handleDisconnect();\n        });\n        session.socket.once('close', () => {\n            this.trace('connection closed');\n            this.handleDisconnect();\n        });\n        if (logging.isTracerEnabled(TRACER_NAME)) {\n            session.on('remoteSettings', (settings) => {\n                this.trace('new settings received' +\n                    (this.session !== session ? ' on the old connection' : '') +\n                    ': ' +\n                    JSON.stringify(settings));\n            });\n            session.on('localSettings', (settings) => {\n                this.trace('local settings acknowledged by remote' +\n                    (this.session !== session ? ' on the old connection' : '') +\n                    ': ' +\n                    JSON.stringify(settings));\n            });\n        }\n        /* Start the keepalive timer last, because this can trigger trace logs,\n         * which should only happen after everything else is set up. */\n        if (this.keepaliveWithoutCalls) {\n            this.maybeStartKeepalivePingTimer();\n        }\n    }\n    getChannelzInfo() {\n        var _a, _b, _c;\n        const sessionSocket = this.session.socket;\n        const remoteAddress = sessionSocket.remoteAddress\n            ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.remoteAddress, sessionSocket.remotePort)\n            : null;\n        const localAddress = sessionSocket.localAddress\n            ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.localAddress, sessionSocket.localPort)\n            : null;\n        let tlsInfo;\n        if (this.session.encrypted) {\n            const tlsSocket = sessionSocket;\n            const cipherInfo = tlsSocket.getCipher();\n            const certificate = tlsSocket.getCertificate();\n            const peerCertificate = tlsSocket.getPeerCertificate();\n            tlsInfo = {\n                cipherSuiteStandardName: (_a = cipherInfo.standardName) !== null && _a !== void 0 ? _a : null,\n                cipherSuiteOtherName: cipherInfo.standardName ? null : cipherInfo.name,\n                localCertificate: certificate && 'raw' in certificate ? certificate.raw : null,\n                remoteCertificate: peerCertificate && 'raw' in peerCertificate\n                    ? peerCertificate.raw\n                    : null,\n            };\n        }\n        else {\n            tlsInfo = null;\n        }\n        const socketInfo = {\n            remoteAddress: remoteAddress,\n            localAddress: localAddress,\n            security: tlsInfo,\n            remoteName: this.remoteName,\n            streamsStarted: this.streamTracker.callsStarted,\n            streamsSucceeded: this.streamTracker.callsSucceeded,\n            streamsFailed: this.streamTracker.callsFailed,\n            messagesSent: this.messagesSent,\n            messagesReceived: this.messagesReceived,\n            keepAlivesSent: this.keepalivesSent,\n            lastLocalStreamCreatedTimestamp: this.streamTracker.lastCallStartedTimestamp,\n            lastRemoteStreamCreatedTimestamp: null,\n            lastMessageSentTimestamp: this.lastMessageSentTimestamp,\n            lastMessageReceivedTimestamp: this.lastMessageReceivedTimestamp,\n            localFlowControlWindow: (_b = this.session.state.localWindowSize) !== null && _b !== void 0 ? _b : null,\n            remoteFlowControlWindow: (_c = this.session.state.remoteWindowSize) !== null && _c !== void 0 ? _c : null,\n        };\n        return socketInfo;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    keepaliveTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'keepalive', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    flowControlTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, FLOW_CONTROL_TRACER_NAME, '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    internalsTrace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, 'transport_internals', '(' +\n            this.channelzRef.id +\n            ') ' +\n            this.subchannelAddressString +\n            ' ' +\n            text);\n    }\n    /**\n     * Indicate to the owner of this object that this transport should no longer\n     * be used. That happens if the connection drops, or if the server sends a\n     * GOAWAY.\n     * @param tooManyPings If true, this was triggered by a GOAWAY with data\n     * indicating that the session was closed becaues the client sent too many\n     * pings.\n     * @returns\n     */\n    reportDisconnectToOwner(tooManyPings) {\n        if (this.disconnectHandled) {\n            return;\n        }\n        this.disconnectHandled = true;\n        this.disconnectListeners.forEach(listener => listener(tooManyPings));\n    }\n    /**\n     * Handle connection drops, but not GOAWAYs.\n     */\n    handleDisconnect() {\n        this.clearKeepaliveTimeout();\n        this.reportDisconnectToOwner(false);\n        for (const call of this.activeCalls) {\n            call.onDisconnect();\n        }\n        // Wait an event loop cycle before destroying the connection\n        setImmediate(() => {\n            this.session.destroy();\n        });\n    }\n    addDisconnectListener(listener) {\n        this.disconnectListeners.push(listener);\n    }\n    canSendPing() {\n        return (!this.session.destroyed &&\n            this.keepaliveTimeMs > 0 &&\n            (this.keepaliveWithoutCalls || this.activeCalls.size > 0));\n    }\n    maybeSendPing() {\n        var _a, _b;\n        if (!this.canSendPing()) {\n            this.pendingSendKeepalivePing = true;\n            return;\n        }\n        if (this.keepaliveTimer) {\n            console.error('keepaliveTimeout is not null');\n            return;\n        }\n        if (this.channelzEnabled) {\n            this.keepalivesSent += 1;\n        }\n        this.keepaliveTrace('Sending ping with timeout ' + this.keepaliveTimeoutMs + 'ms');\n        this.keepaliveTimer = setTimeout(() => {\n            this.keepaliveTimer = null;\n            this.keepaliveTrace('Ping timeout passed without response');\n            this.handleDisconnect();\n        }, this.keepaliveTimeoutMs);\n        (_b = (_a = this.keepaliveTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        let pingSendError = '';\n        try {\n            const pingSentSuccessfully = this.session.ping((err, duration, payload) => {\n                this.clearKeepaliveTimeout();\n                if (err) {\n                    this.keepaliveTrace('Ping failed with error ' + err.message);\n                    this.handleDisconnect();\n                }\n                else {\n                    this.keepaliveTrace('Received ping response');\n                    this.maybeStartKeepalivePingTimer();\n                }\n            });\n            if (!pingSentSuccessfully) {\n                pingSendError = 'Ping returned false';\n            }\n        }\n        catch (e) {\n            // grpc/grpc-node#2139\n            pingSendError = (e instanceof Error ? e.message : '') || 'Unknown error';\n        }\n        if (pingSendError) {\n            this.keepaliveTrace('Ping send failed: ' + pingSendError);\n            this.handleDisconnect();\n        }\n    }\n    /**\n     * Starts the keepalive ping timer if appropriate. If the timer already ran\n     * out while there were no active requests, instead send a ping immediately.\n     * If the ping timer is already running or a ping is currently in flight,\n     * instead do nothing and wait for them to resolve.\n     */\n    maybeStartKeepalivePingTimer() {\n        var _a, _b;\n        if (!this.canSendPing()) {\n            return;\n        }\n        if (this.pendingSendKeepalivePing) {\n            this.pendingSendKeepalivePing = false;\n            this.maybeSendPing();\n        }\n        else if (!this.keepaliveTimer) {\n            this.keepaliveTrace('Starting keepalive timer for ' + this.keepaliveTimeMs + 'ms');\n            this.keepaliveTimer = setTimeout(() => {\n                this.keepaliveTimer = null;\n                this.maybeSendPing();\n            }, this.keepaliveTimeMs);\n            (_b = (_a = this.keepaliveTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n        /* Otherwise, there is already either a keepalive timer or a ping pending,\n         * wait for those to resolve. */\n    }\n    /**\n     * Clears whichever keepalive timeout is currently active, if any.\n     */\n    clearKeepaliveTimeout() {\n        if (this.keepaliveTimer) {\n            clearTimeout(this.keepaliveTimer);\n            this.keepaliveTimer = null;\n        }\n    }\n    removeActiveCall(call) {\n        this.activeCalls.delete(call);\n        if (this.activeCalls.size === 0) {\n            this.session.unref();\n        }\n    }\n    addActiveCall(call) {\n        this.activeCalls.add(call);\n        if (this.activeCalls.size === 1) {\n            this.session.ref();\n            if (!this.keepaliveWithoutCalls) {\n                this.maybeStartKeepalivePingTimer();\n            }\n        }\n    }\n    createCall(metadata, host, method, listener, subchannelCallStatsTracker) {\n        const headers = metadata.toHttp2Headers();\n        headers[HTTP2_HEADER_AUTHORITY] = host;\n        headers[HTTP2_HEADER_USER_AGENT] = this.userAgent;\n        headers[HTTP2_HEADER_CONTENT_TYPE] = 'application/grpc';\n        headers[HTTP2_HEADER_METHOD] = 'POST';\n        headers[HTTP2_HEADER_PATH] = method;\n        headers[HTTP2_HEADER_TE] = 'trailers';\n        let http2Stream;\n        /* In theory, if an error is thrown by session.request because session has\n         * become unusable (e.g. because it has received a goaway), this subchannel\n         * should soon see the corresponding close or goaway event anyway and leave\n         * READY. But we have seen reports that this does not happen\n         * (https://github.com/googleapis/nodejs-firestore/issues/1023#issuecomment-653204096)\n         * so for defense in depth, we just discard the session when we see an\n         * error here.\n         */\n        try {\n            http2Stream = this.session.request(headers);\n        }\n        catch (e) {\n            this.handleDisconnect();\n            throw e;\n        }\n        this.flowControlTrace('local window size: ' +\n            this.session.state.localWindowSize +\n            ' remote window size: ' +\n            this.session.state.remoteWindowSize);\n        this.internalsTrace('session.closed=' +\n            this.session.closed +\n            ' session.destroyed=' +\n            this.session.destroyed +\n            ' session.socket.destroyed=' +\n            this.session.socket.destroyed);\n        let eventTracker;\n        // eslint-disable-next-line prefer-const\n        let call;\n        if (this.channelzEnabled) {\n            this.streamTracker.addCallStarted();\n            eventTracker = {\n                addMessageSent: () => {\n                    var _a;\n                    this.messagesSent += 1;\n                    this.lastMessageSentTimestamp = new Date();\n                    (_a = subchannelCallStatsTracker.addMessageSent) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                addMessageReceived: () => {\n                    var _a;\n                    this.messagesReceived += 1;\n                    this.lastMessageReceivedTimestamp = new Date();\n                    (_a = subchannelCallStatsTracker.addMessageReceived) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                onCallEnd: status => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onCallEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, status);\n                    this.removeActiveCall(call);\n                },\n                onStreamEnd: success => {\n                    var _a;\n                    if (success) {\n                        this.streamTracker.addCallSucceeded();\n                    }\n                    else {\n                        this.streamTracker.addCallFailed();\n                    }\n                    (_a = subchannelCallStatsTracker.onStreamEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, success);\n                },\n            };\n        }\n        else {\n            eventTracker = {\n                addMessageSent: () => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.addMessageSent) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                addMessageReceived: () => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.addMessageReceived) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker);\n                },\n                onCallEnd: status => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onCallEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, status);\n                    this.removeActiveCall(call);\n                },\n                onStreamEnd: success => {\n                    var _a;\n                    (_a = subchannelCallStatsTracker.onStreamEnd) === null || _a === void 0 ? void 0 : _a.call(subchannelCallStatsTracker, success);\n                },\n            };\n        }\n        call = new subchannel_call_1.Http2SubchannelCall(http2Stream, eventTracker, listener, this, (0, call_number_1.getNextCallNumber)());\n        this.addActiveCall(call);\n        return call;\n    }\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    getPeerName() {\n        return this.subchannelAddressString;\n    }\n    getOptions() {\n        return this.options;\n    }\n    shutdown() {\n        this.session.close();\n        (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n    }\n}\nclass Http2SubchannelConnector {\n    constructor(channelTarget) {\n        this.channelTarget = channelTarget;\n        this.session = null;\n        this.isShutdown = false;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, (0, uri_parser_1.uriToString)(this.channelTarget) + ' ' + text);\n    }\n    createSession(address, credentials, options, proxyConnectionResult) {\n        if (this.isShutdown) {\n            return Promise.reject();\n        }\n        return new Promise((resolve, reject) => {\n            var _a, _b, _c, _d;\n            let remoteName;\n            if (proxyConnectionResult.realTarget) {\n                remoteName = (0, uri_parser_1.uriToString)(proxyConnectionResult.realTarget);\n                this.trace('creating HTTP/2 session through proxy to ' +\n                    (0, uri_parser_1.uriToString)(proxyConnectionResult.realTarget));\n            }\n            else {\n                remoteName = null;\n                this.trace('creating HTTP/2 session to ' + (0, subchannel_address_1.subchannelAddressToString)(address));\n            }\n            const targetAuthority = (0, resolver_1.getDefaultAuthority)((_a = proxyConnectionResult.realTarget) !== null && _a !== void 0 ? _a : this.channelTarget);\n            let connectionOptions = credentials._getConnectionOptions();\n            if (!connectionOptions) {\n                reject('Credentials not loaded');\n                return;\n            }\n            connectionOptions.maxSendHeaderBlockLength = Number.MAX_SAFE_INTEGER;\n            if ('grpc-node.max_session_memory' in options) {\n                connectionOptions.maxSessionMemory =\n                    options['grpc-node.max_session_memory'];\n            }\n            else {\n                /* By default, set a very large max session memory limit, to effectively\n                 * disable enforcement of the limit. Some testing indicates that Node's\n                 * behavior degrades badly when this limit is reached, so we solve that\n                 * by disabling the check entirely. */\n                connectionOptions.maxSessionMemory = Number.MAX_SAFE_INTEGER;\n            }\n            let addressScheme = 'http://';\n            if ('secureContext' in connectionOptions) {\n                addressScheme = 'https://';\n                // If provided, the value of grpc.ssl_target_name_override should be used\n                // to override the target hostname when checking server identity.\n                // This option is used for testing only.\n                if (options['grpc.ssl_target_name_override']) {\n                    const sslTargetNameOverride = options['grpc.ssl_target_name_override'];\n                    const originalCheckServerIdentity = (_b = connectionOptions.checkServerIdentity) !== null && _b !== void 0 ? _b : tls_1.checkServerIdentity;\n                    connectionOptions.checkServerIdentity = (host, cert) => {\n                        return originalCheckServerIdentity(sslTargetNameOverride, cert);\n                    };\n                    connectionOptions.servername = sslTargetNameOverride;\n                }\n                else {\n                    const authorityHostname = (_d = (_c = (0, uri_parser_1.splitHostPort)(targetAuthority)) === null || _c === void 0 ? void 0 : _c.host) !== null && _d !== void 0 ? _d : 'localhost';\n                    // We want to always set servername to support SNI\n                    connectionOptions.servername = authorityHostname;\n                }\n                if (proxyConnectionResult.socket) {\n                    /* This is part of the workaround for\n                     * https://github.com/nodejs/node/issues/32922. Without that bug,\n                     * proxyConnectionResult.socket would always be a plaintext socket and\n                     * this would say\n                     * connectionOptions.socket = proxyConnectionResult.socket; */\n                    connectionOptions.createConnection = (authority, option) => {\n                        return proxyConnectionResult.socket;\n                    };\n                }\n            }\n            else {\n                /* In all but the most recent versions of Node, http2.connect does not use\n                 * the options when establishing plaintext connections, so we need to\n                 * establish that connection explicitly. */\n                connectionOptions.createConnection = (authority, option) => {\n                    if (proxyConnectionResult.socket) {\n                        return proxyConnectionResult.socket;\n                    }\n                    else {\n                        /* net.NetConnectOpts is declared in a way that is more restrictive\n                         * than what net.connect will actually accept, so we use the type\n                         * assertion to work around that. */\n                        return net.connect(address);\n                    }\n                };\n            }\n            connectionOptions = Object.assign(Object.assign(Object.assign({}, connectionOptions), address), { enableTrace: options['grpc-node.tls_enable_trace'] === 1 });\n            /* http2.connect uses the options here:\n             * https://github.com/nodejs/node/blob/70c32a6d190e2b5d7b9ff9d5b6a459d14e8b7d59/lib/internal/http2/core.js#L3028-L3036\n             * The spread operator overides earlier values with later ones, so any port\n             * or host values in the options will be used rather than any values extracted\n             * from the first argument. In addition, the path overrides the host and port,\n             * as documented for plaintext connections here:\n             * https://nodejs.org/api/net.html#net_socket_connect_options_connectlistener\n             * and for TLS connections here:\n             * https://nodejs.org/api/tls.html#tls_tls_connect_options_callback. In\n             * earlier versions of Node, http2.connect passes these options to\n             * tls.connect but not net.connect, so in the insecure case we still need\n             * to set the createConnection option above to create the connection\n             * explicitly. We cannot do that in the TLS case because http2.connect\n             * passes necessary additional options to tls.connect.\n             * The first argument just needs to be parseable as a URL and the scheme\n             * determines whether the connection will be established over TLS or not.\n             */\n            const session = http2.connect(addressScheme + targetAuthority, connectionOptions);\n            this.session = session;\n            let errorMessage = 'Failed to connect';\n            let reportedError = false;\n            session.unref();\n            session.once('connect', () => {\n                session.removeAllListeners();\n                resolve(new Http2Transport(session, address, options, remoteName));\n                this.session = null;\n            });\n            session.once('close', () => {\n                this.session = null;\n                // Leave time for error event to happen before rejecting\n                setImmediate(() => {\n                    if (!reportedError) {\n                        reportedError = true;\n                        reject(`${errorMessage} (${new Date().toISOString()})`);\n                    }\n                });\n            });\n            session.once('error', error => {\n                errorMessage = error.message;\n                this.trace('connection failed with error ' + errorMessage);\n                if (!reportedError) {\n                    reportedError = true;\n                    reject(`${errorMessage} (${new Date().toISOString()})`);\n                }\n            });\n        });\n    }\n    connect(address, credentials, options) {\n        var _a, _b, _c;\n        if (this.isShutdown) {\n            return Promise.reject();\n        }\n        /* Pass connection options through to the proxy so that it's able to\n         * upgrade it's connection to support tls if needed.\n         * This is a workaround for https://github.com/nodejs/node/issues/32922\n         * See https://github.com/grpc/grpc-node/pull/1369 for more info. */\n        const connectionOptions = credentials._getConnectionOptions();\n        if (!connectionOptions) {\n            return Promise.reject('Credentials not loaded');\n        }\n        if ('secureContext' in connectionOptions) {\n            connectionOptions.ALPNProtocols = ['h2'];\n            // If provided, the value of grpc.ssl_target_name_override should be used\n            // to override the target hostname when checking server identity.\n            // This option is used for testing only.\n            if (options['grpc.ssl_target_name_override']) {\n                const sslTargetNameOverride = options['grpc.ssl_target_name_override'];\n                const originalCheckServerIdentity = (_a = connectionOptions.checkServerIdentity) !== null && _a !== void 0 ? _a : tls_1.checkServerIdentity;\n                connectionOptions.checkServerIdentity = (host, cert) => {\n                    return originalCheckServerIdentity(sslTargetNameOverride, cert);\n                };\n                connectionOptions.servername = sslTargetNameOverride;\n            }\n            else {\n                if ('grpc.http_connect_target' in options) {\n                    /* This is more or less how servername will be set in createSession\n                     * if a connection is successfully established through the proxy.\n                     * If the proxy is not used, these connectionOptions are discarded\n                     * anyway */\n                    const targetPath = (0, resolver_1.getDefaultAuthority)((_b = (0, uri_parser_1.parseUri)(options['grpc.http_connect_target'])) !== null && _b !== void 0 ? _b : {\n                        path: 'localhost',\n                    });\n                    const hostPort = (0, uri_parser_1.splitHostPort)(targetPath);\n                    connectionOptions.servername = (_c = hostPort === null || hostPort === void 0 ? void 0 : hostPort.host) !== null && _c !== void 0 ? _c : targetPath;\n                }\n            }\n            if (options['grpc-node.tls_enable_trace']) {\n                connectionOptions.enableTrace = true;\n            }\n        }\n        return (0, http_proxy_1.getProxiedConnection)(address, options, connectionOptions).then(result => this.createSession(address, credentials, options, result));\n    }\n    shutdown() {\n        var _a;\n        this.isShutdown = true;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.close();\n        this.session = null;\n    }\n}\nexports.Http2SubchannelConnector = Http2SubchannelConnector;\n//# sourceMappingURL=transport.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubchannelPool = void 0;\nexports.getSubchannelPool = getSubchannelPool;\nconst channel_options_1 = require(\"./channel-options\");\nconst subchannel_1 = require(\"./subchannel\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst transport_1 = require(\"./transport\");\n// 10 seconds in milliseconds. This value is arbitrary.\n/**\n * The amount of time in between checks for dropping subchannels that have no\n * other references\n */\nconst REF_CHECK_INTERVAL = 10000;\nclass SubchannelPool {\n    /**\n     * A pool of subchannels use for making connections. Subchannels with the\n     * exact same parameters will be reused.\n     */\n    constructor() {\n        this.pool = Object.create(null);\n        /**\n         * A timer of a task performing a periodic subchannel cleanup.\n         */\n        this.cleanupTimer = null;\n    }\n    /**\n     * Unrefs all unused subchannels and cancels the cleanup task if all\n     * subchannels have been unrefed.\n     */\n    unrefUnusedSubchannels() {\n        let allSubchannelsUnrefed = true;\n        /* These objects are created with Object.create(null), so they do not\n         * have a prototype, which means that for (... in ...) loops over them\n         * do not need to be filtered */\n        // eslint-disable-disable-next-line:forin\n        for (const channelTarget in this.pool) {\n            const subchannelObjArray = this.pool[channelTarget];\n            const refedSubchannels = subchannelObjArray.filter(value => !value.subchannel.unrefIfOneRef());\n            if (refedSubchannels.length > 0) {\n                allSubchannelsUnrefed = false;\n            }\n            /* For each subchannel in the pool, try to unref it if it has\n             * exactly one ref (which is the ref from the pool itself). If that\n             * does happen, remove the subchannel from the pool */\n            this.pool[channelTarget] = refedSubchannels;\n        }\n        /* Currently we do not delete keys with empty values. If that results\n         * in significant memory usage we should change it. */\n        // Cancel the cleanup task if all subchannels have been unrefed.\n        if (allSubchannelsUnrefed && this.cleanupTimer !== null) {\n            clearInterval(this.cleanupTimer);\n            this.cleanupTimer = null;\n        }\n    }\n    /**\n     * Ensures that the cleanup task is spawned.\n     */\n    ensureCleanupTask() {\n        var _a, _b;\n        if (this.cleanupTimer === null) {\n            this.cleanupTimer = setInterval(() => {\n                this.unrefUnusedSubchannels();\n            }, REF_CHECK_INTERVAL);\n            // Unref because this timer should not keep the event loop running.\n            // Call unref only if it exists to address electron/electron#21162\n            (_b = (_a = this.cleanupTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    /**\n     * Get a subchannel if one already exists with exactly matching parameters.\n     * Otherwise, create and save a subchannel with those parameters.\n     * @param channelTarget\n     * @param subchannelTarget\n     * @param channelArguments\n     * @param channelCredentials\n     */\n    getOrCreateSubchannel(channelTargetUri, subchannelTarget, channelArguments, channelCredentials) {\n        this.ensureCleanupTask();\n        const channelTarget = (0, uri_parser_1.uriToString)(channelTargetUri);\n        if (channelTarget in this.pool) {\n            const subchannelObjArray = this.pool[channelTarget];\n            for (const subchannelObj of subchannelObjArray) {\n                if ((0, subchannel_address_1.subchannelAddressEqual)(subchannelTarget, subchannelObj.subchannelAddress) &&\n                    (0, channel_options_1.channelOptionsEqual)(channelArguments, subchannelObj.channelArguments) &&\n                    channelCredentials._equals(subchannelObj.channelCredentials)) {\n                    return subchannelObj.subchannel;\n                }\n            }\n        }\n        // If we get here, no matching subchannel was found\n        const subchannel = new subchannel_1.Subchannel(channelTargetUri, subchannelTarget, channelArguments, channelCredentials, new transport_1.Http2SubchannelConnector(channelTargetUri));\n        if (!(channelTarget in this.pool)) {\n            this.pool[channelTarget] = [];\n        }\n        this.pool[channelTarget].push({\n            subchannelAddress: subchannelTarget,\n            channelArguments,\n            channelCredentials,\n            subchannel,\n        });\n        subchannel.ref();\n        return subchannel;\n    }\n}\nexports.SubchannelPool = SubchannelPool;\nconst globalSubchannelPool = new SubchannelPool();\n/**\n * Get either the global subchannel pool, or a new subchannel pool.\n * @param global\n */\nfunction getSubchannelPool(global) {\n    if (global) {\n        return globalSubchannelPool;\n    }\n    else {\n        return new SubchannelPool();\n    }\n}\n//# sourceMappingURL=subchannel-pool.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterStackFactory = exports.FilterStack = void 0;\nclass FilterStack {\n    constructor(filters) {\n        this.filters = filters;\n    }\n    sendMetadata(metadata) {\n        let result = metadata;\n        for (let i = 0; i < this.filters.length; i++) {\n            result = this.filters[i].sendMetadata(result);\n        }\n        return result;\n    }\n    receiveMetadata(metadata) {\n        let result = metadata;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveMetadata(result);\n        }\n        return result;\n    }\n    sendMessage(message) {\n        let result = message;\n        for (let i = 0; i < this.filters.length; i++) {\n            result = this.filters[i].sendMessage(result);\n        }\n        return result;\n    }\n    receiveMessage(message) {\n        let result = message;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveMessage(result);\n        }\n        return result;\n    }\n    receiveTrailers(status) {\n        let result = status;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveTrailers(result);\n        }\n        return result;\n    }\n    push(filters) {\n        this.filters.unshift(...filters);\n    }\n    getFilters() {\n        return this.filters;\n    }\n}\nexports.FilterStack = FilterStack;\nclass FilterStackFactory {\n    constructor(factories) {\n        this.factories = factories;\n    }\n    push(filterFactories) {\n        this.factories.unshift(...filterFactories);\n    }\n    clone() {\n        return new FilterStackFactory([...this.factories]);\n    }\n    createFilter() {\n        return new FilterStack(this.factories.map(factory => factory.createFilter()));\n    }\n}\nexports.FilterStackFactory = FilterStackFactory;\n//# sourceMappingURL=filter-stack.js.map",
    "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompressionAlgorithms = void 0;\nvar CompressionAlgorithms;\n(function (CompressionAlgorithms) {\n    CompressionAlgorithms[CompressionAlgorithms[\"identity\"] = 0] = \"identity\";\n    CompressionAlgorithms[CompressionAlgorithms[\"deflate\"] = 1] = \"deflate\";\n    CompressionAlgorithms[CompressionAlgorithms[\"gzip\"] = 2] = \"gzip\";\n})(CompressionAlgorithms || (exports.CompressionAlgorithms = CompressionAlgorithms = {}));\n//# sourceMappingURL=compression-algorithms.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseFilter = void 0;\nclass BaseFilter {\n    async sendMetadata(metadata) {\n        return metadata;\n    }\n    receiveMetadata(metadata) {\n        return metadata;\n    }\n    async sendMessage(message) {\n        return message;\n    }\n    async receiveMessage(message) {\n        return message;\n    }\n    receiveTrailers(status) {\n        return status;\n    }\n}\nexports.BaseFilter = BaseFilter;\n//# sourceMappingURL=filter.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompressionFilterFactory = exports.CompressionFilter = void 0;\nconst zlib = require(\"zlib\");\nconst compression_algorithms_1 = require(\"./compression-algorithms\");\nconst constants_1 = require(\"./constants\");\nconst filter_1 = require(\"./filter\");\nconst logging = require(\"./logging\");\nconst isCompressionAlgorithmKey = (key) => {\n    return (typeof key === 'number' && typeof compression_algorithms_1.CompressionAlgorithms[key] === 'string');\n};\nclass CompressionHandler {\n    /**\n     * @param message Raw uncompressed message bytes\n     * @param compress Indicates whether the message should be compressed\n     * @return Framed message, compressed if applicable\n     */\n    async writeMessage(message, compress) {\n        let messageBuffer = message;\n        if (compress) {\n            messageBuffer = await this.compressMessage(messageBuffer);\n        }\n        const output = Buffer.allocUnsafe(messageBuffer.length + 5);\n        output.writeUInt8(compress ? 1 : 0, 0);\n        output.writeUInt32BE(messageBuffer.length, 1);\n        messageBuffer.copy(output, 5);\n        return output;\n    }\n    /**\n     * @param data Framed message, possibly compressed\n     * @return Uncompressed message\n     */\n    async readMessage(data) {\n        const compressed = data.readUInt8(0) === 1;\n        let messageBuffer = data.slice(5);\n        if (compressed) {\n            messageBuffer = await this.decompressMessage(messageBuffer);\n        }\n        return messageBuffer;\n    }\n}\nclass IdentityHandler extends CompressionHandler {\n    async compressMessage(message) {\n        return message;\n    }\n    async writeMessage(message, compress) {\n        const output = Buffer.allocUnsafe(message.length + 5);\n        /* With \"identity\" compression, messages should always be marked as\n         * uncompressed */\n        output.writeUInt8(0, 0);\n        output.writeUInt32BE(message.length, 1);\n        message.copy(output, 5);\n        return output;\n    }\n    decompressMessage(message) {\n        return Promise.reject(new Error('Received compressed message but \"grpc-encoding\" header was identity'));\n    }\n}\nclass DeflateHandler extends CompressionHandler {\n    constructor(maxRecvMessageLength) {\n        super();\n        this.maxRecvMessageLength = maxRecvMessageLength;\n    }\n    compressMessage(message) {\n        return new Promise((resolve, reject) => {\n            zlib.deflate(message, (err, output) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(output);\n                }\n            });\n        });\n    }\n    decompressMessage(message) {\n        return new Promise((resolve, reject) => {\n            let totalLength = 0;\n            const messageParts = [];\n            const decompresser = zlib.createInflate();\n            decompresser.on('data', (chunk) => {\n                messageParts.push(chunk);\n                totalLength += chunk.byteLength;\n                if (this.maxRecvMessageLength !== -1 && totalLength > this.maxRecvMessageLength) {\n                    decompresser.destroy();\n                    reject({\n                        code: constants_1.Status.RESOURCE_EXHAUSTED,\n                        details: `Received message that decompresses to a size larger than ${this.maxRecvMessageLength}`\n                    });\n                }\n            });\n            decompresser.on('end', () => {\n                resolve(Buffer.concat(messageParts));\n            });\n            decompresser.write(message);\n            decompresser.end();\n        });\n    }\n}\nclass GzipHandler extends CompressionHandler {\n    constructor(maxRecvMessageLength) {\n        super();\n        this.maxRecvMessageLength = maxRecvMessageLength;\n    }\n    compressMessage(message) {\n        return new Promise((resolve, reject) => {\n            zlib.gzip(message, (err, output) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(output);\n                }\n            });\n        });\n    }\n    decompressMessage(message) {\n        return new Promise((resolve, reject) => {\n            let totalLength = 0;\n            const messageParts = [];\n            const decompresser = zlib.createGunzip();\n            decompresser.on('data', (chunk) => {\n                messageParts.push(chunk);\n                totalLength += chunk.byteLength;\n                if (this.maxRecvMessageLength !== -1 && totalLength > this.maxRecvMessageLength) {\n                    decompresser.destroy();\n                    reject({\n                        code: constants_1.Status.RESOURCE_EXHAUSTED,\n                        details: `Received message that decompresses to a size larger than ${this.maxRecvMessageLength}`\n                    });\n                }\n            });\n            decompresser.on('end', () => {\n                resolve(Buffer.concat(messageParts));\n            });\n            decompresser.write(message);\n            decompresser.end();\n        });\n    }\n}\nclass UnknownHandler extends CompressionHandler {\n    constructor(compressionName) {\n        super();\n        this.compressionName = compressionName;\n    }\n    compressMessage(message) {\n        return Promise.reject(new Error(`Received message compressed with unsupported compression method ${this.compressionName}`));\n    }\n    decompressMessage(message) {\n        // This should be unreachable\n        return Promise.reject(new Error(`Compression method not supported: ${this.compressionName}`));\n    }\n}\nfunction getCompressionHandler(compressionName, maxReceiveMessageSize) {\n    switch (compressionName) {\n        case 'identity':\n            return new IdentityHandler();\n        case 'deflate':\n            return new DeflateHandler(maxReceiveMessageSize);\n        case 'gzip':\n            return new GzipHandler(maxReceiveMessageSize);\n        default:\n            return new UnknownHandler(compressionName);\n    }\n}\nclass CompressionFilter extends filter_1.BaseFilter {\n    constructor(channelOptions, sharedFilterConfig) {\n        var _a, _b, _c;\n        super();\n        this.sharedFilterConfig = sharedFilterConfig;\n        this.sendCompression = new IdentityHandler();\n        this.receiveCompression = new IdentityHandler();\n        this.currentCompressionAlgorithm = 'identity';\n        const compressionAlgorithmKey = channelOptions['grpc.default_compression_algorithm'];\n        this.maxReceiveMessageLength = (_a = channelOptions['grpc.max_receive_message_length']) !== null && _a !== void 0 ? _a : constants_1.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n        this.maxSendMessageLength = (_b = channelOptions['grpc.max_send_message_length']) !== null && _b !== void 0 ? _b : constants_1.DEFAULT_MAX_SEND_MESSAGE_LENGTH;\n        if (compressionAlgorithmKey !== undefined) {\n            if (isCompressionAlgorithmKey(compressionAlgorithmKey)) {\n                const clientSelectedEncoding = compression_algorithms_1.CompressionAlgorithms[compressionAlgorithmKey];\n                const serverSupportedEncodings = (_c = sharedFilterConfig.serverSupportedEncodingHeader) === null || _c === void 0 ? void 0 : _c.split(',');\n                /**\n                 * There are two possible situations here:\n                 * 1) We don't have any info yet from the server about what compression it supports\n                 *    In that case we should just use what the client tells us to use\n                 * 2) We've previously received a response from the server including a grpc-accept-encoding header\n                 *    In that case we only want to use the encoding chosen by the client if the server supports it\n                 */\n                if (!serverSupportedEncodings ||\n                    serverSupportedEncodings.includes(clientSelectedEncoding)) {\n                    this.currentCompressionAlgorithm = clientSelectedEncoding;\n                    this.sendCompression = getCompressionHandler(this.currentCompressionAlgorithm, -1);\n                }\n            }\n            else {\n                logging.log(constants_1.LogVerbosity.ERROR, `Invalid value provided for grpc.default_compression_algorithm option: ${compressionAlgorithmKey}`);\n            }\n        }\n    }\n    async sendMetadata(metadata) {\n        const headers = await metadata;\n        headers.set('grpc-accept-encoding', 'identity,deflate,gzip');\n        headers.set('accept-encoding', 'identity');\n        // No need to send the header if it's \"identity\" -  behavior is identical; save the bandwidth\n        if (this.currentCompressionAlgorithm === 'identity') {\n            headers.remove('grpc-encoding');\n        }\n        else {\n            headers.set('grpc-encoding', this.currentCompressionAlgorithm);\n        }\n        return headers;\n    }\n    receiveMetadata(metadata) {\n        const receiveEncoding = metadata.get('grpc-encoding');\n        if (receiveEncoding.length > 0) {\n            const encoding = receiveEncoding[0];\n            if (typeof encoding === 'string') {\n                this.receiveCompression = getCompressionHandler(encoding, this.maxReceiveMessageLength);\n            }\n        }\n        metadata.remove('grpc-encoding');\n        /* Check to see if the compression we're using to send messages is supported by the server\n         * If not, reset the sendCompression filter and have it use the default IdentityHandler */\n        const serverSupportedEncodingsHeader = metadata.get('grpc-accept-encoding')[0];\n        if (serverSupportedEncodingsHeader) {\n            this.sharedFilterConfig.serverSupportedEncodingHeader =\n                serverSupportedEncodingsHeader;\n            const serverSupportedEncodings = serverSupportedEncodingsHeader.split(',');\n            if (!serverSupportedEncodings.includes(this.currentCompressionAlgorithm)) {\n                this.sendCompression = new IdentityHandler();\n                this.currentCompressionAlgorithm = 'identity';\n            }\n        }\n        metadata.remove('grpc-accept-encoding');\n        return metadata;\n    }\n    async sendMessage(message) {\n        var _a;\n        /* This filter is special. The input message is the bare message bytes,\n         * and the output is a framed and possibly compressed message. For this\n         * reason, this filter should be at the bottom of the filter stack */\n        const resolvedMessage = await message;\n        if (this.maxSendMessageLength !== -1 && resolvedMessage.message.length > this.maxSendMessageLength) {\n            throw {\n                code: constants_1.Status.RESOURCE_EXHAUSTED,\n                details: `Attempted to send message with a size larger than ${this.maxSendMessageLength}`\n            };\n        }\n        let compress;\n        if (this.sendCompression instanceof IdentityHandler) {\n            compress = false;\n        }\n        else {\n            compress = (((_a = resolvedMessage.flags) !== null && _a !== void 0 ? _a : 0) & 2 /* WriteFlags.NoCompress */) === 0;\n        }\n        return {\n            message: await this.sendCompression.writeMessage(resolvedMessage.message, compress),\n            flags: resolvedMessage.flags,\n        };\n    }\n    async receiveMessage(message) {\n        /* This filter is also special. The input message is framed and possibly\n         * compressed, and the output message is deframed and uncompressed. So\n         * this is another reason that this filter should be at the bottom of the\n         * filter stack. */\n        return this.receiveCompression.readMessage(await message);\n    }\n}\nexports.CompressionFilter = CompressionFilter;\nclass CompressionFilterFactory {\n    constructor(channel, options) {\n        this.options = options;\n        this.sharedFilterConfig = {};\n    }\n    createFilter() {\n        return new CompressionFilter(this.options, this.sharedFilterConfig);\n    }\n}\nexports.CompressionFilterFactory = CompressionFilterFactory;\n//# sourceMappingURL=compression-filter.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.minDeadline = minDeadline;\nexports.getDeadlineTimeoutString = getDeadlineTimeoutString;\nexports.getRelativeTimeout = getRelativeTimeout;\nexports.deadlineToString = deadlineToString;\nexports.formatDateDifference = formatDateDifference;\nfunction minDeadline(...deadlineList) {\n    let minValue = Infinity;\n    for (const deadline of deadlineList) {\n        const deadlineMsecs = deadline instanceof Date ? deadline.getTime() : deadline;\n        if (deadlineMsecs < minValue) {\n            minValue = deadlineMsecs;\n        }\n    }\n    return minValue;\n}\nconst units = [\n    ['m', 1],\n    ['S', 1000],\n    ['M', 60 * 1000],\n    ['H', 60 * 60 * 1000],\n];\nfunction getDeadlineTimeoutString(deadline) {\n    const now = new Date().getTime();\n    if (deadline instanceof Date) {\n        deadline = deadline.getTime();\n    }\n    const timeoutMs = Math.max(deadline - now, 0);\n    for (const [unit, factor] of units) {\n        const amount = timeoutMs / factor;\n        if (amount < 1e8) {\n            return String(Math.ceil(amount)) + unit;\n        }\n    }\n    throw new Error('Deadline is too far in the future');\n}\n/**\n * See https://nodejs.org/api/timers.html#settimeoutcallback-delay-args\n * In particular, \"When delay is larger than 2147483647 or less than 1, the\n * delay will be set to 1. Non-integer delays are truncated to an integer.\"\n * This number of milliseconds is almost 25 days.\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\n/**\n * Get the timeout value that should be passed to setTimeout now for the timer\n * to end at the deadline. For any deadline before now, the timer should end\n * immediately, represented by a value of 0. For any deadline more than\n * MAX_TIMEOUT_TIME milliseconds in the future, a timer cannot be set that will\n * end at that time, so it is treated as infinitely far in the future.\n * @param deadline\n * @returns\n */\nfunction getRelativeTimeout(deadline) {\n    const deadlineMs = deadline instanceof Date ? deadline.getTime() : deadline;\n    const now = new Date().getTime();\n    const timeout = deadlineMs - now;\n    if (timeout < 0) {\n        return 0;\n    }\n    else if (timeout > MAX_TIMEOUT_TIME) {\n        return Infinity;\n    }\n    else {\n        return timeout;\n    }\n}\nfunction deadlineToString(deadline) {\n    if (deadline instanceof Date) {\n        return deadline.toISOString();\n    }\n    else {\n        const dateDeadline = new Date(deadline);\n        if (Number.isNaN(dateDeadline.getTime())) {\n            return '' + deadline;\n        }\n        else {\n            return dateDeadline.toISOString();\n        }\n    }\n}\n/**\n * Calculate the difference between two dates as a number of seconds and format\n * it as a string.\n * @param startDate\n * @param endDate\n * @returns\n */\nfunction formatDateDifference(startDate, endDate) {\n    return ((endDate.getTime() - startDate.getTime()) / 1000).toFixed(3) + 's';\n}\n//# sourceMappingURL=deadline.js.map",
    "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.restrictControlPlaneStatusCode = restrictControlPlaneStatusCode;\nconst constants_1 = require(\"./constants\");\nconst INAPPROPRIATE_CONTROL_PLANE_CODES = [\n    constants_1.Status.OK,\n    constants_1.Status.INVALID_ARGUMENT,\n    constants_1.Status.NOT_FOUND,\n    constants_1.Status.ALREADY_EXISTS,\n    constants_1.Status.FAILED_PRECONDITION,\n    constants_1.Status.ABORTED,\n    constants_1.Status.OUT_OF_RANGE,\n    constants_1.Status.DATA_LOSS,\n];\nfunction restrictControlPlaneStatusCode(code, details) {\n    if (INAPPROPRIATE_CONTROL_PLANE_CODES.includes(code)) {\n        return {\n            code: constants_1.Status.INTERNAL,\n            details: `Invalid status from control plane: ${code} ${constants_1.Status[code]} ${details}`,\n        };\n    }\n    else {\n        return { code, details };\n    }\n}\n//# sourceMappingURL=control-plane-status.js.map",
    "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoadBalancingCall = void 0;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst deadline_1 = require(\"./deadline\");\nconst metadata_1 = require(\"./metadata\");\nconst picker_1 = require(\"./picker\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst logging = require(\"./logging\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst http2 = require(\"http2\");\nconst TRACER_NAME = 'load_balancing_call';\nclass LoadBalancingCall {\n    constructor(channel, callConfig, methodName, host, credentials, deadline, callNumber) {\n        var _a, _b;\n        this.channel = channel;\n        this.callConfig = callConfig;\n        this.methodName = methodName;\n        this.host = host;\n        this.credentials = credentials;\n        this.deadline = deadline;\n        this.callNumber = callNumber;\n        this.child = null;\n        this.readPending = false;\n        this.pendingMessage = null;\n        this.pendingHalfClose = false;\n        this.ended = false;\n        this.metadata = null;\n        this.listener = null;\n        this.onCallEnded = null;\n        this.childStartTime = null;\n        const splitPath = this.methodName.split('/');\n        let serviceName = '';\n        /* The standard path format is \"/{serviceName}/{methodName}\", so if we split\n         * by '/', the first item should be empty and the second should be the\n         * service name */\n        if (splitPath.length >= 2) {\n            serviceName = splitPath[1];\n        }\n        const hostname = (_b = (_a = (0, uri_parser_1.splitHostPort)(this.host)) === null || _a === void 0 ? void 0 : _a.host) !== null && _b !== void 0 ? _b : 'localhost';\n        /* Currently, call credentials are only allowed on HTTPS connections, so we\n         * can assume that the scheme is \"https\" */\n        this.serviceUrl = `https://${hostname}/${serviceName}`;\n        this.startTime = new Date();\n    }\n    getDeadlineInfo() {\n        var _a, _b;\n        const deadlineInfo = [];\n        if (this.childStartTime) {\n            if (this.childStartTime > this.startTime) {\n                if ((_a = this.metadata) === null || _a === void 0 ? void 0 : _a.getOptions().waitForReady) {\n                    deadlineInfo.push('wait_for_ready');\n                }\n                deadlineInfo.push(`LB pick: ${(0, deadline_1.formatDateDifference)(this.startTime, this.childStartTime)}`);\n            }\n            deadlineInfo.push(...this.child.getDeadlineInfo());\n            return deadlineInfo;\n        }\n        else {\n            if ((_b = this.metadata) === null || _b === void 0 ? void 0 : _b.getOptions().waitForReady) {\n                deadlineInfo.push('wait_for_ready');\n            }\n            deadlineInfo.push('Waiting for LB pick');\n        }\n        return deadlineInfo;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    outputStatus(status, progress) {\n        var _a, _b;\n        if (!this.ended) {\n            this.ended = true;\n            this.trace('ended with status: code=' +\n                status.code +\n                ' details=\"' +\n                status.details +\n                '\" start time=' +\n                this.startTime.toISOString());\n            const finalStatus = Object.assign(Object.assign({}, status), { progress });\n            (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus(finalStatus);\n            (_b = this.onCallEnded) === null || _b === void 0 ? void 0 : _b.call(this, finalStatus.code);\n        }\n    }\n    doPick() {\n        var _a, _b;\n        if (this.ended) {\n            return;\n        }\n        if (!this.metadata) {\n            throw new Error('doPick called before start');\n        }\n        this.trace('Pick called');\n        const finalMetadata = this.metadata.clone();\n        const pickResult = this.channel.doPick(finalMetadata, this.callConfig.pickInformation);\n        const subchannelString = pickResult.subchannel\n            ? '(' +\n                pickResult.subchannel.getChannelzRef().id +\n                ') ' +\n                pickResult.subchannel.getAddress()\n            : '' + pickResult.subchannel;\n        this.trace('Pick result: ' +\n            picker_1.PickResultType[pickResult.pickResultType] +\n            ' subchannel: ' +\n            subchannelString +\n            ' status: ' +\n            ((_a = pickResult.status) === null || _a === void 0 ? void 0 : _a.code) +\n            ' ' +\n            ((_b = pickResult.status) === null || _b === void 0 ? void 0 : _b.details));\n        switch (pickResult.pickResultType) {\n            case picker_1.PickResultType.COMPLETE:\n                this.credentials\n                    .generateMetadata({ method_name: this.methodName, service_url: this.serviceUrl })\n                    .then(credsMetadata => {\n                    var _a, _b, _c;\n                    /* If this call was cancelled (e.g. by the deadline) before\n                     * metadata generation finished, we shouldn't do anything with\n                     * it. */\n                    if (this.ended) {\n                        this.trace('Credentials metadata generation finished after call ended');\n                        return;\n                    }\n                    finalMetadata.merge(credsMetadata);\n                    if (finalMetadata.get('authorization').length > 1) {\n                        this.outputStatus({\n                            code: constants_1.Status.INTERNAL,\n                            details: '\"authorization\" metadata cannot have multiple values',\n                            metadata: new metadata_1.Metadata(),\n                        }, 'PROCESSED');\n                    }\n                    if (pickResult.subchannel.getConnectivityState() !==\n                        connectivity_state_1.ConnectivityState.READY) {\n                        this.trace('Picked subchannel ' +\n                            subchannelString +\n                            ' has state ' +\n                            connectivity_state_1.ConnectivityState[pickResult.subchannel.getConnectivityState()] +\n                            ' after getting credentials metadata. Retrying pick');\n                        this.doPick();\n                        return;\n                    }\n                    if (this.deadline !== Infinity) {\n                        finalMetadata.set('grpc-timeout', (0, deadline_1.getDeadlineTimeoutString)(this.deadline));\n                    }\n                    try {\n                        this.child = pickResult\n                            .subchannel.getRealSubchannel()\n                            .createCall(finalMetadata, this.host, this.methodName, {\n                            onReceiveMetadata: metadata => {\n                                this.trace('Received metadata');\n                                this.listener.onReceiveMetadata(metadata);\n                            },\n                            onReceiveMessage: message => {\n                                this.trace('Received message');\n                                this.listener.onReceiveMessage(message);\n                            },\n                            onReceiveStatus: status => {\n                                this.trace('Received status');\n                                if (status.rstCode ===\n                                    http2.constants.NGHTTP2_REFUSED_STREAM) {\n                                    this.outputStatus(status, 'REFUSED');\n                                }\n                                else {\n                                    this.outputStatus(status, 'PROCESSED');\n                                }\n                            },\n                        });\n                        this.childStartTime = new Date();\n                    }\n                    catch (error) {\n                        this.trace('Failed to start call on picked subchannel ' +\n                            subchannelString +\n                            ' with error ' +\n                            error.message);\n                        this.outputStatus({\n                            code: constants_1.Status.INTERNAL,\n                            details: 'Failed to start HTTP/2 stream with error ' +\n                                error.message,\n                            metadata: new metadata_1.Metadata(),\n                        }, 'NOT_STARTED');\n                        return;\n                    }\n                    (_b = (_a = this.callConfig).onCommitted) === null || _b === void 0 ? void 0 : _b.call(_a);\n                    (_c = pickResult.onCallStarted) === null || _c === void 0 ? void 0 : _c.call(pickResult);\n                    this.onCallEnded = pickResult.onCallEnded;\n                    this.trace('Created child call [' + this.child.getCallNumber() + ']');\n                    if (this.readPending) {\n                        this.child.startRead();\n                    }\n                    if (this.pendingMessage) {\n                        this.child.sendMessageWithContext(this.pendingMessage.context, this.pendingMessage.message);\n                    }\n                    if (this.pendingHalfClose) {\n                        this.child.halfClose();\n                    }\n                }, (error) => {\n                    // We assume the error code isn't 0 (Status.OK)\n                    const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(typeof error.code === 'number' ? error.code : constants_1.Status.UNKNOWN, `Getting metadata from plugin failed with error: ${error.message}`);\n                    this.outputStatus({\n                        code: code,\n                        details: details,\n                        metadata: new metadata_1.Metadata(),\n                    }, 'PROCESSED');\n                });\n                break;\n            case picker_1.PickResultType.DROP:\n                const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(pickResult.status.code, pickResult.status.details);\n                setImmediate(() => {\n                    this.outputStatus({ code, details, metadata: pickResult.status.metadata }, 'DROP');\n                });\n                break;\n            case picker_1.PickResultType.TRANSIENT_FAILURE:\n                if (this.metadata.getOptions().waitForReady) {\n                    this.channel.queueCallForPick(this);\n                }\n                else {\n                    const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(pickResult.status.code, pickResult.status.details);\n                    setImmediate(() => {\n                        this.outputStatus({ code, details, metadata: pickResult.status.metadata }, 'PROCESSED');\n                    });\n                }\n                break;\n            case picker_1.PickResultType.QUEUE:\n                this.channel.queueCallForPick(this);\n        }\n    }\n    cancelWithStatus(status, details) {\n        var _a;\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        (_a = this.child) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(status, details);\n        this.outputStatus({ code: status, details: details, metadata: new metadata_1.Metadata() }, 'PROCESSED');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.child) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : this.channel.getTarget();\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.listener = listener;\n        this.metadata = metadata;\n        this.doPick();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        if (this.child) {\n            this.child.sendMessageWithContext(context, message);\n        }\n        else {\n            this.pendingMessage = { context, message };\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        if (this.child) {\n            this.child.startRead();\n        }\n        else {\n            this.readPending = true;\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        if (this.child) {\n            this.child.halfClose();\n        }\n        else {\n            this.pendingHalfClose = true;\n        }\n    }\n    setCredentials(credentials) {\n        throw new Error('Method not implemented.');\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n}\nexports.LoadBalancingCall = LoadBalancingCall;\n//# sourceMappingURL=load-balancing-call.js.map",
    "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResolvingCall = void 0;\nconst constants_1 = require(\"./constants\");\nconst deadline_1 = require(\"./deadline\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst TRACER_NAME = 'resolving_call';\nclass ResolvingCall {\n    constructor(channel, method, options, filterStackFactory, credentials, callNumber) {\n        this.channel = channel;\n        this.method = method;\n        this.filterStackFactory = filterStackFactory;\n        this.credentials = credentials;\n        this.callNumber = callNumber;\n        this.child = null;\n        this.readPending = false;\n        this.pendingMessage = null;\n        this.pendingHalfClose = false;\n        this.ended = false;\n        this.readFilterPending = false;\n        this.writeFilterPending = false;\n        this.pendingChildStatus = null;\n        this.metadata = null;\n        this.listener = null;\n        this.statusWatchers = [];\n        this.deadlineTimer = setTimeout(() => { }, 0);\n        this.filterStack = null;\n        this.deadlineStartTime = null;\n        this.configReceivedTime = null;\n        this.childStartTime = null;\n        this.deadline = options.deadline;\n        this.host = options.host;\n        if (options.parentCall) {\n            if (options.flags & constants_1.Propagate.CANCELLATION) {\n                options.parentCall.on('cancelled', () => {\n                    this.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled by parent call');\n                });\n            }\n            if (options.flags & constants_1.Propagate.DEADLINE) {\n                this.trace('Propagating deadline from parent: ' +\n                    options.parentCall.getDeadline());\n                this.deadline = (0, deadline_1.minDeadline)(this.deadline, options.parentCall.getDeadline());\n            }\n        }\n        this.trace('Created');\n        this.runDeadlineTimer();\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    runDeadlineTimer() {\n        clearTimeout(this.deadlineTimer);\n        this.deadlineStartTime = new Date();\n        this.trace('Deadline: ' + (0, deadline_1.deadlineToString)(this.deadline));\n        const timeout = (0, deadline_1.getRelativeTimeout)(this.deadline);\n        if (timeout !== Infinity) {\n            this.trace('Deadline will be reached in ' + timeout + 'ms');\n            const handleDeadline = () => {\n                if (!this.deadlineStartTime) {\n                    this.cancelWithStatus(constants_1.Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n                    return;\n                }\n                const deadlineInfo = [];\n                const deadlineEndTime = new Date();\n                deadlineInfo.push(`Deadline exceeded after ${(0, deadline_1.formatDateDifference)(this.deadlineStartTime, deadlineEndTime)}`);\n                if (this.configReceivedTime) {\n                    if (this.configReceivedTime > this.deadlineStartTime) {\n                        deadlineInfo.push(`name resolution: ${(0, deadline_1.formatDateDifference)(this.deadlineStartTime, this.configReceivedTime)}`);\n                    }\n                    if (this.childStartTime) {\n                        if (this.childStartTime > this.configReceivedTime) {\n                            deadlineInfo.push(`metadata filters: ${(0, deadline_1.formatDateDifference)(this.configReceivedTime, this.childStartTime)}`);\n                        }\n                    }\n                    else {\n                        deadlineInfo.push('waiting for metadata filters');\n                    }\n                }\n                else {\n                    deadlineInfo.push('waiting for name resolution');\n                }\n                if (this.child) {\n                    deadlineInfo.push(...this.child.getDeadlineInfo());\n                }\n                this.cancelWithStatus(constants_1.Status.DEADLINE_EXCEEDED, deadlineInfo.join(','));\n            };\n            if (timeout <= 0) {\n                process.nextTick(handleDeadline);\n            }\n            else {\n                this.deadlineTimer = setTimeout(handleDeadline, timeout);\n            }\n        }\n    }\n    outputStatus(status) {\n        if (!this.ended) {\n            this.ended = true;\n            if (!this.filterStack) {\n                this.filterStack = this.filterStackFactory.createFilter();\n            }\n            clearTimeout(this.deadlineTimer);\n            const filteredStatus = this.filterStack.receiveTrailers(status);\n            this.trace('ended with status: code=' +\n                filteredStatus.code +\n                ' details=\"' +\n                filteredStatus.details +\n                '\"');\n            this.statusWatchers.forEach(watcher => watcher(filteredStatus));\n            process.nextTick(() => {\n                var _a;\n                (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus(filteredStatus);\n            });\n        }\n    }\n    sendMessageOnChild(context, message) {\n        if (!this.child) {\n            throw new Error('sendMessageonChild called with child not populated');\n        }\n        const child = this.child;\n        this.writeFilterPending = true;\n        this.filterStack.sendMessage(Promise.resolve({ message: message, flags: context.flags })).then(filteredMessage => {\n            this.writeFilterPending = false;\n            child.sendMessageWithContext(context, filteredMessage.message);\n            if (this.pendingHalfClose) {\n                child.halfClose();\n            }\n        }, (status) => {\n            this.cancelWithStatus(status.code, status.details);\n        });\n    }\n    getConfig() {\n        if (this.ended) {\n            return;\n        }\n        if (!this.metadata || !this.listener) {\n            throw new Error('getConfig called before start');\n        }\n        const configResult = this.channel.getConfig(this.method, this.metadata);\n        if (configResult.type === 'NONE') {\n            this.channel.queueCallForConfig(this);\n            return;\n        }\n        else if (configResult.type === 'ERROR') {\n            if (this.metadata.getOptions().waitForReady) {\n                this.channel.queueCallForConfig(this);\n            }\n            else {\n                this.outputStatus(configResult.error);\n            }\n            return;\n        }\n        // configResult.type === 'SUCCESS'\n        this.configReceivedTime = new Date();\n        const config = configResult.config;\n        if (config.status !== constants_1.Status.OK) {\n            const { code, details } = (0, control_plane_status_1.restrictControlPlaneStatusCode)(config.status, 'Failed to route call to method ' + this.method);\n            this.outputStatus({\n                code: code,\n                details: details,\n                metadata: new metadata_1.Metadata(),\n            });\n            return;\n        }\n        if (config.methodConfig.timeout) {\n            const configDeadline = new Date();\n            configDeadline.setSeconds(configDeadline.getSeconds() + config.methodConfig.timeout.seconds);\n            configDeadline.setMilliseconds(configDeadline.getMilliseconds() +\n                config.methodConfig.timeout.nanos / 1000000);\n            this.deadline = (0, deadline_1.minDeadline)(this.deadline, configDeadline);\n            this.runDeadlineTimer();\n        }\n        this.filterStackFactory.push(config.dynamicFilterFactories);\n        this.filterStack = this.filterStackFactory.createFilter();\n        this.filterStack.sendMetadata(Promise.resolve(this.metadata)).then(filteredMetadata => {\n            this.child = this.channel.createInnerCall(config, this.method, this.host, this.credentials, this.deadline);\n            this.trace('Created child [' + this.child.getCallNumber() + ']');\n            this.childStartTime = new Date();\n            this.child.start(filteredMetadata, {\n                onReceiveMetadata: metadata => {\n                    this.trace('Received metadata');\n                    this.listener.onReceiveMetadata(this.filterStack.receiveMetadata(metadata));\n                },\n                onReceiveMessage: message => {\n                    this.trace('Received message');\n                    this.readFilterPending = true;\n                    this.filterStack.receiveMessage(message).then(filteredMesssage => {\n                        this.trace('Finished filtering received message');\n                        this.readFilterPending = false;\n                        this.listener.onReceiveMessage(filteredMesssage);\n                        if (this.pendingChildStatus) {\n                            this.outputStatus(this.pendingChildStatus);\n                        }\n                    }, (status) => {\n                        this.cancelWithStatus(status.code, status.details);\n                    });\n                },\n                onReceiveStatus: status => {\n                    this.trace('Received status');\n                    if (this.readFilterPending) {\n                        this.pendingChildStatus = status;\n                    }\n                    else {\n                        this.outputStatus(status);\n                    }\n                },\n            });\n            if (this.readPending) {\n                this.child.startRead();\n            }\n            if (this.pendingMessage) {\n                this.sendMessageOnChild(this.pendingMessage.context, this.pendingMessage.message);\n            }\n            else if (this.pendingHalfClose) {\n                this.child.halfClose();\n            }\n        }, (status) => {\n            this.outputStatus(status);\n        });\n    }\n    reportResolverError(status) {\n        var _a;\n        if ((_a = this.metadata) === null || _a === void 0 ? void 0 : _a.getOptions().waitForReady) {\n            this.channel.queueCallForConfig(this);\n        }\n        else {\n            this.outputStatus(status);\n        }\n    }\n    cancelWithStatus(status, details) {\n        var _a;\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        (_a = this.child) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(status, details);\n        this.outputStatus({\n            code: status,\n            details: details,\n            metadata: new metadata_1.Metadata(),\n        });\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.child) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : this.channel.getTarget();\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.metadata = metadata.clone();\n        this.listener = listener;\n        this.getConfig();\n    }\n    sendMessageWithContext(context, message) {\n        this.trace('write() called with message of length ' + message.length);\n        if (this.child) {\n            this.sendMessageOnChild(context, message);\n        }\n        else {\n            this.pendingMessage = { context, message };\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        if (this.child) {\n            this.child.startRead();\n        }\n        else {\n            this.readPending = true;\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        if (this.child && !this.writeFilterPending) {\n            this.child.halfClose();\n        }\n        else {\n            this.pendingHalfClose = true;\n        }\n    }\n    setCredentials(credentials) {\n        this.credentials = this.credentials.compose(credentials);\n    }\n    addStatusWatcher(watcher) {\n        this.statusWatchers.push(watcher);\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n}\nexports.ResolvingCall = ResolvingCall;\n//# sourceMappingURL=resolving-call.js.map",
    "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RetryingCall = exports.MessageBufferTracker = exports.RetryThrottler = void 0;\nconst constants_1 = require(\"./constants\");\nconst deadline_1 = require(\"./deadline\");\nconst metadata_1 = require(\"./metadata\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'retrying_call';\nclass RetryThrottler {\n    constructor(maxTokens, tokenRatio, previousRetryThrottler) {\n        this.maxTokens = maxTokens;\n        this.tokenRatio = tokenRatio;\n        if (previousRetryThrottler) {\n            /* When carrying over tokens from a previous config, rescale them to the\n             * new max value */\n            this.tokens =\n                previousRetryThrottler.tokens *\n                    (maxTokens / previousRetryThrottler.maxTokens);\n        }\n        else {\n            this.tokens = maxTokens;\n        }\n    }\n    addCallSucceeded() {\n        this.tokens = Math.max(this.tokens + this.tokenRatio, this.maxTokens);\n    }\n    addCallFailed() {\n        this.tokens = Math.min(this.tokens - 1, 0);\n    }\n    canRetryCall() {\n        return this.tokens > this.maxTokens / 2;\n    }\n}\nexports.RetryThrottler = RetryThrottler;\nclass MessageBufferTracker {\n    constructor(totalLimit, limitPerCall) {\n        this.totalLimit = totalLimit;\n        this.limitPerCall = limitPerCall;\n        this.totalAllocated = 0;\n        this.allocatedPerCall = new Map();\n    }\n    allocate(size, callId) {\n        var _a;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (this.limitPerCall - currentPerCall < size ||\n            this.totalLimit - this.totalAllocated < size) {\n            return false;\n        }\n        this.allocatedPerCall.set(callId, currentPerCall + size);\n        this.totalAllocated += size;\n        return true;\n    }\n    free(size, callId) {\n        var _a;\n        if (this.totalAllocated < size) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} freed ${size} > total allocated ${this.totalAllocated}`);\n        }\n        this.totalAllocated -= size;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (currentPerCall < size) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} freed ${size} > allocated for call ${currentPerCall}`);\n        }\n        this.allocatedPerCall.set(callId, currentPerCall - size);\n    }\n    freeAll(callId) {\n        var _a;\n        const currentPerCall = (_a = this.allocatedPerCall.get(callId)) !== null && _a !== void 0 ? _a : 0;\n        if (this.totalAllocated < currentPerCall) {\n            throw new Error(`Invalid buffer allocation state: call ${callId} allocated ${currentPerCall} > total allocated ${this.totalAllocated}`);\n        }\n        this.totalAllocated -= currentPerCall;\n        this.allocatedPerCall.delete(callId);\n    }\n}\nexports.MessageBufferTracker = MessageBufferTracker;\nconst PREVIONS_RPC_ATTEMPTS_METADATA_KEY = 'grpc-previous-rpc-attempts';\nconst DEFAULT_MAX_ATTEMPTS_LIMIT = 5;\nclass RetryingCall {\n    constructor(channel, callConfig, methodName, host, credentials, deadline, callNumber, bufferTracker, retryThrottler) {\n        var _a;\n        this.channel = channel;\n        this.callConfig = callConfig;\n        this.methodName = methodName;\n        this.host = host;\n        this.credentials = credentials;\n        this.deadline = deadline;\n        this.callNumber = callNumber;\n        this.bufferTracker = bufferTracker;\n        this.retryThrottler = retryThrottler;\n        this.listener = null;\n        this.initialMetadata = null;\n        this.underlyingCalls = [];\n        this.writeBuffer = [];\n        /**\n         * The offset of message indices in the writeBuffer. For example, if\n         * writeBufferOffset is 10, message 10 is in writeBuffer[0] and message 15\n         * is in writeBuffer[5].\n         */\n        this.writeBufferOffset = 0;\n        /**\n         * Tracks whether a read has been started, so that we know whether to start\n         * reads on new child calls. This only matters for the first read, because\n         * once a message comes in the child call becomes committed and there will\n         * be no new child calls.\n         */\n        this.readStarted = false;\n        this.transparentRetryUsed = false;\n        /**\n         * Number of attempts so far\n         */\n        this.attempts = 0;\n        this.hedgingTimer = null;\n        this.committedCallIndex = null;\n        this.initialRetryBackoffSec = 0;\n        this.nextRetryBackoffSec = 0;\n        const maxAttemptsLimit = (_a = channel.getOptions()['grpc-node.retry_max_attempts_limit']) !== null && _a !== void 0 ? _a : DEFAULT_MAX_ATTEMPTS_LIMIT;\n        if (callConfig.methodConfig.retryPolicy) {\n            this.state = 'RETRY';\n            const retryPolicy = callConfig.methodConfig.retryPolicy;\n            this.nextRetryBackoffSec = this.initialRetryBackoffSec = Number(retryPolicy.initialBackoff.substring(0, retryPolicy.initialBackoff.length - 1));\n            this.maxAttempts = Math.min(retryPolicy.maxAttempts, maxAttemptsLimit);\n        }\n        else if (callConfig.methodConfig.hedgingPolicy) {\n            this.state = 'HEDGING';\n            this.maxAttempts = Math.min(callConfig.methodConfig.hedgingPolicy.maxAttempts, maxAttemptsLimit);\n        }\n        else {\n            this.state = 'TRANSPARENT_ONLY';\n            this.maxAttempts = 1;\n        }\n        this.startTime = new Date();\n    }\n    getDeadlineInfo() {\n        if (this.underlyingCalls.length === 0) {\n            return [];\n        }\n        const deadlineInfo = [];\n        const latestCall = this.underlyingCalls[this.underlyingCalls.length - 1];\n        if (this.underlyingCalls.length > 1) {\n            deadlineInfo.push(`previous attempts: ${this.underlyingCalls.length - 1}`);\n        }\n        if (latestCall.startTime > this.startTime) {\n            deadlineInfo.push(`time to current attempt start: ${(0, deadline_1.formatDateDifference)(this.startTime, latestCall.startTime)}`);\n        }\n        deadlineInfo.push(...latestCall.call.getDeadlineInfo());\n        return deadlineInfo;\n    }\n    getCallNumber() {\n        return this.callNumber;\n    }\n    trace(text) {\n        logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '[' + this.callNumber + '] ' + text);\n    }\n    reportStatus(statusObject) {\n        this.trace('ended with status: code=' +\n            statusObject.code +\n            ' details=\"' +\n            statusObject.details +\n            '\" start time=' +\n            this.startTime.toISOString());\n        this.bufferTracker.freeAll(this.callNumber);\n        this.writeBufferOffset = this.writeBufferOffset + this.writeBuffer.length;\n        this.writeBuffer = [];\n        process.nextTick(() => {\n            var _a;\n            // Explicitly construct status object to remove progress field\n            (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onReceiveStatus({\n                code: statusObject.code,\n                details: statusObject.details,\n                metadata: statusObject.metadata,\n            });\n        });\n    }\n    cancelWithStatus(status, details) {\n        this.trace('cancelWithStatus code: ' + status + ' details: \"' + details + '\"');\n        this.reportStatus({ code: status, details, metadata: new metadata_1.Metadata() });\n        for (const { call } of this.underlyingCalls) {\n            call.cancelWithStatus(status, details);\n        }\n    }\n    getPeer() {\n        if (this.committedCallIndex !== null) {\n            return this.underlyingCalls[this.committedCallIndex].call.getPeer();\n        }\n        else {\n            return 'unknown';\n        }\n    }\n    getBufferEntry(messageIndex) {\n        var _a;\n        return ((_a = this.writeBuffer[messageIndex - this.writeBufferOffset]) !== null && _a !== void 0 ? _a : {\n            entryType: 'FREED',\n            allocated: false,\n        });\n    }\n    getNextBufferIndex() {\n        return this.writeBufferOffset + this.writeBuffer.length;\n    }\n    clearSentMessages() {\n        if (this.state !== 'COMMITTED') {\n            return;\n        }\n        const earliestNeededMessageIndex = this.underlyingCalls[this.committedCallIndex].nextMessageToSend;\n        for (let messageIndex = this.writeBufferOffset; messageIndex < earliestNeededMessageIndex; messageIndex++) {\n            const bufferEntry = this.getBufferEntry(messageIndex);\n            if (bufferEntry.allocated) {\n                this.bufferTracker.free(bufferEntry.message.message.length, this.callNumber);\n            }\n        }\n        this.writeBuffer = this.writeBuffer.slice(earliestNeededMessageIndex - this.writeBufferOffset);\n        this.writeBufferOffset = earliestNeededMessageIndex;\n    }\n    commitCall(index) {\n        if (this.state === 'COMMITTED') {\n            return;\n        }\n        if (this.underlyingCalls[index].state === 'COMPLETED') {\n            return;\n        }\n        this.trace('Committing call [' +\n            this.underlyingCalls[index].call.getCallNumber() +\n            '] at index ' +\n            index);\n        this.state = 'COMMITTED';\n        this.committedCallIndex = index;\n        for (let i = 0; i < this.underlyingCalls.length; i++) {\n            if (i === index) {\n                continue;\n            }\n            if (this.underlyingCalls[i].state === 'COMPLETED') {\n                continue;\n            }\n            this.underlyingCalls[i].state = 'COMPLETED';\n            this.underlyingCalls[i].call.cancelWithStatus(constants_1.Status.CANCELLED, 'Discarded in favor of other hedged attempt');\n        }\n        this.clearSentMessages();\n    }\n    commitCallWithMostMessages() {\n        if (this.state === 'COMMITTED') {\n            return;\n        }\n        let mostMessages = -1;\n        let callWithMostMessages = -1;\n        for (const [index, childCall] of this.underlyingCalls.entries()) {\n            if (childCall.state === 'ACTIVE' &&\n                childCall.nextMessageToSend > mostMessages) {\n                mostMessages = childCall.nextMessageToSend;\n                callWithMostMessages = index;\n            }\n        }\n        if (callWithMostMessages === -1) {\n            /* There are no active calls, disable retries to force the next call that\n             * is started to be committed. */\n            this.state = 'TRANSPARENT_ONLY';\n        }\n        else {\n            this.commitCall(callWithMostMessages);\n        }\n    }\n    isStatusCodeInList(list, code) {\n        return list.some(value => {\n            var _a;\n            return value === code ||\n                value.toString().toLowerCase() === ((_a = constants_1.Status[code]) === null || _a === void 0 ? void 0 : _a.toLowerCase());\n        });\n    }\n    getNextRetryBackoffMs() {\n        var _a;\n        const retryPolicy = (_a = this.callConfig) === null || _a === void 0 ? void 0 : _a.methodConfig.retryPolicy;\n        if (!retryPolicy) {\n            return 0;\n        }\n        const nextBackoffMs = Math.random() * this.nextRetryBackoffSec * 1000;\n        const maxBackoffSec = Number(retryPolicy.maxBackoff.substring(0, retryPolicy.maxBackoff.length - 1));\n        this.nextRetryBackoffSec = Math.min(this.nextRetryBackoffSec * retryPolicy.backoffMultiplier, maxBackoffSec);\n        return nextBackoffMs;\n    }\n    maybeRetryCall(pushback, callback) {\n        if (this.state !== 'RETRY') {\n            callback(false);\n            return;\n        }\n        if (this.attempts >= this.maxAttempts) {\n            callback(false);\n            return;\n        }\n        let retryDelayMs;\n        if (pushback === null) {\n            retryDelayMs = this.getNextRetryBackoffMs();\n        }\n        else if (pushback < 0) {\n            this.state = 'TRANSPARENT_ONLY';\n            callback(false);\n            return;\n        }\n        else {\n            retryDelayMs = pushback;\n            this.nextRetryBackoffSec = this.initialRetryBackoffSec;\n        }\n        setTimeout(() => {\n            var _a, _b;\n            if (this.state !== 'RETRY') {\n                callback(false);\n                return;\n            }\n            if ((_b = (_a = this.retryThrottler) === null || _a === void 0 ? void 0 : _a.canRetryCall()) !== null && _b !== void 0 ? _b : true) {\n                callback(true);\n                this.attempts += 1;\n                this.startNewAttempt();\n            }\n        }, retryDelayMs);\n    }\n    countActiveCalls() {\n        let count = 0;\n        for (const call of this.underlyingCalls) {\n            if ((call === null || call === void 0 ? void 0 : call.state) === 'ACTIVE') {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    handleProcessedStatus(status, callIndex, pushback) {\n        var _a, _b, _c;\n        switch (this.state) {\n            case 'COMMITTED':\n            case 'TRANSPARENT_ONLY':\n                this.commitCall(callIndex);\n                this.reportStatus(status);\n                break;\n            case 'HEDGING':\n                if (this.isStatusCodeInList((_a = this.callConfig.methodConfig.hedgingPolicy.nonFatalStatusCodes) !== null && _a !== void 0 ? _a : [], status.code)) {\n                    (_b = this.retryThrottler) === null || _b === void 0 ? void 0 : _b.addCallFailed();\n                    let delayMs;\n                    if (pushback === null) {\n                        delayMs = 0;\n                    }\n                    else if (pushback < 0) {\n                        this.state = 'TRANSPARENT_ONLY';\n                        this.commitCall(callIndex);\n                        this.reportStatus(status);\n                        return;\n                    }\n                    else {\n                        delayMs = pushback;\n                    }\n                    setTimeout(() => {\n                        this.maybeStartHedgingAttempt();\n                        // If after trying to start a call there are no active calls, this was the last one\n                        if (this.countActiveCalls() === 0) {\n                            this.commitCall(callIndex);\n                            this.reportStatus(status);\n                        }\n                    }, delayMs);\n                }\n                else {\n                    this.commitCall(callIndex);\n                    this.reportStatus(status);\n                }\n                break;\n            case 'RETRY':\n                if (this.isStatusCodeInList(this.callConfig.methodConfig.retryPolicy.retryableStatusCodes, status.code)) {\n                    (_c = this.retryThrottler) === null || _c === void 0 ? void 0 : _c.addCallFailed();\n                    this.maybeRetryCall(pushback, retried => {\n                        if (!retried) {\n                            this.commitCall(callIndex);\n                            this.reportStatus(status);\n                        }\n                    });\n                }\n                else {\n                    this.commitCall(callIndex);\n                    this.reportStatus(status);\n                }\n                break;\n        }\n    }\n    getPushback(metadata) {\n        const mdValue = metadata.get('grpc-retry-pushback-ms');\n        if (mdValue.length === 0) {\n            return null;\n        }\n        try {\n            return parseInt(mdValue[0]);\n        }\n        catch (e) {\n            return -1;\n        }\n    }\n    handleChildStatus(status, callIndex) {\n        var _a;\n        if (this.underlyingCalls[callIndex].state === 'COMPLETED') {\n            return;\n        }\n        this.trace('state=' +\n            this.state +\n            ' handling status with progress ' +\n            status.progress +\n            ' from child [' +\n            this.underlyingCalls[callIndex].call.getCallNumber() +\n            '] in state ' +\n            this.underlyingCalls[callIndex].state);\n        this.underlyingCalls[callIndex].state = 'COMPLETED';\n        if (status.code === constants_1.Status.OK) {\n            (_a = this.retryThrottler) === null || _a === void 0 ? void 0 : _a.addCallSucceeded();\n            this.commitCall(callIndex);\n            this.reportStatus(status);\n            return;\n        }\n        if (this.state === 'COMMITTED') {\n            this.reportStatus(status);\n            return;\n        }\n        const pushback = this.getPushback(status.metadata);\n        switch (status.progress) {\n            case 'NOT_STARTED':\n                // RPC never leaves the client, always safe to retry\n                this.startNewAttempt();\n                break;\n            case 'REFUSED':\n                // RPC reaches the server library, but not the server application logic\n                if (this.transparentRetryUsed) {\n                    this.handleProcessedStatus(status, callIndex, pushback);\n                }\n                else {\n                    this.transparentRetryUsed = true;\n                    this.startNewAttempt();\n                }\n                break;\n            case 'DROP':\n                this.commitCall(callIndex);\n                this.reportStatus(status);\n                break;\n            case 'PROCESSED':\n                this.handleProcessedStatus(status, callIndex, pushback);\n                break;\n        }\n    }\n    maybeStartHedgingAttempt() {\n        if (this.state !== 'HEDGING') {\n            return;\n        }\n        if (!this.callConfig.methodConfig.hedgingPolicy) {\n            return;\n        }\n        if (this.attempts >= this.maxAttempts) {\n            return;\n        }\n        this.attempts += 1;\n        this.startNewAttempt();\n        this.maybeStartHedgingTimer();\n    }\n    maybeStartHedgingTimer() {\n        var _a, _b, _c;\n        if (this.hedgingTimer) {\n            clearTimeout(this.hedgingTimer);\n        }\n        if (this.state !== 'HEDGING') {\n            return;\n        }\n        if (!this.callConfig.methodConfig.hedgingPolicy) {\n            return;\n        }\n        const hedgingPolicy = this.callConfig.methodConfig.hedgingPolicy;\n        if (this.attempts >= this.maxAttempts) {\n            return;\n        }\n        const hedgingDelayString = (_a = hedgingPolicy.hedgingDelay) !== null && _a !== void 0 ? _a : '0s';\n        const hedgingDelaySec = Number(hedgingDelayString.substring(0, hedgingDelayString.length - 1));\n        this.hedgingTimer = setTimeout(() => {\n            this.maybeStartHedgingAttempt();\n        }, hedgingDelaySec * 1000);\n        (_c = (_b = this.hedgingTimer).unref) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    startNewAttempt() {\n        const child = this.channel.createLoadBalancingCall(this.callConfig, this.methodName, this.host, this.credentials, this.deadline);\n        this.trace('Created child call [' +\n            child.getCallNumber() +\n            '] for attempt ' +\n            this.attempts);\n        const index = this.underlyingCalls.length;\n        this.underlyingCalls.push({\n            state: 'ACTIVE',\n            call: child,\n            nextMessageToSend: 0,\n            startTime: new Date()\n        });\n        const previousAttempts = this.attempts - 1;\n        const initialMetadata = this.initialMetadata.clone();\n        if (previousAttempts > 0) {\n            initialMetadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n        }\n        let receivedMetadata = false;\n        child.start(initialMetadata, {\n            onReceiveMetadata: metadata => {\n                this.trace('Received metadata from child [' + child.getCallNumber() + ']');\n                this.commitCall(index);\n                receivedMetadata = true;\n                if (previousAttempts > 0) {\n                    metadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n                }\n                if (this.underlyingCalls[index].state === 'ACTIVE') {\n                    this.listener.onReceiveMetadata(metadata);\n                }\n            },\n            onReceiveMessage: message => {\n                this.trace('Received message from child [' + child.getCallNumber() + ']');\n                this.commitCall(index);\n                if (this.underlyingCalls[index].state === 'ACTIVE') {\n                    this.listener.onReceiveMessage(message);\n                }\n            },\n            onReceiveStatus: status => {\n                this.trace('Received status from child [' + child.getCallNumber() + ']');\n                if (!receivedMetadata && previousAttempts > 0) {\n                    status.metadata.set(PREVIONS_RPC_ATTEMPTS_METADATA_KEY, `${previousAttempts}`);\n                }\n                this.handleChildStatus(status, index);\n            },\n        });\n        this.sendNextChildMessage(index);\n        if (this.readStarted) {\n            child.startRead();\n        }\n    }\n    start(metadata, listener) {\n        this.trace('start called');\n        this.listener = listener;\n        this.initialMetadata = metadata;\n        this.attempts += 1;\n        this.startNewAttempt();\n        this.maybeStartHedgingTimer();\n    }\n    handleChildWriteCompleted(childIndex) {\n        var _a, _b;\n        const childCall = this.underlyingCalls[childIndex];\n        const messageIndex = childCall.nextMessageToSend;\n        (_b = (_a = this.getBufferEntry(messageIndex)).callback) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.clearSentMessages();\n        childCall.nextMessageToSend += 1;\n        this.sendNextChildMessage(childIndex);\n    }\n    sendNextChildMessage(childIndex) {\n        const childCall = this.underlyingCalls[childIndex];\n        if (childCall.state === 'COMPLETED') {\n            return;\n        }\n        if (this.getBufferEntry(childCall.nextMessageToSend)) {\n            const bufferEntry = this.getBufferEntry(childCall.nextMessageToSend);\n            switch (bufferEntry.entryType) {\n                case 'MESSAGE':\n                    childCall.call.sendMessageWithContext({\n                        callback: error => {\n                            // Ignore error\n                            this.handleChildWriteCompleted(childIndex);\n                        },\n                    }, bufferEntry.message.message);\n                    break;\n                case 'HALF_CLOSE':\n                    childCall.nextMessageToSend += 1;\n                    childCall.call.halfClose();\n                    break;\n                case 'FREED':\n                    // Should not be possible\n                    break;\n            }\n        }\n    }\n    sendMessageWithContext(context, message) {\n        var _a;\n        this.trace('write() called with message of length ' + message.length);\n        const writeObj = {\n            message,\n            flags: context.flags,\n        };\n        const messageIndex = this.getNextBufferIndex();\n        const bufferEntry = {\n            entryType: 'MESSAGE',\n            message: writeObj,\n            allocated: this.bufferTracker.allocate(message.length, this.callNumber),\n        };\n        this.writeBuffer.push(bufferEntry);\n        if (bufferEntry.allocated) {\n            (_a = context.callback) === null || _a === void 0 ? void 0 : _a.call(context);\n            for (const [callIndex, call] of this.underlyingCalls.entries()) {\n                if (call.state === 'ACTIVE' &&\n                    call.nextMessageToSend === messageIndex) {\n                    call.call.sendMessageWithContext({\n                        callback: error => {\n                            // Ignore error\n                            this.handleChildWriteCompleted(callIndex);\n                        },\n                    }, message);\n                }\n            }\n        }\n        else {\n            this.commitCallWithMostMessages();\n            // commitCallWithMostMessages can fail if we are between ping attempts\n            if (this.committedCallIndex === null) {\n                return;\n            }\n            const call = this.underlyingCalls[this.committedCallIndex];\n            bufferEntry.callback = context.callback;\n            if (call.state === 'ACTIVE' && call.nextMessageToSend === messageIndex) {\n                call.call.sendMessageWithContext({\n                    callback: error => {\n                        // Ignore error\n                        this.handleChildWriteCompleted(this.committedCallIndex);\n                    },\n                }, message);\n            }\n        }\n    }\n    startRead() {\n        this.trace('startRead called');\n        this.readStarted = true;\n        for (const underlyingCall of this.underlyingCalls) {\n            if ((underlyingCall === null || underlyingCall === void 0 ? void 0 : underlyingCall.state) === 'ACTIVE') {\n                underlyingCall.call.startRead();\n            }\n        }\n    }\n    halfClose() {\n        this.trace('halfClose called');\n        const halfCloseIndex = this.getNextBufferIndex();\n        this.writeBuffer.push({\n            entryType: 'HALF_CLOSE',\n            allocated: false,\n        });\n        for (const call of this.underlyingCalls) {\n            if ((call === null || call === void 0 ? void 0 : call.state) === 'ACTIVE' &&\n                call.nextMessageToSend === halfCloseIndex) {\n                call.nextMessageToSend += 1;\n                call.call.halfClose();\n            }\n        }\n    }\n    setCredentials(newCredentials) {\n        throw new Error('Method not implemented.');\n    }\n    getMethod() {\n        return this.methodName;\n    }\n    getHost() {\n        return this.host;\n    }\n}\nexports.RetryingCall = RetryingCall;\n//# sourceMappingURL=retrying-call.js.map",
    "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseSubchannelWrapper = void 0;\nclass BaseSubchannelWrapper {\n    constructor(child) {\n        this.child = child;\n        this.healthy = true;\n        this.healthListeners = new Set();\n        child.addHealthStateWatcher(childHealthy => {\n            /* A change to the child health state only affects this wrapper's overall\n             * health state if this wrapper is reporting healthy. */\n            if (this.healthy) {\n                this.updateHealthListeners();\n            }\n        });\n    }\n    updateHealthListeners() {\n        for (const listener of this.healthListeners) {\n            listener(this.isHealthy());\n        }\n    }\n    getConnectivityState() {\n        return this.child.getConnectivityState();\n    }\n    addConnectivityStateListener(listener) {\n        this.child.addConnectivityStateListener(listener);\n    }\n    removeConnectivityStateListener(listener) {\n        this.child.removeConnectivityStateListener(listener);\n    }\n    startConnecting() {\n        this.child.startConnecting();\n    }\n    getAddress() {\n        return this.child.getAddress();\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        this.child.throttleKeepalive(newKeepaliveTime);\n    }\n    ref() {\n        this.child.ref();\n    }\n    unref() {\n        this.child.unref();\n    }\n    getChannelzRef() {\n        return this.child.getChannelzRef();\n    }\n    isHealthy() {\n        return this.healthy && this.child.isHealthy();\n    }\n    addHealthStateWatcher(listener) {\n        this.healthListeners.add(listener);\n    }\n    removeHealthStateWatcher(listener) {\n        this.healthListeners.delete(listener);\n    }\n    setHealthy(healthy) {\n        if (healthy !== this.healthy) {\n            this.healthy = healthy;\n            /* A change to this wrapper's health state only affects the overall\n             * reported health state if the child is healthy. */\n            if (this.child.isHealthy()) {\n                this.updateHealthListeners();\n            }\n        }\n    }\n    getRealSubchannel() {\n        return this.child.getRealSubchannel();\n    }\n    realSubchannelEquals(other) {\n        return this.getRealSubchannel() === other.getRealSubchannel();\n    }\n}\nexports.BaseSubchannelWrapper = BaseSubchannelWrapper;\n//# sourceMappingURL=subchannel-interface.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalChannel = void 0;\nconst channel_credentials_1 = require(\"./channel-credentials\");\nconst resolving_load_balancer_1 = require(\"./resolving-load-balancer\");\nconst subchannel_pool_1 = require(\"./subchannel-pool\");\nconst picker_1 = require(\"./picker\");\nconst metadata_1 = require(\"./metadata\");\nconst constants_1 = require(\"./constants\");\nconst filter_stack_1 = require(\"./filter-stack\");\nconst compression_filter_1 = require(\"./compression-filter\");\nconst resolver_1 = require(\"./resolver\");\nconst logging_1 = require(\"./logging\");\nconst http_proxy_1 = require(\"./http_proxy\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst channelz_1 = require(\"./channelz\");\nconst load_balancing_call_1 = require(\"./load-balancing-call\");\nconst deadline_1 = require(\"./deadline\");\nconst resolving_call_1 = require(\"./resolving-call\");\nconst call_number_1 = require(\"./call-number\");\nconst control_plane_status_1 = require(\"./control-plane-status\");\nconst retrying_call_1 = require(\"./retrying-call\");\nconst subchannel_interface_1 = require(\"./subchannel-interface\");\n/**\n * See https://nodejs.org/api/timers.html#timers_setinterval_callback_delay_args\n */\nconst MAX_TIMEOUT_TIME = 2147483647;\nconst MIN_IDLE_TIMEOUT_MS = 1000;\n// 30 minutes\nconst DEFAULT_IDLE_TIMEOUT_MS = 30 * 60 * 1000;\nconst RETRY_THROTTLER_MAP = new Map();\nconst DEFAULT_RETRY_BUFFER_SIZE_BYTES = 1 << 24; // 16 MB\nconst DEFAULT_PER_RPC_RETRY_BUFFER_SIZE_BYTES = 1 << 20; // 1 MB\nclass ChannelSubchannelWrapper extends subchannel_interface_1.BaseSubchannelWrapper {\n    constructor(childSubchannel, channel) {\n        super(childSubchannel);\n        this.channel = channel;\n        this.refCount = 0;\n        this.subchannelStateListener = (subchannel, previousState, newState, keepaliveTime) => {\n            channel.throttleKeepalive(keepaliveTime);\n        };\n    }\n    ref() {\n        if (this.refCount === 0) {\n            this.child.addConnectivityStateListener(this.subchannelStateListener);\n            this.channel.addWrappedSubchannel(this);\n        }\n        this.child.ref();\n        this.refCount += 1;\n    }\n    unref() {\n        this.child.unref();\n        this.refCount -= 1;\n        if (this.refCount <= 0) {\n            this.child.removeConnectivityStateListener(this.subchannelStateListener);\n            this.channel.removeWrappedSubchannel(this);\n        }\n    }\n}\nclass ShutdownPicker {\n    pick(pickArgs) {\n        return {\n            pickResultType: picker_1.PickResultType.DROP,\n            status: {\n                code: constants_1.Status.UNAVAILABLE,\n                details: 'Channel closed before call started',\n                metadata: new metadata_1.Metadata()\n            },\n            subchannel: null,\n            onCallStarted: null,\n            onCallEnded: null\n        };\n    }\n}\nclass ChannelzInfoTracker {\n    constructor(target) {\n        this.target = target;\n        this.trace = new channelz_1.ChannelzTrace();\n        this.callTracker = new channelz_1.ChannelzCallTracker();\n        this.childrenTracker = new channelz_1.ChannelzChildrenTracker();\n        this.state = connectivity_state_1.ConnectivityState.IDLE;\n    }\n    getChannelzInfoCallback() {\n        return () => {\n            return {\n                target: this.target,\n                state: this.state,\n                trace: this.trace,\n                callTracker: this.callTracker,\n                children: this.childrenTracker.getChildLists()\n            };\n        };\n    }\n}\nclass InternalChannel {\n    constructor(target, credentials, options) {\n        var _a, _b, _c, _d, _e, _f;\n        this.credentials = credentials;\n        this.options = options;\n        this.connectivityState = connectivity_state_1.ConnectivityState.IDLE;\n        this.currentPicker = new picker_1.UnavailablePicker();\n        /**\n         * Calls queued up to get a call config. Should only be populated before the\n         * first time the resolver returns a result, which includes the ConfigSelector.\n         */\n        this.configSelectionQueue = [];\n        this.pickQueue = [];\n        this.connectivityStateWatchers = [];\n        /**\n         * This timer does not do anything on its own. Its purpose is to hold the\n         * event loop open while there are any pending calls for the channel that\n         * have not yet been assigned to specific subchannels. In other words,\n         * the invariant is that callRefTimer is reffed if and only if pickQueue\n         * is non-empty. In addition, the timer is null while the state is IDLE or\n         * SHUTDOWN and there are no pending calls.\n         */\n        this.callRefTimer = null;\n        this.configSelector = null;\n        /**\n         * This is the error from the name resolver if it failed most recently. It\n         * is only used to end calls that start while there is no config selector\n         * and the name resolver is in backoff, so it should be nulled if\n         * configSelector becomes set or the channel state becomes anything other\n         * than TRANSIENT_FAILURE.\n         */\n        this.currentResolutionError = null;\n        this.wrappedSubchannels = new Set();\n        this.callCount = 0;\n        this.idleTimer = null;\n        // Channelz info\n        this.channelzEnabled = true;\n        /**\n         * Randomly generated ID to be passed to the config selector, for use by\n         * ring_hash in xDS. An integer distributed approximately uniformly between\n         * 0 and MAX_SAFE_INTEGER.\n         */\n        this.randomChannelId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n        if (typeof target !== 'string') {\n            throw new TypeError('Channel target must be a string');\n        }\n        if (!(credentials instanceof channel_credentials_1.ChannelCredentials)) {\n            throw new TypeError('Channel credentials must be a ChannelCredentials object');\n        }\n        if (options) {\n            if (typeof options !== 'object') {\n                throw new TypeError('Channel options must be an object');\n            }\n        }\n        this.channelzInfoTracker = new ChannelzInfoTracker(target);\n        const originalTargetUri = (0, uri_parser_1.parseUri)(target);\n        if (originalTargetUri === null) {\n            throw new Error(`Could not parse target name \"${target}\"`);\n        }\n        /* This ensures that the target has a scheme that is registered with the\n         * resolver */\n        const defaultSchemeMapResult = (0, resolver_1.mapUriDefaultScheme)(originalTargetUri);\n        if (defaultSchemeMapResult === null) {\n            throw new Error(`Could not find a default scheme for target name \"${target}\"`);\n        }\n        if (this.options['grpc.enable_channelz'] === 0) {\n            this.channelzEnabled = false;\n        }\n        this.channelzRef = (0, channelz_1.registerChannelzChannel)(target, this.channelzInfoTracker.getChannelzInfoCallback(), this.channelzEnabled);\n        if (this.channelzEnabled) {\n            this.channelzInfoTracker.trace.addTrace('CT_INFO', 'Channel created');\n        }\n        if (this.options['grpc.default_authority']) {\n            this.defaultAuthority = this.options['grpc.default_authority'];\n        }\n        else {\n            this.defaultAuthority = (0, resolver_1.getDefaultAuthority)(defaultSchemeMapResult);\n        }\n        const proxyMapResult = (0, http_proxy_1.mapProxyName)(defaultSchemeMapResult, options);\n        this.target = proxyMapResult.target;\n        this.options = Object.assign({}, this.options, proxyMapResult.extraOptions);\n        /* The global boolean parameter to getSubchannelPool has the inverse meaning to what\n         * the grpc.use_local_subchannel_pool channel option means. */\n        this.subchannelPool = (0, subchannel_pool_1.getSubchannelPool)(((_a = options['grpc.use_local_subchannel_pool']) !== null && _a !== void 0 ? _a : 0) === 0);\n        this.retryBufferTracker = new retrying_call_1.MessageBufferTracker((_b = options['grpc.retry_buffer_size']) !== null && _b !== void 0 ? _b : DEFAULT_RETRY_BUFFER_SIZE_BYTES, (_c = options['grpc.per_rpc_retry_buffer_size']) !== null && _c !== void 0 ? _c : DEFAULT_PER_RPC_RETRY_BUFFER_SIZE_BYTES);\n        this.keepaliveTime = (_d = options['grpc.keepalive_time_ms']) !== null && _d !== void 0 ? _d : -1;\n        this.idleTimeoutMs = Math.max((_e = options['grpc.client_idle_timeout_ms']) !== null && _e !== void 0 ? _e : DEFAULT_IDLE_TIMEOUT_MS, MIN_IDLE_TIMEOUT_MS);\n        const channelControlHelper = {\n            createSubchannel: (subchannelAddress, subchannelArgs, credentialsOverride) => {\n                const subchannel = this.subchannelPool.getOrCreateSubchannel(this.target, subchannelAddress, Object.assign({}, this.options, subchannelArgs), credentialsOverride !== null && credentialsOverride !== void 0 ? credentialsOverride : this.credentials);\n                subchannel.throttleKeepalive(this.keepaliveTime);\n                if (this.channelzEnabled) {\n                    this.channelzInfoTracker.trace.addTrace('CT_INFO', 'Created subchannel or used existing subchannel', subchannel.getChannelzRef());\n                }\n                const wrappedSubchannel = new ChannelSubchannelWrapper(subchannel, this);\n                return wrappedSubchannel;\n            },\n            updateState: (connectivityState, picker) => {\n                this.currentPicker = picker;\n                const queueCopy = this.pickQueue.slice();\n                this.pickQueue = [];\n                if (queueCopy.length > 0) {\n                    this.callRefTimerUnref();\n                }\n                for (const call of queueCopy) {\n                    call.doPick();\n                }\n                this.updateState(connectivityState);\n            },\n            requestReresolution: () => {\n                // This should never be called.\n                throw new Error('Resolving load balancer should never call requestReresolution');\n            },\n            addChannelzChild: (child) => {\n                if (this.channelzEnabled) {\n                    this.channelzInfoTracker.childrenTracker.refChild(child);\n                }\n            },\n            removeChannelzChild: (child) => {\n                if (this.channelzEnabled) {\n                    this.channelzInfoTracker.childrenTracker.unrefChild(child);\n                }\n            },\n        };\n        this.resolvingLoadBalancer = new resolving_load_balancer_1.ResolvingLoadBalancer(this.target, channelControlHelper, credentials, options, (serviceConfig, configSelector) => {\n            if (serviceConfig.retryThrottling) {\n                RETRY_THROTTLER_MAP.set(this.getTarget(), new retrying_call_1.RetryThrottler(serviceConfig.retryThrottling.maxTokens, serviceConfig.retryThrottling.tokenRatio, RETRY_THROTTLER_MAP.get(this.getTarget())));\n            }\n            else {\n                RETRY_THROTTLER_MAP.delete(this.getTarget());\n            }\n            if (this.channelzEnabled) {\n                this.channelzInfoTracker.trace.addTrace('CT_INFO', 'Address resolution succeeded');\n            }\n            this.configSelector = configSelector;\n            this.currentResolutionError = null;\n            /* We process the queue asynchronously to ensure that the corresponding\n             * load balancer update has completed. */\n            process.nextTick(() => {\n                const localQueue = this.configSelectionQueue;\n                this.configSelectionQueue = [];\n                if (localQueue.length > 0) {\n                    this.callRefTimerUnref();\n                }\n                for (const call of localQueue) {\n                    call.getConfig();\n                }\n            });\n        }, status => {\n            if (this.channelzEnabled) {\n                this.channelzInfoTracker.trace.addTrace('CT_WARNING', 'Address resolution failed with code ' +\n                    status.code +\n                    ' and details \"' +\n                    status.details +\n                    '\"');\n            }\n            if (this.configSelectionQueue.length > 0) {\n                this.trace('Name resolution failed with calls queued for config selection');\n            }\n            if (this.configSelector === null) {\n                this.currentResolutionError = Object.assign(Object.assign({}, (0, control_plane_status_1.restrictControlPlaneStatusCode)(status.code, status.details)), { metadata: status.metadata });\n            }\n            const localQueue = this.configSelectionQueue;\n            this.configSelectionQueue = [];\n            if (localQueue.length > 0) {\n                this.callRefTimerUnref();\n            }\n            for (const call of localQueue) {\n                call.reportResolverError(status);\n            }\n        });\n        this.filterStackFactory = new filter_stack_1.FilterStackFactory([\n            new compression_filter_1.CompressionFilterFactory(this, this.options),\n        ]);\n        this.trace('Channel constructed with options ' +\n            JSON.stringify(options, undefined, 2));\n        const error = new Error();\n        if ((0, logging_1.isTracerEnabled)('channel_stacktrace')) {\n            (0, logging_1.trace)(constants_1.LogVerbosity.DEBUG, 'channel_stacktrace', '(' +\n                this.channelzRef.id +\n                ') ' +\n                'Channel constructed \\n' +\n                ((_f = error.stack) === null || _f === void 0 ? void 0 : _f.substring(error.stack.indexOf('\\n') + 1)));\n        }\n        this.lastActivityTimestamp = new Date();\n    }\n    trace(text, verbosityOverride) {\n        (0, logging_1.trace)(verbosityOverride !== null && verbosityOverride !== void 0 ? verbosityOverride : constants_1.LogVerbosity.DEBUG, 'channel', '(' + this.channelzRef.id + ') ' + (0, uri_parser_1.uriToString)(this.target) + ' ' + text);\n    }\n    callRefTimerRef() {\n        var _a, _b, _c, _d;\n        if (!this.callRefTimer) {\n            this.callRefTimer = setInterval(() => { }, MAX_TIMEOUT_TIME);\n        }\n        // If the hasRef function does not exist, always run the code\n        if (!((_b = (_a = this.callRefTimer).hasRef) === null || _b === void 0 ? void 0 : _b.call(_a))) {\n            this.trace('callRefTimer.ref | configSelectionQueue.length=' +\n                this.configSelectionQueue.length +\n                ' pickQueue.length=' +\n                this.pickQueue.length);\n            (_d = (_c = this.callRefTimer).ref) === null || _d === void 0 ? void 0 : _d.call(_c);\n        }\n    }\n    callRefTimerUnref() {\n        var _a, _b, _c;\n        // If the timer or the hasRef function does not exist, always run the code\n        if (!((_a = this.callRefTimer) === null || _a === void 0 ? void 0 : _a.hasRef) || this.callRefTimer.hasRef()) {\n            this.trace('callRefTimer.unref | configSelectionQueue.length=' +\n                this.configSelectionQueue.length +\n                ' pickQueue.length=' +\n                this.pickQueue.length);\n            (_c = (_b = this.callRefTimer) === null || _b === void 0 ? void 0 : _b.unref) === null || _c === void 0 ? void 0 : _c.call(_b);\n        }\n    }\n    removeConnectivityStateWatcher(watcherObject) {\n        const watcherIndex = this.connectivityStateWatchers.findIndex(value => value === watcherObject);\n        if (watcherIndex >= 0) {\n            this.connectivityStateWatchers.splice(watcherIndex, 1);\n        }\n    }\n    updateState(newState) {\n        (0, logging_1.trace)(constants_1.LogVerbosity.DEBUG, 'connectivity_state', '(' +\n            this.channelzRef.id +\n            ') ' +\n            (0, uri_parser_1.uriToString)(this.target) +\n            ' ' +\n            connectivity_state_1.ConnectivityState[this.connectivityState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        if (this.channelzEnabled) {\n            this.channelzInfoTracker.trace.addTrace('CT_INFO', 'Connectivity state change to ' + connectivity_state_1.ConnectivityState[newState]);\n        }\n        this.connectivityState = newState;\n        this.channelzInfoTracker.state = newState;\n        const watchersCopy = this.connectivityStateWatchers.slice();\n        for (const watcherObject of watchersCopy) {\n            if (newState !== watcherObject.currentState) {\n                if (watcherObject.timer) {\n                    clearTimeout(watcherObject.timer);\n                }\n                this.removeConnectivityStateWatcher(watcherObject);\n                watcherObject.callback();\n            }\n        }\n        if (newState !== connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n            this.currentResolutionError = null;\n        }\n    }\n    throttleKeepalive(newKeepaliveTime) {\n        if (newKeepaliveTime > this.keepaliveTime) {\n            this.keepaliveTime = newKeepaliveTime;\n            for (const wrappedSubchannel of this.wrappedSubchannels) {\n                wrappedSubchannel.throttleKeepalive(newKeepaliveTime);\n            }\n        }\n    }\n    addWrappedSubchannel(wrappedSubchannel) {\n        this.wrappedSubchannels.add(wrappedSubchannel);\n    }\n    removeWrappedSubchannel(wrappedSubchannel) {\n        this.wrappedSubchannels.delete(wrappedSubchannel);\n    }\n    doPick(metadata, extraPickInfo) {\n        return this.currentPicker.pick({\n            metadata: metadata,\n            extraPickInfo: extraPickInfo,\n        });\n    }\n    queueCallForPick(call) {\n        this.pickQueue.push(call);\n        this.callRefTimerRef();\n    }\n    getConfig(method, metadata) {\n        if (this.connectivityState !== connectivity_state_1.ConnectivityState.SHUTDOWN) {\n            this.resolvingLoadBalancer.exitIdle();\n        }\n        if (this.configSelector) {\n            return {\n                type: 'SUCCESS',\n                config: this.configSelector(method, metadata, this.randomChannelId),\n            };\n        }\n        else {\n            if (this.currentResolutionError) {\n                return {\n                    type: 'ERROR',\n                    error: this.currentResolutionError,\n                };\n            }\n            else {\n                return {\n                    type: 'NONE',\n                };\n            }\n        }\n    }\n    queueCallForConfig(call) {\n        this.configSelectionQueue.push(call);\n        this.callRefTimerRef();\n    }\n    enterIdle() {\n        this.resolvingLoadBalancer.destroy();\n        this.updateState(connectivity_state_1.ConnectivityState.IDLE);\n        this.currentPicker = new picker_1.QueuePicker(this.resolvingLoadBalancer);\n        if (this.idleTimer) {\n            clearTimeout(this.idleTimer);\n            this.idleTimer = null;\n        }\n        if (this.callRefTimer) {\n            clearInterval(this.callRefTimer);\n            this.callRefTimer = null;\n        }\n    }\n    startIdleTimeout(timeoutMs) {\n        var _a, _b;\n        this.idleTimer = setTimeout(() => {\n            if (this.callCount > 0) {\n                /* If there is currently a call, the channel will not go idle for a\n                 * period of at least idleTimeoutMs, so check again after that time.\n                 */\n                this.startIdleTimeout(this.idleTimeoutMs);\n                return;\n            }\n            const now = new Date();\n            const timeSinceLastActivity = now.valueOf() - this.lastActivityTimestamp.valueOf();\n            if (timeSinceLastActivity >= this.idleTimeoutMs) {\n                this.trace('Idle timer triggered after ' +\n                    this.idleTimeoutMs +\n                    'ms of inactivity');\n                this.enterIdle();\n            }\n            else {\n                /* Whenever the timer fires with the latest activity being too recent,\n                 * set the timer again for the time when the time since the last\n                 * activity is equal to the timeout. This should result in the timer\n                 * firing no more than once every idleTimeoutMs/2 on average. */\n                this.startIdleTimeout(this.idleTimeoutMs - timeSinceLastActivity);\n            }\n        }, timeoutMs);\n        (_b = (_a = this.idleTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    maybeStartIdleTimer() {\n        if (this.connectivityState !== connectivity_state_1.ConnectivityState.SHUTDOWN &&\n            !this.idleTimer) {\n            this.startIdleTimeout(this.idleTimeoutMs);\n        }\n    }\n    onCallStart() {\n        if (this.channelzEnabled) {\n            this.channelzInfoTracker.callTracker.addCallStarted();\n        }\n        this.callCount += 1;\n    }\n    onCallEnd(status) {\n        if (this.channelzEnabled) {\n            if (status.code === constants_1.Status.OK) {\n                this.channelzInfoTracker.callTracker.addCallSucceeded();\n            }\n            else {\n                this.channelzInfoTracker.callTracker.addCallFailed();\n            }\n        }\n        this.callCount -= 1;\n        this.lastActivityTimestamp = new Date();\n        this.maybeStartIdleTimer();\n    }\n    createLoadBalancingCall(callConfig, method, host, credentials, deadline) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createLoadBalancingCall [' + callNumber + '] method=\"' + method + '\"');\n        return new load_balancing_call_1.LoadBalancingCall(this, callConfig, method, host, credentials, deadline, callNumber);\n    }\n    createRetryingCall(callConfig, method, host, credentials, deadline) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createRetryingCall [' + callNumber + '] method=\"' + method + '\"');\n        return new retrying_call_1.RetryingCall(this, callConfig, method, host, credentials, deadline, callNumber, this.retryBufferTracker, RETRY_THROTTLER_MAP.get(this.getTarget()));\n    }\n    createInnerCall(callConfig, method, host, credentials, deadline) {\n        // Create a RetryingCall if retries are enabled\n        if (this.options['grpc.enable_retries'] === 0) {\n            return this.createLoadBalancingCall(callConfig, method, host, credentials, deadline);\n        }\n        else {\n            return this.createRetryingCall(callConfig, method, host, credentials, deadline);\n        }\n    }\n    createResolvingCall(method, deadline, host, parentCall, propagateFlags) {\n        const callNumber = (0, call_number_1.getNextCallNumber)();\n        this.trace('createResolvingCall [' +\n            callNumber +\n            '] method=\"' +\n            method +\n            '\", deadline=' +\n            (0, deadline_1.deadlineToString)(deadline));\n        const finalOptions = {\n            deadline: deadline,\n            flags: propagateFlags !== null && propagateFlags !== void 0 ? propagateFlags : constants_1.Propagate.DEFAULTS,\n            host: host !== null && host !== void 0 ? host : this.defaultAuthority,\n            parentCall: parentCall,\n        };\n        const call = new resolving_call_1.ResolvingCall(this, method, finalOptions, this.filterStackFactory.clone(), this.credentials._getCallCredentials(), callNumber);\n        this.onCallStart();\n        call.addStatusWatcher(status => {\n            this.onCallEnd(status);\n        });\n        return call;\n    }\n    close() {\n        this.resolvingLoadBalancer.destroy();\n        this.updateState(connectivity_state_1.ConnectivityState.SHUTDOWN);\n        this.currentPicker = new ShutdownPicker();\n        for (const call of this.configSelectionQueue) {\n            call.cancelWithStatus(constants_1.Status.UNAVAILABLE, 'Channel closed before call started');\n        }\n        this.configSelectionQueue = [];\n        for (const call of this.pickQueue) {\n            call.cancelWithStatus(constants_1.Status.UNAVAILABLE, 'Channel closed before call started');\n        }\n        this.pickQueue = [];\n        if (this.callRefTimer) {\n            clearInterval(this.callRefTimer);\n        }\n        if (this.idleTimer) {\n            clearTimeout(this.idleTimer);\n        }\n        if (this.channelzEnabled) {\n            (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n        }\n        this.subchannelPool.unrefUnusedSubchannels();\n    }\n    getTarget() {\n        return (0, uri_parser_1.uriToString)(this.target);\n    }\n    getConnectivityState(tryToConnect) {\n        const connectivityState = this.connectivityState;\n        if (tryToConnect) {\n            this.resolvingLoadBalancer.exitIdle();\n            this.lastActivityTimestamp = new Date();\n            this.maybeStartIdleTimer();\n        }\n        return connectivityState;\n    }\n    watchConnectivityState(currentState, deadline, callback) {\n        if (this.connectivityState === connectivity_state_1.ConnectivityState.SHUTDOWN) {\n            throw new Error('Channel has been shut down');\n        }\n        let timer = null;\n        if (deadline !== Infinity) {\n            const deadlineDate = deadline instanceof Date ? deadline : new Date(deadline);\n            const now = new Date();\n            if (deadline === -Infinity || deadlineDate <= now) {\n                process.nextTick(callback, new Error('Deadline passed without connectivity state change'));\n                return;\n            }\n            timer = setTimeout(() => {\n                this.removeConnectivityStateWatcher(watcherObject);\n                callback(new Error('Deadline passed without connectivity state change'));\n            }, deadlineDate.getTime() - now.getTime());\n        }\n        const watcherObject = {\n            currentState,\n            callback,\n            timer,\n        };\n        this.connectivityStateWatchers.push(watcherObject);\n    }\n    /**\n     * Get the channelz reference object for this channel. The returned value is\n     * garbage if channelz is disabled for this channel.\n     * @returns\n     */\n    getChannelzRef() {\n        return this.channelzRef;\n    }\n    createCall(method, deadline, host, parentCall, propagateFlags) {\n        if (typeof method !== 'string') {\n            throw new TypeError('Channel#createCall: method must be a string');\n        }\n        if (!(typeof deadline === 'number' || deadline instanceof Date)) {\n            throw new TypeError('Channel#createCall: deadline must be a number or Date');\n        }\n        if (this.connectivityState === connectivity_state_1.ConnectivityState.SHUTDOWN) {\n            throw new Error('Channel has been shut down');\n        }\n        return this.createResolvingCall(method, deadline, host, parentCall, propagateFlags);\n    }\n    getOptions() {\n        return this.options;\n    }\n}\nexports.InternalChannel = InternalChannel;\n//# sourceMappingURL=internal-channel.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChannelImplementation = void 0;\nconst channel_credentials_1 = require(\"./channel-credentials\");\nconst internal_channel_1 = require(\"./internal-channel\");\nclass ChannelImplementation {\n    constructor(target, credentials, options) {\n        if (typeof target !== 'string') {\n            throw new TypeError('Channel target must be a string');\n        }\n        if (!(credentials instanceof channel_credentials_1.ChannelCredentials)) {\n            throw new TypeError('Channel credentials must be a ChannelCredentials object');\n        }\n        if (options) {\n            if (typeof options !== 'object') {\n                throw new TypeError('Channel options must be an object');\n            }\n        }\n        this.internalChannel = new internal_channel_1.InternalChannel(target, credentials, options);\n    }\n    close() {\n        this.internalChannel.close();\n    }\n    getTarget() {\n        return this.internalChannel.getTarget();\n    }\n    getConnectivityState(tryToConnect) {\n        return this.internalChannel.getConnectivityState(tryToConnect);\n    }\n    watchConnectivityState(currentState, deadline, callback) {\n        this.internalChannel.watchConnectivityState(currentState, deadline, callback);\n    }\n    /**\n     * Get the channelz reference object for this channel. The returned value is\n     * garbage if channelz is disabled for this channel.\n     * @returns\n     */\n    getChannelzRef() {\n        return this.internalChannel.getChannelzRef();\n    }\n    createCall(method, deadline, host, parentCall, propagateFlags) {\n        if (typeof method !== 'string') {\n            throw new TypeError('Channel#createCall: method must be a string');\n        }\n        if (!(typeof deadline === 'number' || deadline instanceof Date)) {\n            throw new TypeError('Channel#createCall: deadline must be a number or Date');\n        }\n        return this.internalChannel.createCall(method, deadline, host, parentCall, propagateFlags);\n    }\n}\nexports.ChannelImplementation = ChannelImplementation;\n//# sourceMappingURL=channel.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerDuplexStreamImpl = exports.ServerWritableStreamImpl = exports.ServerReadableStreamImpl = exports.ServerUnaryCallImpl = void 0;\nexports.serverErrorToStatus = serverErrorToStatus;\nconst events_1 = require(\"events\");\nconst stream_1 = require(\"stream\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nfunction serverErrorToStatus(error, overrideTrailers) {\n    var _a;\n    const status = {\n        code: constants_1.Status.UNKNOWN,\n        details: 'message' in error ? error.message : 'Unknown Error',\n        metadata: (_a = overrideTrailers !== null && overrideTrailers !== void 0 ? overrideTrailers : error.metadata) !== null && _a !== void 0 ? _a : null,\n    };\n    if ('code' in error &&\n        typeof error.code === 'number' &&\n        Number.isInteger(error.code)) {\n        status.code = error.code;\n        if ('details' in error && typeof error.details === 'string') {\n            status.details = error.details;\n        }\n    }\n    return status;\n}\nclass ServerUnaryCallImpl extends events_1.EventEmitter {\n    constructor(path, call, metadata, request) {\n        super();\n        this.path = path;\n        this.call = call;\n        this.metadata = metadata;\n        this.request = request;\n        this.cancelled = false;\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.path;\n    }\n    getHost() {\n        return this.call.getHost();\n    }\n}\nexports.ServerUnaryCallImpl = ServerUnaryCallImpl;\nclass ServerReadableStreamImpl extends stream_1.Readable {\n    constructor(path, call, metadata) {\n        super({ objectMode: true });\n        this.path = path;\n        this.call = call;\n        this.metadata = metadata;\n        this.cancelled = false;\n    }\n    _read(size) {\n        this.call.startRead();\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.path;\n    }\n    getHost() {\n        return this.call.getHost();\n    }\n}\nexports.ServerReadableStreamImpl = ServerReadableStreamImpl;\nclass ServerWritableStreamImpl extends stream_1.Writable {\n    constructor(path, call, metadata, request) {\n        super({ objectMode: true });\n        this.path = path;\n        this.call = call;\n        this.metadata = metadata;\n        this.request = request;\n        this.pendingStatus = {\n            code: constants_1.Status.OK,\n            details: 'OK',\n        };\n        this.cancelled = false;\n        this.trailingMetadata = new metadata_1.Metadata();\n        this.on('error', err => {\n            this.pendingStatus = serverErrorToStatus(err);\n            this.end();\n        });\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.path;\n    }\n    getHost() {\n        return this.call.getHost();\n    }\n    _write(chunk, encoding, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback) {\n        this.call.sendMessage(chunk, callback);\n    }\n    _final(callback) {\n        var _a;\n        callback(null);\n        this.call.sendStatus(Object.assign(Object.assign({}, this.pendingStatus), { metadata: (_a = this.pendingStatus.metadata) !== null && _a !== void 0 ? _a : this.trailingMetadata }));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    end(metadata) {\n        if (metadata) {\n            this.trailingMetadata = metadata;\n        }\n        return super.end();\n    }\n}\nexports.ServerWritableStreamImpl = ServerWritableStreamImpl;\nclass ServerDuplexStreamImpl extends stream_1.Duplex {\n    constructor(path, call, metadata) {\n        super({ objectMode: true });\n        this.path = path;\n        this.call = call;\n        this.metadata = metadata;\n        this.pendingStatus = {\n            code: constants_1.Status.OK,\n            details: 'OK',\n        };\n        this.cancelled = false;\n        this.trailingMetadata = new metadata_1.Metadata();\n        this.on('error', err => {\n            this.pendingStatus = serverErrorToStatus(err);\n            this.end();\n        });\n    }\n    getPeer() {\n        return this.call.getPeer();\n    }\n    sendMetadata(responseMetadata) {\n        this.call.sendMetadata(responseMetadata);\n    }\n    getDeadline() {\n        return this.call.getDeadline();\n    }\n    getPath() {\n        return this.path;\n    }\n    getHost() {\n        return this.call.getHost();\n    }\n    _read(size) {\n        this.call.startRead();\n    }\n    _write(chunk, encoding, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback) {\n        this.call.sendMessage(chunk, callback);\n    }\n    _final(callback) {\n        var _a;\n        callback(null);\n        this.call.sendStatus(Object.assign(Object.assign({}, this.pendingStatus), { metadata: (_a = this.pendingStatus.metadata) !== null && _a !== void 0 ? _a : this.trailingMetadata }));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    end(metadata) {\n        if (metadata) {\n            this.trailingMetadata = metadata;\n        }\n        return super.end();\n    }\n}\nexports.ServerDuplexStreamImpl = ServerDuplexStreamImpl;\n//# sourceMappingURL=server-call.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerCredentials = void 0;\nexports.createCertificateProviderServerCredentials = createCertificateProviderServerCredentials;\nexports.createServerCredentialsWithInterceptors = createServerCredentialsWithInterceptors;\nconst tls_helpers_1 = require(\"./tls-helpers\");\nclass ServerCredentials {\n    constructor() {\n        this.watchers = new Set();\n        this.latestContextOptions = null;\n    }\n    _addWatcher(watcher) {\n        this.watchers.add(watcher);\n    }\n    _removeWatcher(watcher) {\n        this.watchers.delete(watcher);\n    }\n    getWatcherCount() {\n        return this.watchers.size;\n    }\n    updateSecureContextOptions(options) {\n        this.latestContextOptions = options;\n        for (const watcher of this.watchers) {\n            watcher(this.latestContextOptions);\n        }\n    }\n    _getSettings() {\n        return this.latestContextOptions;\n    }\n    _getInterceptors() {\n        return [];\n    }\n    static createInsecure() {\n        return new InsecureServerCredentials();\n    }\n    static createSsl(rootCerts, keyCertPairs, checkClientCertificate = false) {\n        var _a;\n        if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n            throw new TypeError('rootCerts must be null or a Buffer');\n        }\n        if (!Array.isArray(keyCertPairs)) {\n            throw new TypeError('keyCertPairs must be an array');\n        }\n        if (typeof checkClientCertificate !== 'boolean') {\n            throw new TypeError('checkClientCertificate must be a boolean');\n        }\n        const cert = [];\n        const key = [];\n        for (let i = 0; i < keyCertPairs.length; i++) {\n            const pair = keyCertPairs[i];\n            if (pair === null || typeof pair !== 'object') {\n                throw new TypeError(`keyCertPair[${i}] must be an object`);\n            }\n            if (!Buffer.isBuffer(pair.private_key)) {\n                throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n            }\n            if (!Buffer.isBuffer(pair.cert_chain)) {\n                throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n            }\n            cert.push(pair.cert_chain);\n            key.push(pair.private_key);\n        }\n        return new SecureServerCredentials({\n            ca: (_a = rootCerts !== null && rootCerts !== void 0 ? rootCerts : (0, tls_helpers_1.getDefaultRootsData)()) !== null && _a !== void 0 ? _a : undefined,\n            cert,\n            key,\n            requestCert: checkClientCertificate,\n            ciphers: tls_helpers_1.CIPHER_SUITES,\n        });\n    }\n}\nexports.ServerCredentials = ServerCredentials;\nclass InsecureServerCredentials extends ServerCredentials {\n    _isSecure() {\n        return false;\n    }\n    _getSettings() {\n        return null;\n    }\n    _equals(other) {\n        return other instanceof InsecureServerCredentials;\n    }\n}\nclass SecureServerCredentials extends ServerCredentials {\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    _isSecure() {\n        return true;\n    }\n    _getSettings() {\n        return this.options;\n    }\n    /**\n     * Checks equality by checking the options that are actually set by\n     * createSsl.\n     * @param other\n     * @returns\n     */\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (!(other instanceof SecureServerCredentials)) {\n            return false;\n        }\n        // options.ca equality check\n        if (Buffer.isBuffer(this.options.ca) && Buffer.isBuffer(other.options.ca)) {\n            if (!this.options.ca.equals(other.options.ca)) {\n                return false;\n            }\n        }\n        else {\n            if (this.options.ca !== other.options.ca) {\n                return false;\n            }\n        }\n        // options.cert equality check\n        if (Array.isArray(this.options.cert) && Array.isArray(other.options.cert)) {\n            if (this.options.cert.length !== other.options.cert.length) {\n                return false;\n            }\n            for (let i = 0; i < this.options.cert.length; i++) {\n                const thisCert = this.options.cert[i];\n                const otherCert = other.options.cert[i];\n                if (Buffer.isBuffer(thisCert) && Buffer.isBuffer(otherCert)) {\n                    if (!thisCert.equals(otherCert)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (thisCert !== otherCert) {\n                        return false;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.options.cert !== other.options.cert) {\n                return false;\n            }\n        }\n        // options.key equality check\n        if (Array.isArray(this.options.key) && Array.isArray(other.options.key)) {\n            if (this.options.key.length !== other.options.key.length) {\n                return false;\n            }\n            for (let i = 0; i < this.options.key.length; i++) {\n                const thisKey = this.options.key[i];\n                const otherKey = other.options.key[i];\n                if (Buffer.isBuffer(thisKey) && Buffer.isBuffer(otherKey)) {\n                    if (!thisKey.equals(otherKey)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (thisKey !== otherKey) {\n                        return false;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.options.key !== other.options.key) {\n                return false;\n            }\n        }\n        // options.requestCert equality check\n        if (this.options.requestCert !== other.options.requestCert) {\n            return false;\n        }\n        /* ciphers is derived from a value that is constant for the process, so no\n         * equality check is needed. */\n        return true;\n    }\n}\nclass CertificateProviderServerCredentials extends ServerCredentials {\n    constructor(identityCertificateProvider, caCertificateProvider, requireClientCertificate) {\n        super();\n        this.identityCertificateProvider = identityCertificateProvider;\n        this.caCertificateProvider = caCertificateProvider;\n        this.requireClientCertificate = requireClientCertificate;\n        this.latestCaUpdate = null;\n        this.latestIdentityUpdate = null;\n        this.caCertificateUpdateListener = this.handleCaCertificateUpdate.bind(this);\n        this.identityCertificateUpdateListener = this.handleIdentityCertitificateUpdate.bind(this);\n    }\n    _addWatcher(watcher) {\n        var _a;\n        if (this.getWatcherCount() === 0) {\n            (_a = this.caCertificateProvider) === null || _a === void 0 ? void 0 : _a.addCaCertificateListener(this.caCertificateUpdateListener);\n            this.identityCertificateProvider.addIdentityCertificateListener(this.identityCertificateUpdateListener);\n        }\n        super._addWatcher(watcher);\n    }\n    _removeWatcher(watcher) {\n        var _a;\n        super._removeWatcher(watcher);\n        if (this.getWatcherCount() === 0) {\n            (_a = this.caCertificateProvider) === null || _a === void 0 ? void 0 : _a.removeCaCertificateListener(this.caCertificateUpdateListener);\n            this.identityCertificateProvider.removeIdentityCertificateListener(this.identityCertificateUpdateListener);\n        }\n    }\n    _isSecure() {\n        return true;\n    }\n    _equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (!(other instanceof CertificateProviderServerCredentials)) {\n            return false;\n        }\n        return (this.caCertificateProvider === other.caCertificateProvider &&\n            this.identityCertificateProvider === other.identityCertificateProvider &&\n            this.requireClientCertificate === other.requireClientCertificate);\n    }\n    calculateSecureContextOptions() {\n        var _a;\n        if (this.latestIdentityUpdate === null) {\n            return null;\n        }\n        if (this.caCertificateProvider !== null && this.latestCaUpdate === null) {\n            return null;\n        }\n        return {\n            ca: (_a = this.latestCaUpdate) === null || _a === void 0 ? void 0 : _a.caCertificate,\n            cert: this.latestIdentityUpdate.certificate,\n            key: this.latestIdentityUpdate.privateKey,\n            requestCert: this.latestIdentityUpdate !== null,\n            rejectUnauthorized: this.requireClientCertificate\n        };\n    }\n    finalizeUpdate() {\n        this.updateSecureContextOptions(this.calculateSecureContextOptions());\n    }\n    handleCaCertificateUpdate(update) {\n        this.latestCaUpdate = update;\n        this.finalizeUpdate();\n    }\n    handleIdentityCertitificateUpdate(update) {\n        this.latestIdentityUpdate = update;\n        this.finalizeUpdate();\n    }\n}\nfunction createCertificateProviderServerCredentials(caCertificateProvider, identityCertificateProvider, requireClientCertificate) {\n    return new CertificateProviderServerCredentials(caCertificateProvider, identityCertificateProvider, requireClientCertificate);\n}\nclass InterceptorServerCredentials extends ServerCredentials {\n    constructor(childCredentials, interceptors) {\n        super();\n        this.childCredentials = childCredentials;\n        this.interceptors = interceptors;\n    }\n    _isSecure() {\n        return this.childCredentials._isSecure();\n    }\n    _equals(other) {\n        if (!(other instanceof InterceptorServerCredentials)) {\n            return false;\n        }\n        if (!(this.childCredentials._equals(other.childCredentials))) {\n            return false;\n        }\n        if (this.interceptors.length !== other.interceptors.length) {\n            return false;\n        }\n        for (let i = 0; i < this.interceptors.length; i++) {\n            if (this.interceptors[i] !== other.interceptors[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    _getInterceptors() {\n        return this.interceptors;\n    }\n    _addWatcher(watcher) {\n        this.childCredentials._addWatcher(watcher);\n    }\n    _removeWatcher(watcher) {\n        this.childCredentials._removeWatcher(watcher);\n    }\n}\nfunction createServerCredentialsWithInterceptors(credentials, interceptors) {\n    return new InterceptorServerCredentials(credentials, interceptors);\n}\n//# sourceMappingURL=server-credentials.js.map",
    "\"use strict\";\n/*\n * Copyright 2024 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseServerInterceptingCall = exports.ServerInterceptingCall = exports.ResponderBuilder = exports.ServerListenerBuilder = void 0;\nexports.isInterceptingServerListener = isInterceptingServerListener;\nexports.getServerInterceptingCall = getServerInterceptingCall;\nconst metadata_1 = require(\"./metadata\");\nconst constants_1 = require(\"./constants\");\nconst http2 = require(\"http2\");\nconst error_1 = require(\"./error\");\nconst zlib = require(\"zlib\");\nconst stream_decoder_1 = require(\"./stream-decoder\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'server_call';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nclass ServerListenerBuilder {\n    constructor() {\n        this.metadata = undefined;\n        this.message = undefined;\n        this.halfClose = undefined;\n        this.cancel = undefined;\n    }\n    withOnReceiveMetadata(onReceiveMetadata) {\n        this.metadata = onReceiveMetadata;\n        return this;\n    }\n    withOnReceiveMessage(onReceiveMessage) {\n        this.message = onReceiveMessage;\n        return this;\n    }\n    withOnReceiveHalfClose(onReceiveHalfClose) {\n        this.halfClose = onReceiveHalfClose;\n        return this;\n    }\n    withOnCancel(onCancel) {\n        this.cancel = onCancel;\n        return this;\n    }\n    build() {\n        return {\n            onReceiveMetadata: this.metadata,\n            onReceiveMessage: this.message,\n            onReceiveHalfClose: this.halfClose,\n            onCancel: this.cancel,\n        };\n    }\n}\nexports.ServerListenerBuilder = ServerListenerBuilder;\nfunction isInterceptingServerListener(listener) {\n    return (listener.onReceiveMetadata !== undefined &&\n        listener.onReceiveMetadata.length === 1);\n}\nclass InterceptingServerListenerImpl {\n    constructor(listener, nextListener) {\n        this.listener = listener;\n        this.nextListener = nextListener;\n        /**\n         * Once the call is cancelled, ignore all other events.\n         */\n        this.cancelled = false;\n        this.processingMetadata = false;\n        this.hasPendingMessage = false;\n        this.pendingMessage = null;\n        this.processingMessage = false;\n        this.hasPendingHalfClose = false;\n    }\n    processPendingMessage() {\n        if (this.hasPendingMessage) {\n            this.nextListener.onReceiveMessage(this.pendingMessage);\n            this.pendingMessage = null;\n            this.hasPendingMessage = false;\n        }\n    }\n    processPendingHalfClose() {\n        if (this.hasPendingHalfClose) {\n            this.nextListener.onReceiveHalfClose();\n            this.hasPendingHalfClose = false;\n        }\n    }\n    onReceiveMetadata(metadata) {\n        if (this.cancelled) {\n            return;\n        }\n        this.processingMetadata = true;\n        this.listener.onReceiveMetadata(metadata, interceptedMetadata => {\n            this.processingMetadata = false;\n            if (this.cancelled) {\n                return;\n            }\n            this.nextListener.onReceiveMetadata(interceptedMetadata);\n            this.processPendingMessage();\n            this.processPendingHalfClose();\n        });\n    }\n    onReceiveMessage(message) {\n        if (this.cancelled) {\n            return;\n        }\n        this.processingMessage = true;\n        this.listener.onReceiveMessage(message, msg => {\n            this.processingMessage = false;\n            if (this.cancelled) {\n                return;\n            }\n            if (this.processingMetadata) {\n                this.pendingMessage = msg;\n                this.hasPendingMessage = true;\n            }\n            else {\n                this.nextListener.onReceiveMessage(msg);\n                this.processPendingHalfClose();\n            }\n        });\n    }\n    onReceiveHalfClose() {\n        if (this.cancelled) {\n            return;\n        }\n        this.listener.onReceiveHalfClose(() => {\n            if (this.cancelled) {\n                return;\n            }\n            if (this.processingMetadata || this.processingMessage) {\n                this.hasPendingHalfClose = true;\n            }\n            else {\n                this.nextListener.onReceiveHalfClose();\n            }\n        });\n    }\n    onCancel() {\n        this.cancelled = true;\n        this.listener.onCancel();\n        this.nextListener.onCancel();\n    }\n}\nclass ResponderBuilder {\n    constructor() {\n        this.start = undefined;\n        this.metadata = undefined;\n        this.message = undefined;\n        this.status = undefined;\n    }\n    withStart(start) {\n        this.start = start;\n        return this;\n    }\n    withSendMetadata(sendMetadata) {\n        this.metadata = sendMetadata;\n        return this;\n    }\n    withSendMessage(sendMessage) {\n        this.message = sendMessage;\n        return this;\n    }\n    withSendStatus(sendStatus) {\n        this.status = sendStatus;\n        return this;\n    }\n    build() {\n        return {\n            start: this.start,\n            sendMetadata: this.metadata,\n            sendMessage: this.message,\n            sendStatus: this.status,\n        };\n    }\n}\nexports.ResponderBuilder = ResponderBuilder;\nconst defaultServerListener = {\n    onReceiveMetadata: (metadata, next) => {\n        next(metadata);\n    },\n    onReceiveMessage: (message, next) => {\n        next(message);\n    },\n    onReceiveHalfClose: next => {\n        next();\n    },\n    onCancel: () => { },\n};\nconst defaultResponder = {\n    start: next => {\n        next();\n    },\n    sendMetadata: (metadata, next) => {\n        next(metadata);\n    },\n    sendMessage: (message, next) => {\n        next(message);\n    },\n    sendStatus: (status, next) => {\n        next(status);\n    },\n};\nclass ServerInterceptingCall {\n    constructor(nextCall, responder) {\n        var _a, _b, _c, _d;\n        this.nextCall = nextCall;\n        this.processingMetadata = false;\n        this.processingMessage = false;\n        this.pendingMessage = null;\n        this.pendingMessageCallback = null;\n        this.pendingStatus = null;\n        this.responder = {\n            start: (_a = responder === null || responder === void 0 ? void 0 : responder.start) !== null && _a !== void 0 ? _a : defaultResponder.start,\n            sendMetadata: (_b = responder === null || responder === void 0 ? void 0 : responder.sendMetadata) !== null && _b !== void 0 ? _b : defaultResponder.sendMetadata,\n            sendMessage: (_c = responder === null || responder === void 0 ? void 0 : responder.sendMessage) !== null && _c !== void 0 ? _c : defaultResponder.sendMessage,\n            sendStatus: (_d = responder === null || responder === void 0 ? void 0 : responder.sendStatus) !== null && _d !== void 0 ? _d : defaultResponder.sendStatus,\n        };\n    }\n    processPendingMessage() {\n        if (this.pendingMessageCallback) {\n            this.nextCall.sendMessage(this.pendingMessage, this.pendingMessageCallback);\n            this.pendingMessage = null;\n            this.pendingMessageCallback = null;\n        }\n    }\n    processPendingStatus() {\n        if (this.pendingStatus) {\n            this.nextCall.sendStatus(this.pendingStatus);\n            this.pendingStatus = null;\n        }\n    }\n    start(listener) {\n        this.responder.start(interceptedListener => {\n            var _a, _b, _c, _d;\n            const fullInterceptedListener = {\n                onReceiveMetadata: (_a = interceptedListener === null || interceptedListener === void 0 ? void 0 : interceptedListener.onReceiveMetadata) !== null && _a !== void 0 ? _a : defaultServerListener.onReceiveMetadata,\n                onReceiveMessage: (_b = interceptedListener === null || interceptedListener === void 0 ? void 0 : interceptedListener.onReceiveMessage) !== null && _b !== void 0 ? _b : defaultServerListener.onReceiveMessage,\n                onReceiveHalfClose: (_c = interceptedListener === null || interceptedListener === void 0 ? void 0 : interceptedListener.onReceiveHalfClose) !== null && _c !== void 0 ? _c : defaultServerListener.onReceiveHalfClose,\n                onCancel: (_d = interceptedListener === null || interceptedListener === void 0 ? void 0 : interceptedListener.onCancel) !== null && _d !== void 0 ? _d : defaultServerListener.onCancel,\n            };\n            const finalInterceptingListener = new InterceptingServerListenerImpl(fullInterceptedListener, listener);\n            this.nextCall.start(finalInterceptingListener);\n        });\n    }\n    sendMetadata(metadata) {\n        this.processingMetadata = true;\n        this.responder.sendMetadata(metadata, interceptedMetadata => {\n            this.processingMetadata = false;\n            this.nextCall.sendMetadata(interceptedMetadata);\n            this.processPendingMessage();\n            this.processPendingStatus();\n        });\n    }\n    sendMessage(message, callback) {\n        this.processingMessage = true;\n        this.responder.sendMessage(message, interceptedMessage => {\n            this.processingMessage = false;\n            if (this.processingMetadata) {\n                this.pendingMessage = interceptedMessage;\n                this.pendingMessageCallback = callback;\n            }\n            else {\n                this.nextCall.sendMessage(interceptedMessage, callback);\n            }\n        });\n    }\n    sendStatus(status) {\n        this.responder.sendStatus(status, interceptedStatus => {\n            if (this.processingMetadata || this.processingMessage) {\n                this.pendingStatus = interceptedStatus;\n            }\n            else {\n                this.nextCall.sendStatus(interceptedStatus);\n            }\n        });\n    }\n    startRead() {\n        this.nextCall.startRead();\n    }\n    getPeer() {\n        return this.nextCall.getPeer();\n    }\n    getDeadline() {\n        return this.nextCall.getDeadline();\n    }\n    getHost() {\n        return this.nextCall.getHost();\n    }\n}\nexports.ServerInterceptingCall = ServerInterceptingCall;\nconst GRPC_ACCEPT_ENCODING_HEADER = 'grpc-accept-encoding';\nconst GRPC_ENCODING_HEADER = 'grpc-encoding';\nconst GRPC_MESSAGE_HEADER = 'grpc-message';\nconst GRPC_STATUS_HEADER = 'grpc-status';\nconst GRPC_TIMEOUT_HEADER = 'grpc-timeout';\nconst DEADLINE_REGEX = /(\\d{1,8})\\s*([HMSmun])/;\nconst deadlineUnitsToMs = {\n    H: 3600000,\n    M: 60000,\n    S: 1000,\n    m: 1,\n    u: 0.001,\n    n: 0.000001,\n};\nconst defaultCompressionHeaders = {\n    // TODO(cjihrig): Remove these encoding headers from the default response\n    // once compression is integrated.\n    [GRPC_ACCEPT_ENCODING_HEADER]: 'identity,deflate,gzip',\n    [GRPC_ENCODING_HEADER]: 'identity',\n};\nconst defaultResponseHeaders = {\n    [http2.constants.HTTP2_HEADER_STATUS]: http2.constants.HTTP_STATUS_OK,\n    [http2.constants.HTTP2_HEADER_CONTENT_TYPE]: 'application/grpc+proto',\n};\nconst defaultResponseOptions = {\n    waitForTrailers: true,\n};\nclass BaseServerInterceptingCall {\n    constructor(stream, headers, callEventTracker, handler, options) {\n        var _a;\n        this.stream = stream;\n        this.callEventTracker = callEventTracker;\n        this.handler = handler;\n        this.listener = null;\n        this.deadlineTimer = null;\n        this.deadline = Infinity;\n        this.maxSendMessageSize = constants_1.DEFAULT_MAX_SEND_MESSAGE_LENGTH;\n        this.maxReceiveMessageSize = constants_1.DEFAULT_MAX_RECEIVE_MESSAGE_LENGTH;\n        this.cancelled = false;\n        this.metadataSent = false;\n        this.wantTrailers = false;\n        this.cancelNotified = false;\n        this.incomingEncoding = 'identity';\n        this.readQueue = [];\n        this.isReadPending = false;\n        this.receivedHalfClose = false;\n        this.streamEnded = false;\n        this.stream.once('error', (err) => {\n            /* We need an error handler to avoid uncaught error event exceptions, but\n             * there is nothing we can reasonably do here. Any error event should\n             * have a corresponding close event, which handles emitting the cancelled\n             * event. And the stream is now in a bad state, so we can't reasonably\n             * expect to be able to send an error over it. */\n        });\n        this.stream.once('close', () => {\n            var _a;\n            trace('Request to method ' +\n                ((_a = this.handler) === null || _a === void 0 ? void 0 : _a.path) +\n                ' stream closed with rstCode ' +\n                this.stream.rstCode);\n            if (this.callEventTracker && !this.streamEnded) {\n                this.streamEnded = true;\n                this.callEventTracker.onStreamEnd(false);\n                this.callEventTracker.onCallEnd({\n                    code: constants_1.Status.CANCELLED,\n                    details: 'Stream closed before sending status',\n                    metadata: null,\n                });\n            }\n            this.notifyOnCancel();\n        });\n        this.stream.on('data', (data) => {\n            this.handleDataFrame(data);\n        });\n        this.stream.pause();\n        this.stream.on('end', () => {\n            this.handleEndEvent();\n        });\n        if ('grpc.max_send_message_length' in options) {\n            this.maxSendMessageSize = options['grpc.max_send_message_length'];\n        }\n        if ('grpc.max_receive_message_length' in options) {\n            this.maxReceiveMessageSize = options['grpc.max_receive_message_length'];\n        }\n        this.host = (_a = headers[':authority']) !== null && _a !== void 0 ? _a : headers.host;\n        this.decoder = new stream_decoder_1.StreamDecoder(this.maxReceiveMessageSize);\n        const metadata = metadata_1.Metadata.fromHttp2Headers(headers);\n        if (logging.isTracerEnabled(TRACER_NAME)) {\n            trace('Request to ' +\n                this.handler.path +\n                ' received headers ' +\n                JSON.stringify(metadata.toJSON()));\n        }\n        const timeoutHeader = metadata.get(GRPC_TIMEOUT_HEADER);\n        if (timeoutHeader.length > 0) {\n            this.handleTimeoutHeader(timeoutHeader[0]);\n        }\n        const encodingHeader = metadata.get(GRPC_ENCODING_HEADER);\n        if (encodingHeader.length > 0) {\n            this.incomingEncoding = encodingHeader[0];\n        }\n        // Remove several headers that should not be propagated to the application\n        metadata.remove(GRPC_TIMEOUT_HEADER);\n        metadata.remove(GRPC_ENCODING_HEADER);\n        metadata.remove(GRPC_ACCEPT_ENCODING_HEADER);\n        metadata.remove(http2.constants.HTTP2_HEADER_ACCEPT_ENCODING);\n        metadata.remove(http2.constants.HTTP2_HEADER_TE);\n        metadata.remove(http2.constants.HTTP2_HEADER_CONTENT_TYPE);\n        this.metadata = metadata;\n    }\n    handleTimeoutHeader(timeoutHeader) {\n        const match = timeoutHeader.toString().match(DEADLINE_REGEX);\n        if (match === null) {\n            const status = {\n                code: constants_1.Status.INTERNAL,\n                details: `Invalid ${GRPC_TIMEOUT_HEADER} value \"${timeoutHeader}\"`,\n                metadata: null,\n            };\n            // Wait for the constructor to complete before sending the error.\n            process.nextTick(() => {\n                this.sendStatus(status);\n            });\n            return;\n        }\n        const timeout = (+match[1] * deadlineUnitsToMs[match[2]]) | 0;\n        const now = new Date();\n        this.deadline = now.setMilliseconds(now.getMilliseconds() + timeout);\n        this.deadlineTimer = setTimeout(() => {\n            const status = {\n                code: constants_1.Status.DEADLINE_EXCEEDED,\n                details: 'Deadline exceeded',\n                metadata: null,\n            };\n            this.sendStatus(status);\n        }, timeout);\n    }\n    checkCancelled() {\n        /* In some cases the stream can become destroyed before the close event\n         * fires. That creates a race condition that this check works around */\n        if (!this.cancelled && (this.stream.destroyed || this.stream.closed)) {\n            this.notifyOnCancel();\n            this.cancelled = true;\n        }\n        return this.cancelled;\n    }\n    notifyOnCancel() {\n        if (this.cancelNotified) {\n            return;\n        }\n        this.cancelNotified = true;\n        this.cancelled = true;\n        process.nextTick(() => {\n            var _a;\n            (_a = this.listener) === null || _a === void 0 ? void 0 : _a.onCancel();\n        });\n        if (this.deadlineTimer) {\n            clearTimeout(this.deadlineTimer);\n        }\n        // Flush incoming data frames\n        this.stream.resume();\n    }\n    /**\n     * A server handler can start sending messages without explicitly sending\n     * metadata. In that case, we need to send headers before sending any\n     * messages. This function does that if necessary.\n     */\n    maybeSendMetadata() {\n        if (!this.metadataSent) {\n            this.sendMetadata(new metadata_1.Metadata());\n        }\n    }\n    /**\n     * Serialize a message to a length-delimited byte string.\n     * @param value\n     * @returns\n     */\n    serializeMessage(value) {\n        const messageBuffer = this.handler.serialize(value);\n        const byteLength = messageBuffer.byteLength;\n        const output = Buffer.allocUnsafe(byteLength + 5);\n        /* Note: response compression is currently not supported, so this\n         * compressed bit is always 0. */\n        output.writeUInt8(0, 0);\n        output.writeUInt32BE(byteLength, 1);\n        messageBuffer.copy(output, 5);\n        return output;\n    }\n    decompressMessage(message, encoding) {\n        const messageContents = message.subarray(5);\n        if (encoding === 'identity') {\n            return messageContents;\n        }\n        else if (encoding === 'deflate' || encoding === 'gzip') {\n            let decompresser;\n            if (encoding === 'deflate') {\n                decompresser = zlib.createInflate();\n            }\n            else {\n                decompresser = zlib.createGunzip();\n            }\n            return new Promise((resolve, reject) => {\n                let totalLength = 0;\n                const messageParts = [];\n                decompresser.on('data', (chunk) => {\n                    messageParts.push(chunk);\n                    totalLength += chunk.byteLength;\n                    if (this.maxReceiveMessageSize !== -1 && totalLength > this.maxReceiveMessageSize) {\n                        decompresser.destroy();\n                        reject({\n                            code: constants_1.Status.RESOURCE_EXHAUSTED,\n                            details: `Received message that decompresses to a size larger than ${this.maxReceiveMessageSize}`\n                        });\n                    }\n                });\n                decompresser.on('end', () => {\n                    resolve(Buffer.concat(messageParts));\n                });\n                decompresser.write(messageContents);\n                decompresser.end();\n            });\n        }\n        else {\n            return Promise.reject({\n                code: constants_1.Status.UNIMPLEMENTED,\n                details: `Received message compressed with unsupported encoding \"${encoding}\"`,\n            });\n        }\n    }\n    async decompressAndMaybePush(queueEntry) {\n        if (queueEntry.type !== 'COMPRESSED') {\n            throw new Error(`Invalid queue entry type: ${queueEntry.type}`);\n        }\n        const compressed = queueEntry.compressedMessage.readUInt8(0) === 1;\n        const compressedMessageEncoding = compressed\n            ? this.incomingEncoding\n            : 'identity';\n        let decompressedMessage;\n        try {\n            decompressedMessage = await this.decompressMessage(queueEntry.compressedMessage, compressedMessageEncoding);\n        }\n        catch (err) {\n            this.sendStatus(err);\n            return;\n        }\n        try {\n            queueEntry.parsedMessage = this.handler.deserialize(decompressedMessage);\n        }\n        catch (err) {\n            this.sendStatus({\n                code: constants_1.Status.INTERNAL,\n                details: `Error deserializing request: ${err.message}`,\n            });\n            return;\n        }\n        queueEntry.type = 'READABLE';\n        this.maybePushNextMessage();\n    }\n    maybePushNextMessage() {\n        if (this.listener &&\n            this.isReadPending &&\n            this.readQueue.length > 0 &&\n            this.readQueue[0].type !== 'COMPRESSED') {\n            this.isReadPending = false;\n            const nextQueueEntry = this.readQueue.shift();\n            if (nextQueueEntry.type === 'READABLE') {\n                this.listener.onReceiveMessage(nextQueueEntry.parsedMessage);\n            }\n            else {\n                // nextQueueEntry.type === 'HALF_CLOSE'\n                this.listener.onReceiveHalfClose();\n            }\n        }\n    }\n    handleDataFrame(data) {\n        var _a;\n        if (this.checkCancelled()) {\n            return;\n        }\n        trace('Request to ' +\n            this.handler.path +\n            ' received data frame of size ' +\n            data.length);\n        let rawMessages;\n        try {\n            rawMessages = this.decoder.write(data);\n        }\n        catch (e) {\n            this.sendStatus({ code: constants_1.Status.RESOURCE_EXHAUSTED, details: e.message });\n            return;\n        }\n        for (const messageBytes of rawMessages) {\n            this.stream.pause();\n            const queueEntry = {\n                type: 'COMPRESSED',\n                compressedMessage: messageBytes,\n                parsedMessage: null,\n            };\n            this.readQueue.push(queueEntry);\n            this.decompressAndMaybePush(queueEntry);\n            (_a = this.callEventTracker) === null || _a === void 0 ? void 0 : _a.addMessageReceived();\n        }\n    }\n    handleEndEvent() {\n        this.readQueue.push({\n            type: 'HALF_CLOSE',\n            compressedMessage: null,\n            parsedMessage: null,\n        });\n        this.receivedHalfClose = true;\n        this.maybePushNextMessage();\n    }\n    start(listener) {\n        trace('Request to ' + this.handler.path + ' start called');\n        if (this.checkCancelled()) {\n            return;\n        }\n        this.listener = listener;\n        listener.onReceiveMetadata(this.metadata);\n    }\n    sendMetadata(metadata) {\n        if (this.checkCancelled()) {\n            return;\n        }\n        if (this.metadataSent) {\n            return;\n        }\n        this.metadataSent = true;\n        const custom = metadata ? metadata.toHttp2Headers() : null;\n        const headers = Object.assign(Object.assign(Object.assign({}, defaultResponseHeaders), defaultCompressionHeaders), custom);\n        this.stream.respond(headers, defaultResponseOptions);\n    }\n    sendMessage(message, callback) {\n        if (this.checkCancelled()) {\n            return;\n        }\n        let response;\n        try {\n            response = this.serializeMessage(message);\n        }\n        catch (e) {\n            this.sendStatus({\n                code: constants_1.Status.INTERNAL,\n                details: `Error serializing response: ${(0, error_1.getErrorMessage)(e)}`,\n                metadata: null,\n            });\n            return;\n        }\n        if (this.maxSendMessageSize !== -1 &&\n            response.length - 5 > this.maxSendMessageSize) {\n            this.sendStatus({\n                code: constants_1.Status.RESOURCE_EXHAUSTED,\n                details: `Sent message larger than max (${response.length} vs. ${this.maxSendMessageSize})`,\n                metadata: null,\n            });\n            return;\n        }\n        this.maybeSendMetadata();\n        trace('Request to ' +\n            this.handler.path +\n            ' sent data frame of size ' +\n            response.length);\n        this.stream.write(response, error => {\n            var _a;\n            if (error) {\n                this.sendStatus({\n                    code: constants_1.Status.INTERNAL,\n                    details: `Error writing message: ${(0, error_1.getErrorMessage)(error)}`,\n                    metadata: null,\n                });\n                return;\n            }\n            (_a = this.callEventTracker) === null || _a === void 0 ? void 0 : _a.addMessageSent();\n            callback();\n        });\n    }\n    sendStatus(status) {\n        var _a, _b;\n        if (this.checkCancelled()) {\n            return;\n        }\n        trace('Request to method ' +\n            ((_a = this.handler) === null || _a === void 0 ? void 0 : _a.path) +\n            ' ended with status code: ' +\n            constants_1.Status[status.code] +\n            ' details: ' +\n            status.details);\n        if (this.metadataSent) {\n            if (!this.wantTrailers) {\n                this.wantTrailers = true;\n                this.stream.once('wantTrailers', () => {\n                    var _a;\n                    if (this.callEventTracker && !this.streamEnded) {\n                        this.streamEnded = true;\n                        this.callEventTracker.onStreamEnd(true);\n                        this.callEventTracker.onCallEnd(status);\n                    }\n                    const trailersToSend = Object.assign({ [GRPC_STATUS_HEADER]: status.code, [GRPC_MESSAGE_HEADER]: encodeURI(status.details) }, (_a = status.metadata) === null || _a === void 0 ? void 0 : _a.toHttp2Headers());\n                    this.stream.sendTrailers(trailersToSend);\n                    this.notifyOnCancel();\n                });\n                this.stream.end();\n            }\n            else {\n                this.notifyOnCancel();\n            }\n        }\n        else {\n            if (this.callEventTracker && !this.streamEnded) {\n                this.streamEnded = true;\n                this.callEventTracker.onStreamEnd(true);\n                this.callEventTracker.onCallEnd(status);\n            }\n            // Trailers-only response\n            const trailersToSend = Object.assign(Object.assign({ [GRPC_STATUS_HEADER]: status.code, [GRPC_MESSAGE_HEADER]: encodeURI(status.details) }, defaultResponseHeaders), (_b = status.metadata) === null || _b === void 0 ? void 0 : _b.toHttp2Headers());\n            this.stream.respond(trailersToSend, { endStream: true });\n            this.notifyOnCancel();\n        }\n    }\n    startRead() {\n        trace('Request to ' + this.handler.path + ' startRead called');\n        if (this.checkCancelled()) {\n            return;\n        }\n        this.isReadPending = true;\n        if (this.readQueue.length === 0) {\n            if (!this.receivedHalfClose) {\n                this.stream.resume();\n            }\n        }\n        else {\n            this.maybePushNextMessage();\n        }\n    }\n    getPeer() {\n        var _a;\n        const socket = (_a = this.stream.session) === null || _a === void 0 ? void 0 : _a.socket;\n        if (socket === null || socket === void 0 ? void 0 : socket.remoteAddress) {\n            if (socket.remotePort) {\n                return `${socket.remoteAddress}:${socket.remotePort}`;\n            }\n            else {\n                return socket.remoteAddress;\n            }\n        }\n        else {\n            return 'unknown';\n        }\n    }\n    getDeadline() {\n        return this.deadline;\n    }\n    getHost() {\n        return this.host;\n    }\n}\nexports.BaseServerInterceptingCall = BaseServerInterceptingCall;\nfunction getServerInterceptingCall(interceptors, stream, headers, callEventTracker, handler, options) {\n    const methodDefinition = {\n        path: handler.path,\n        requestStream: handler.type === 'clientStream' || handler.type === 'bidi',\n        responseStream: handler.type === 'serverStream' || handler.type === 'bidi',\n        requestDeserialize: handler.deserialize,\n        responseSerialize: handler.serialize,\n    };\n    const baseCall = new BaseServerInterceptingCall(stream, headers, callEventTracker, handler, options);\n    return interceptors.reduce((call, interceptor) => {\n        return interceptor(methodDefinition, call);\n    }, baseCall);\n}\n//# sourceMappingURL=server-interceptors.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for (var i = 0; i < initializers.length; i++) {\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    }\n    return useValue ? value : void 0;\n};\nvar __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for (var i = decorators.length - 1; i >= 0; i--) {\n        var context = {};\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        }\n        else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = void 0;\nconst http2 = require(\"http2\");\nconst util = require(\"util\");\nconst constants_1 = require(\"./constants\");\nconst server_call_1 = require(\"./server-call\");\nconst server_credentials_1 = require(\"./server-credentials\");\nconst resolver_1 = require(\"./resolver\");\nconst logging = require(\"./logging\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst channelz_1 = require(\"./channelz\");\nconst server_interceptors_1 = require(\"./server-interceptors\");\nconst UNLIMITED_CONNECTION_AGE_MS = ~(1 << 31);\nconst KEEPALIVE_MAX_TIME_MS = ~(1 << 31);\nconst KEEPALIVE_TIMEOUT_MS = 20000;\nconst MAX_CONNECTION_IDLE_MS = ~(1 << 31);\nconst { HTTP2_HEADER_PATH } = http2.constants;\nconst TRACER_NAME = 'server';\nconst kMaxAge = Buffer.from('max_age');\nfunction noop() { }\n/**\n * Decorator to wrap a class method with util.deprecate\n * @param message The message to output if the deprecated method is called\n * @returns\n */\nfunction deprecate(message) {\n    return function (target, context) {\n        return util.deprecate(target, message);\n    };\n}\nfunction getUnimplementedStatusResponse(methodName) {\n    return {\n        code: constants_1.Status.UNIMPLEMENTED,\n        details: `The server does not implement the method ${methodName}`,\n    };\n}\nfunction getDefaultHandler(handlerType, methodName) {\n    const unimplementedStatusResponse = getUnimplementedStatusResponse(methodName);\n    switch (handlerType) {\n        case 'unary':\n            return (call, callback) => {\n                callback(unimplementedStatusResponse, null);\n            };\n        case 'clientStream':\n            return (call, callback) => {\n                callback(unimplementedStatusResponse, null);\n            };\n        case 'serverStream':\n            return (call) => {\n                call.emit('error', unimplementedStatusResponse);\n            };\n        case 'bidi':\n            return (call) => {\n                call.emit('error', unimplementedStatusResponse);\n            };\n        default:\n            throw new Error(`Invalid handlerType ${handlerType}`);\n    }\n}\nlet Server = (() => {\n    var _a;\n    let _instanceExtraInitializers = [];\n    let _start_decorators;\n    return _a = class Server {\n            constructor(options) {\n                var _b, _c, _d, _e, _f, _g;\n                this.boundPorts = (__runInitializers(this, _instanceExtraInitializers), new Map());\n                this.http2Servers = new Map();\n                this.sessionIdleTimeouts = new Map();\n                this.handlers = new Map();\n                this.sessions = new Map();\n                /**\n                 * This field only exists to ensure that the start method throws an error if\n                 * it is called twice, as it did previously.\n                 */\n                this.started = false;\n                this.shutdown = false;\n                this.serverAddressString = 'null';\n                // Channelz Info\n                this.channelzEnabled = true;\n                this.options = options !== null && options !== void 0 ? options : {};\n                if (this.options['grpc.enable_channelz'] === 0) {\n                    this.channelzEnabled = false;\n                    this.channelzTrace = new channelz_1.ChannelzTraceStub();\n                    this.callTracker = new channelz_1.ChannelzCallTrackerStub();\n                    this.listenerChildrenTracker = new channelz_1.ChannelzChildrenTrackerStub();\n                    this.sessionChildrenTracker = new channelz_1.ChannelzChildrenTrackerStub();\n                }\n                else {\n                    this.channelzTrace = new channelz_1.ChannelzTrace();\n                    this.callTracker = new channelz_1.ChannelzCallTracker();\n                    this.listenerChildrenTracker = new channelz_1.ChannelzChildrenTracker();\n                    this.sessionChildrenTracker = new channelz_1.ChannelzChildrenTracker();\n                }\n                this.channelzRef = (0, channelz_1.registerChannelzServer)('server', () => this.getChannelzInfo(), this.channelzEnabled);\n                this.channelzTrace.addTrace('CT_INFO', 'Server created');\n                this.maxConnectionAgeMs =\n                    (_b = this.options['grpc.max_connection_age_ms']) !== null && _b !== void 0 ? _b : UNLIMITED_CONNECTION_AGE_MS;\n                this.maxConnectionAgeGraceMs =\n                    (_c = this.options['grpc.max_connection_age_grace_ms']) !== null && _c !== void 0 ? _c : UNLIMITED_CONNECTION_AGE_MS;\n                this.keepaliveTimeMs =\n                    (_d = this.options['grpc.keepalive_time_ms']) !== null && _d !== void 0 ? _d : KEEPALIVE_MAX_TIME_MS;\n                this.keepaliveTimeoutMs =\n                    (_e = this.options['grpc.keepalive_timeout_ms']) !== null && _e !== void 0 ? _e : KEEPALIVE_TIMEOUT_MS;\n                this.sessionIdleTimeout =\n                    (_f = this.options['grpc.max_connection_idle_ms']) !== null && _f !== void 0 ? _f : MAX_CONNECTION_IDLE_MS;\n                this.commonServerOptions = {\n                    maxSendHeaderBlockLength: Number.MAX_SAFE_INTEGER,\n                };\n                if ('grpc-node.max_session_memory' in this.options) {\n                    this.commonServerOptions.maxSessionMemory =\n                        this.options['grpc-node.max_session_memory'];\n                }\n                else {\n                    /* By default, set a very large max session memory limit, to effectively\n                     * disable enforcement of the limit. Some testing indicates that Node's\n                     * behavior degrades badly when this limit is reached, so we solve that\n                     * by disabling the check entirely. */\n                    this.commonServerOptions.maxSessionMemory = Number.MAX_SAFE_INTEGER;\n                }\n                if ('grpc.max_concurrent_streams' in this.options) {\n                    this.commonServerOptions.settings = {\n                        maxConcurrentStreams: this.options['grpc.max_concurrent_streams'],\n                    };\n                }\n                this.interceptors = (_g = this.options.interceptors) !== null && _g !== void 0 ? _g : [];\n                this.trace('Server constructed');\n            }\n            getChannelzInfo() {\n                return {\n                    trace: this.channelzTrace,\n                    callTracker: this.callTracker,\n                    listenerChildren: this.listenerChildrenTracker.getChildLists(),\n                    sessionChildren: this.sessionChildrenTracker.getChildLists(),\n                };\n            }\n            getChannelzSessionInfo(session) {\n                var _b, _c, _d;\n                const sessionInfo = this.sessions.get(session);\n                const sessionSocket = session.socket;\n                const remoteAddress = sessionSocket.remoteAddress\n                    ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.remoteAddress, sessionSocket.remotePort)\n                    : null;\n                const localAddress = sessionSocket.localAddress\n                    ? (0, subchannel_address_1.stringToSubchannelAddress)(sessionSocket.localAddress, sessionSocket.localPort)\n                    : null;\n                let tlsInfo;\n                if (session.encrypted) {\n                    const tlsSocket = sessionSocket;\n                    const cipherInfo = tlsSocket.getCipher();\n                    const certificate = tlsSocket.getCertificate();\n                    const peerCertificate = tlsSocket.getPeerCertificate();\n                    tlsInfo = {\n                        cipherSuiteStandardName: (_b = cipherInfo.standardName) !== null && _b !== void 0 ? _b : null,\n                        cipherSuiteOtherName: cipherInfo.standardName ? null : cipherInfo.name,\n                        localCertificate: certificate && 'raw' in certificate ? certificate.raw : null,\n                        remoteCertificate: peerCertificate && 'raw' in peerCertificate\n                            ? peerCertificate.raw\n                            : null,\n                    };\n                }\n                else {\n                    tlsInfo = null;\n                }\n                const socketInfo = {\n                    remoteAddress: remoteAddress,\n                    localAddress: localAddress,\n                    security: tlsInfo,\n                    remoteName: null,\n                    streamsStarted: sessionInfo.streamTracker.callsStarted,\n                    streamsSucceeded: sessionInfo.streamTracker.callsSucceeded,\n                    streamsFailed: sessionInfo.streamTracker.callsFailed,\n                    messagesSent: sessionInfo.messagesSent,\n                    messagesReceived: sessionInfo.messagesReceived,\n                    keepAlivesSent: sessionInfo.keepAlivesSent,\n                    lastLocalStreamCreatedTimestamp: null,\n                    lastRemoteStreamCreatedTimestamp: sessionInfo.streamTracker.lastCallStartedTimestamp,\n                    lastMessageSentTimestamp: sessionInfo.lastMessageSentTimestamp,\n                    lastMessageReceivedTimestamp: sessionInfo.lastMessageReceivedTimestamp,\n                    localFlowControlWindow: (_c = session.state.localWindowSize) !== null && _c !== void 0 ? _c : null,\n                    remoteFlowControlWindow: (_d = session.state.remoteWindowSize) !== null && _d !== void 0 ? _d : null,\n                };\n                return socketInfo;\n            }\n            trace(text) {\n                logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, '(' + this.channelzRef.id + ') ' + text);\n            }\n            keepaliveTrace(text) {\n                logging.trace(constants_1.LogVerbosity.DEBUG, 'keepalive', '(' + this.channelzRef.id + ') ' + text);\n            }\n            addProtoService() {\n                throw new Error('Not implemented. Use addService() instead');\n            }\n            addService(service, implementation) {\n                if (service === null ||\n                    typeof service !== 'object' ||\n                    implementation === null ||\n                    typeof implementation !== 'object') {\n                    throw new Error('addService() requires two objects as arguments');\n                }\n                const serviceKeys = Object.keys(service);\n                if (serviceKeys.length === 0) {\n                    throw new Error('Cannot add an empty service to a server');\n                }\n                serviceKeys.forEach(name => {\n                    const attrs = service[name];\n                    let methodType;\n                    if (attrs.requestStream) {\n                        if (attrs.responseStream) {\n                            methodType = 'bidi';\n                        }\n                        else {\n                            methodType = 'clientStream';\n                        }\n                    }\n                    else {\n                        if (attrs.responseStream) {\n                            methodType = 'serverStream';\n                        }\n                        else {\n                            methodType = 'unary';\n                        }\n                    }\n                    let implFn = implementation[name];\n                    let impl;\n                    if (implFn === undefined && typeof attrs.originalName === 'string') {\n                        implFn = implementation[attrs.originalName];\n                    }\n                    if (implFn !== undefined) {\n                        impl = implFn.bind(implementation);\n                    }\n                    else {\n                        impl = getDefaultHandler(methodType, name);\n                    }\n                    const success = this.register(attrs.path, impl, attrs.responseSerialize, attrs.requestDeserialize, methodType);\n                    if (success === false) {\n                        throw new Error(`Method handler for ${attrs.path} already provided.`);\n                    }\n                });\n            }\n            removeService(service) {\n                if (service === null || typeof service !== 'object') {\n                    throw new Error('removeService() requires object as argument');\n                }\n                const serviceKeys = Object.keys(service);\n                serviceKeys.forEach(name => {\n                    const attrs = service[name];\n                    this.unregister(attrs.path);\n                });\n            }\n            bind(port, creds) {\n                throw new Error('Not implemented. Use bindAsync() instead');\n            }\n            registerListenerToChannelz(boundAddress) {\n                return (0, channelz_1.registerChannelzSocket)((0, subchannel_address_1.subchannelAddressToString)(boundAddress), () => {\n                    return {\n                        localAddress: boundAddress,\n                        remoteAddress: null,\n                        security: null,\n                        remoteName: null,\n                        streamsStarted: 0,\n                        streamsSucceeded: 0,\n                        streamsFailed: 0,\n                        messagesSent: 0,\n                        messagesReceived: 0,\n                        keepAlivesSent: 0,\n                        lastLocalStreamCreatedTimestamp: null,\n                        lastRemoteStreamCreatedTimestamp: null,\n                        lastMessageSentTimestamp: null,\n                        lastMessageReceivedTimestamp: null,\n                        localFlowControlWindow: null,\n                        remoteFlowControlWindow: null,\n                    };\n                }, this.channelzEnabled);\n            }\n            createHttp2Server(credentials) {\n                let http2Server;\n                if (credentials._isSecure()) {\n                    const credentialsSettings = credentials._getSettings();\n                    const secureServerOptions = Object.assign(Object.assign(Object.assign({}, this.commonServerOptions), credentialsSettings), { enableTrace: this.options['grpc-node.tls_enable_trace'] === 1 });\n                    let areCredentialsValid = credentialsSettings !== null;\n                    http2Server = http2.createSecureServer(secureServerOptions);\n                    http2Server.on('connection', (socket) => {\n                        if (!areCredentialsValid) {\n                            socket.destroy();\n                        }\n                    });\n                    http2Server.on('secureConnection', (socket) => {\n                        /* These errors need to be handled by the user of Http2SecureServer,\n                         * according to https://github.com/nodejs/node/issues/35824 */\n                        socket.on('error', (e) => {\n                            this.trace('An incoming TLS connection closed with error: ' + e.message);\n                        });\n                    });\n                    const credsWatcher = options => {\n                        if (options) {\n                            http2Server.setSecureContext(options);\n                        }\n                        areCredentialsValid = options !== null;\n                    };\n                    credentials._addWatcher(credsWatcher);\n                    http2Server.on('close', () => {\n                        credentials._removeWatcher(credsWatcher);\n                    });\n                }\n                else {\n                    http2Server = http2.createServer(this.commonServerOptions);\n                }\n                http2Server.setTimeout(0, noop);\n                this._setupHandlers(http2Server, credentials._getInterceptors());\n                return http2Server;\n            }\n            bindOneAddress(address, boundPortObject) {\n                this.trace('Attempting to bind ' + (0, subchannel_address_1.subchannelAddressToString)(address));\n                const http2Server = this.createHttp2Server(boundPortObject.credentials);\n                return new Promise((resolve, reject) => {\n                    const onError = (err) => {\n                        this.trace('Failed to bind ' +\n                            (0, subchannel_address_1.subchannelAddressToString)(address) +\n                            ' with error ' +\n                            err.message);\n                        resolve({\n                            port: 'port' in address ? address.port : 1,\n                            error: err.message,\n                        });\n                    };\n                    http2Server.once('error', onError);\n                    http2Server.listen(address, () => {\n                        const boundAddress = http2Server.address();\n                        let boundSubchannelAddress;\n                        if (typeof boundAddress === 'string') {\n                            boundSubchannelAddress = {\n                                path: boundAddress,\n                            };\n                        }\n                        else {\n                            boundSubchannelAddress = {\n                                host: boundAddress.address,\n                                port: boundAddress.port,\n                            };\n                        }\n                        const channelzRef = this.registerListenerToChannelz(boundSubchannelAddress);\n                        this.listenerChildrenTracker.refChild(channelzRef);\n                        this.http2Servers.set(http2Server, {\n                            channelzRef: channelzRef,\n                            sessions: new Set(),\n                        });\n                        boundPortObject.listeningServers.add(http2Server);\n                        this.trace('Successfully bound ' +\n                            (0, subchannel_address_1.subchannelAddressToString)(boundSubchannelAddress));\n                        resolve({\n                            port: 'port' in boundSubchannelAddress ? boundSubchannelAddress.port : 1,\n                        });\n                        http2Server.removeListener('error', onError);\n                    });\n                });\n            }\n            async bindManyPorts(addressList, boundPortObject) {\n                if (addressList.length === 0) {\n                    return {\n                        count: 0,\n                        port: 0,\n                        errors: [],\n                    };\n                }\n                if ((0, subchannel_address_1.isTcpSubchannelAddress)(addressList[0]) && addressList[0].port === 0) {\n                    /* If binding to port 0, first try to bind the first address, then bind\n                     * the rest of the address list to the specific port that it binds. */\n                    const firstAddressResult = await this.bindOneAddress(addressList[0], boundPortObject);\n                    if (firstAddressResult.error) {\n                        /* If the first address fails to bind, try the same operation starting\n                         * from the second item in the list. */\n                        const restAddressResult = await this.bindManyPorts(addressList.slice(1), boundPortObject);\n                        return Object.assign(Object.assign({}, restAddressResult), { errors: [firstAddressResult.error, ...restAddressResult.errors] });\n                    }\n                    else {\n                        const restAddresses = addressList\n                            .slice(1)\n                            .map(address => (0, subchannel_address_1.isTcpSubchannelAddress)(address)\n                            ? { host: address.host, port: firstAddressResult.port }\n                            : address);\n                        const restAddressResult = await Promise.all(restAddresses.map(address => this.bindOneAddress(address, boundPortObject)));\n                        const allResults = [firstAddressResult, ...restAddressResult];\n                        return {\n                            count: allResults.filter(result => result.error === undefined).length,\n                            port: firstAddressResult.port,\n                            errors: allResults\n                                .filter(result => result.error)\n                                .map(result => result.error),\n                        };\n                    }\n                }\n                else {\n                    const allResults = await Promise.all(addressList.map(address => this.bindOneAddress(address, boundPortObject)));\n                    return {\n                        count: allResults.filter(result => result.error === undefined).length,\n                        port: allResults[0].port,\n                        errors: allResults\n                            .filter(result => result.error)\n                            .map(result => result.error),\n                    };\n                }\n            }\n            async bindAddressList(addressList, boundPortObject) {\n                const bindResult = await this.bindManyPorts(addressList, boundPortObject);\n                if (bindResult.count > 0) {\n                    if (bindResult.count < addressList.length) {\n                        logging.log(constants_1.LogVerbosity.INFO, `WARNING Only ${bindResult.count} addresses added out of total ${addressList.length} resolved`);\n                    }\n                    return bindResult.port;\n                }\n                else {\n                    const errorString = `No address added out of total ${addressList.length} resolved`;\n                    logging.log(constants_1.LogVerbosity.ERROR, errorString);\n                    throw new Error(`${errorString} errors: [${bindResult.errors.join(',')}]`);\n                }\n            }\n            resolvePort(port) {\n                return new Promise((resolve, reject) => {\n                    const resolverListener = {\n                        onSuccessfulResolution: (endpointList, serviceConfig, serviceConfigError) => {\n                            // We only want one resolution result. Discard all future results\n                            resolverListener.onSuccessfulResolution = () => { };\n                            const addressList = [].concat(...endpointList.map(endpoint => endpoint.addresses));\n                            if (addressList.length === 0) {\n                                reject(new Error(`No addresses resolved for port ${port}`));\n                                return;\n                            }\n                            resolve(addressList);\n                        },\n                        onError: error => {\n                            reject(new Error(error.details));\n                        },\n                    };\n                    const resolver = (0, resolver_1.createResolver)(port, resolverListener, this.options);\n                    resolver.updateResolution();\n                });\n            }\n            async bindPort(port, boundPortObject) {\n                const addressList = await this.resolvePort(port);\n                if (boundPortObject.cancelled) {\n                    this.completeUnbind(boundPortObject);\n                    throw new Error('bindAsync operation cancelled by unbind call');\n                }\n                const portNumber = await this.bindAddressList(addressList, boundPortObject);\n                if (boundPortObject.cancelled) {\n                    this.completeUnbind(boundPortObject);\n                    throw new Error('bindAsync operation cancelled by unbind call');\n                }\n                return portNumber;\n            }\n            normalizePort(port) {\n                const initialPortUri = (0, uri_parser_1.parseUri)(port);\n                if (initialPortUri === null) {\n                    throw new Error(`Could not parse port \"${port}\"`);\n                }\n                const portUri = (0, resolver_1.mapUriDefaultScheme)(initialPortUri);\n                if (portUri === null) {\n                    throw new Error(`Could not get a default scheme for port \"${port}\"`);\n                }\n                return portUri;\n            }\n            bindAsync(port, creds, callback) {\n                if (this.shutdown) {\n                    throw new Error('bindAsync called after shutdown');\n                }\n                if (typeof port !== 'string') {\n                    throw new TypeError('port must be a string');\n                }\n                if (creds === null || !(creds instanceof server_credentials_1.ServerCredentials)) {\n                    throw new TypeError('creds must be a ServerCredentials object');\n                }\n                if (typeof callback !== 'function') {\n                    throw new TypeError('callback must be a function');\n                }\n                this.trace('bindAsync port=' + port);\n                const portUri = this.normalizePort(port);\n                const deferredCallback = (error, port) => {\n                    process.nextTick(() => callback(error, port));\n                };\n                /* First, if this port is already bound or that bind operation is in\n                 * progress, use that result. */\n                let boundPortObject = this.boundPorts.get((0, uri_parser_1.uriToString)(portUri));\n                if (boundPortObject) {\n                    if (!creds._equals(boundPortObject.credentials)) {\n                        deferredCallback(new Error(`${port} already bound with incompatible credentials`), 0);\n                        return;\n                    }\n                    /* If that operation has previously been cancelled by an unbind call,\n                     * uncancel it. */\n                    boundPortObject.cancelled = false;\n                    if (boundPortObject.completionPromise) {\n                        boundPortObject.completionPromise.then(portNum => callback(null, portNum), error => callback(error, 0));\n                    }\n                    else {\n                        deferredCallback(null, boundPortObject.portNumber);\n                    }\n                    return;\n                }\n                boundPortObject = {\n                    mapKey: (0, uri_parser_1.uriToString)(portUri),\n                    originalUri: portUri,\n                    completionPromise: null,\n                    cancelled: false,\n                    portNumber: 0,\n                    credentials: creds,\n                    listeningServers: new Set(),\n                };\n                const splitPort = (0, uri_parser_1.splitHostPort)(portUri.path);\n                const completionPromise = this.bindPort(portUri, boundPortObject);\n                boundPortObject.completionPromise = completionPromise;\n                /* If the port number is 0, defer populating the map entry until after the\n                 * bind operation completes and we have a specific port number. Otherwise,\n                 * populate it immediately. */\n                if ((splitPort === null || splitPort === void 0 ? void 0 : splitPort.port) === 0) {\n                    completionPromise.then(portNum => {\n                        const finalUri = {\n                            scheme: portUri.scheme,\n                            authority: portUri.authority,\n                            path: (0, uri_parser_1.combineHostPort)({ host: splitPort.host, port: portNum }),\n                        };\n                        boundPortObject.mapKey = (0, uri_parser_1.uriToString)(finalUri);\n                        boundPortObject.completionPromise = null;\n                        boundPortObject.portNumber = portNum;\n                        this.boundPorts.set(boundPortObject.mapKey, boundPortObject);\n                        callback(null, portNum);\n                    }, error => {\n                        callback(error, 0);\n                    });\n                }\n                else {\n                    this.boundPorts.set(boundPortObject.mapKey, boundPortObject);\n                    completionPromise.then(portNum => {\n                        boundPortObject.completionPromise = null;\n                        boundPortObject.portNumber = portNum;\n                        callback(null, portNum);\n                    }, error => {\n                        callback(error, 0);\n                    });\n                }\n            }\n            registerInjectorToChannelz() {\n                return (0, channelz_1.registerChannelzSocket)('injector', () => {\n                    return {\n                        localAddress: null,\n                        remoteAddress: null,\n                        security: null,\n                        remoteName: null,\n                        streamsStarted: 0,\n                        streamsSucceeded: 0,\n                        streamsFailed: 0,\n                        messagesSent: 0,\n                        messagesReceived: 0,\n                        keepAlivesSent: 0,\n                        lastLocalStreamCreatedTimestamp: null,\n                        lastRemoteStreamCreatedTimestamp: null,\n                        lastMessageSentTimestamp: null,\n                        lastMessageReceivedTimestamp: null,\n                        localFlowControlWindow: null,\n                        remoteFlowControlWindow: null,\n                    };\n                }, this.channelzEnabled);\n            }\n            createConnectionInjector(credentials) {\n                if (credentials === null || !(credentials instanceof server_credentials_1.ServerCredentials)) {\n                    throw new TypeError('creds must be a ServerCredentials object');\n                }\n                const server = this.createHttp2Server(credentials);\n                const channelzRef = this.registerInjectorToChannelz();\n                if (this.channelzEnabled) {\n                    this.listenerChildrenTracker.refChild(channelzRef);\n                }\n                const sessionsSet = new Set();\n                this.http2Servers.set(server, {\n                    channelzRef: channelzRef,\n                    sessions: sessionsSet\n                });\n                return {\n                    injectConnection: (connection) => {\n                        server.emit('connection', connection);\n                    },\n                    drain: (graceTimeMs) => {\n                        var _b, _c;\n                        for (const session of sessionsSet) {\n                            this.closeSession(session);\n                        }\n                        (_c = (_b = setTimeout(() => {\n                            for (const session of sessionsSet) {\n                                session.destroy(http2.constants.NGHTTP2_CANCEL);\n                            }\n                        }, graceTimeMs)).unref) === null || _c === void 0 ? void 0 : _c.call(_b);\n                    },\n                    destroy: () => {\n                        this.closeServer(server);\n                        for (const session of sessionsSet) {\n                            this.closeSession(session);\n                        }\n                    }\n                };\n            }\n            closeServer(server, callback) {\n                this.trace('Closing server with address ' + JSON.stringify(server.address()));\n                const serverInfo = this.http2Servers.get(server);\n                server.close(() => {\n                    if (serverInfo) {\n                        this.listenerChildrenTracker.unrefChild(serverInfo.channelzRef);\n                        (0, channelz_1.unregisterChannelzRef)(serverInfo.channelzRef);\n                    }\n                    this.http2Servers.delete(server);\n                    callback === null || callback === void 0 ? void 0 : callback();\n                });\n            }\n            closeSession(session, callback) {\n                var _b;\n                this.trace('Closing session initiated by ' + ((_b = session.socket) === null || _b === void 0 ? void 0 : _b.remoteAddress));\n                const sessionInfo = this.sessions.get(session);\n                const closeCallback = () => {\n                    if (sessionInfo) {\n                        this.sessionChildrenTracker.unrefChild(sessionInfo.ref);\n                        (0, channelz_1.unregisterChannelzRef)(sessionInfo.ref);\n                    }\n                    callback === null || callback === void 0 ? void 0 : callback();\n                };\n                if (session.closed) {\n                    queueMicrotask(closeCallback);\n                }\n                else {\n                    session.close(closeCallback);\n                }\n            }\n            completeUnbind(boundPortObject) {\n                for (const server of boundPortObject.listeningServers) {\n                    const serverInfo = this.http2Servers.get(server);\n                    this.closeServer(server, () => {\n                        boundPortObject.listeningServers.delete(server);\n                    });\n                    if (serverInfo) {\n                        for (const session of serverInfo.sessions) {\n                            this.closeSession(session);\n                        }\n                    }\n                }\n                this.boundPorts.delete(boundPortObject.mapKey);\n            }\n            /**\n             * Unbind a previously bound port, or cancel an in-progress bindAsync\n             * operation. If port 0 was bound, only the actual bound port can be\n             * unbound. For example, if bindAsync was called with \"localhost:0\" and the\n             * bound port result was 54321, it can be unbound as \"localhost:54321\".\n             * @param port\n             */\n            unbind(port) {\n                this.trace('unbind port=' + port);\n                const portUri = this.normalizePort(port);\n                const splitPort = (0, uri_parser_1.splitHostPort)(portUri.path);\n                if ((splitPort === null || splitPort === void 0 ? void 0 : splitPort.port) === 0) {\n                    throw new Error('Cannot unbind port 0');\n                }\n                const boundPortObject = this.boundPorts.get((0, uri_parser_1.uriToString)(portUri));\n                if (boundPortObject) {\n                    this.trace('unbinding ' +\n                        boundPortObject.mapKey +\n                        ' originally bound as ' +\n                        (0, uri_parser_1.uriToString)(boundPortObject.originalUri));\n                    /* If the bind operation is pending, the cancelled flag will trigger\n                     * the unbind operation later. */\n                    if (boundPortObject.completionPromise) {\n                        boundPortObject.cancelled = true;\n                    }\n                    else {\n                        this.completeUnbind(boundPortObject);\n                    }\n                }\n            }\n            /**\n             * Gracefully close all connections associated with a previously bound port.\n             * After the grace time, forcefully close all remaining open connections.\n             *\n             * If port 0 was bound, only the actual bound port can be\n             * drained. For example, if bindAsync was called with \"localhost:0\" and the\n             * bound port result was 54321, it can be drained as \"localhost:54321\".\n             * @param port\n             * @param graceTimeMs\n             * @returns\n             */\n            drain(port, graceTimeMs) {\n                var _b, _c;\n                this.trace('drain port=' + port + ' graceTimeMs=' + graceTimeMs);\n                const portUri = this.normalizePort(port);\n                const splitPort = (0, uri_parser_1.splitHostPort)(portUri.path);\n                if ((splitPort === null || splitPort === void 0 ? void 0 : splitPort.port) === 0) {\n                    throw new Error('Cannot drain port 0');\n                }\n                const boundPortObject = this.boundPorts.get((0, uri_parser_1.uriToString)(portUri));\n                if (!boundPortObject) {\n                    return;\n                }\n                const allSessions = new Set();\n                for (const http2Server of boundPortObject.listeningServers) {\n                    const serverEntry = this.http2Servers.get(http2Server);\n                    if (serverEntry) {\n                        for (const session of serverEntry.sessions) {\n                            allSessions.add(session);\n                            this.closeSession(session, () => {\n                                allSessions.delete(session);\n                            });\n                        }\n                    }\n                }\n                /* After the grace time ends, send another goaway to all remaining sessions\n                 * with the CANCEL code. */\n                (_c = (_b = setTimeout(() => {\n                    for (const session of allSessions) {\n                        session.destroy(http2.constants.NGHTTP2_CANCEL);\n                    }\n                }, graceTimeMs)).unref) === null || _c === void 0 ? void 0 : _c.call(_b);\n            }\n            forceShutdown() {\n                for (const boundPortObject of this.boundPorts.values()) {\n                    boundPortObject.cancelled = true;\n                }\n                this.boundPorts.clear();\n                // Close the server if it is still running.\n                for (const server of this.http2Servers.keys()) {\n                    this.closeServer(server);\n                }\n                // Always destroy any available sessions. It's possible that one or more\n                // tryShutdown() calls are in progress. Don't wait on them to finish.\n                this.sessions.forEach((channelzInfo, session) => {\n                    this.closeSession(session);\n                    // Cast NGHTTP2_CANCEL to any because TypeScript doesn't seem to\n                    // recognize destroy(code) as a valid signature.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    session.destroy(http2.constants.NGHTTP2_CANCEL);\n                });\n                this.sessions.clear();\n                (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n                this.shutdown = true;\n            }\n            register(name, handler, serialize, deserialize, type) {\n                if (this.handlers.has(name)) {\n                    return false;\n                }\n                this.handlers.set(name, {\n                    func: handler,\n                    serialize,\n                    deserialize,\n                    type,\n                    path: name,\n                });\n                return true;\n            }\n            unregister(name) {\n                return this.handlers.delete(name);\n            }\n            /**\n             * @deprecated No longer needed as of version 1.10.x\n             */\n            start() {\n                if (this.http2Servers.size === 0 ||\n                    [...this.http2Servers.keys()].every(server => !server.listening)) {\n                    throw new Error('server must be bound in order to start');\n                }\n                if (this.started === true) {\n                    throw new Error('server is already started');\n                }\n                this.started = true;\n            }\n            tryShutdown(callback) {\n                var _b;\n                const wrappedCallback = (error) => {\n                    (0, channelz_1.unregisterChannelzRef)(this.channelzRef);\n                    callback(error);\n                };\n                let pendingChecks = 0;\n                function maybeCallback() {\n                    pendingChecks--;\n                    if (pendingChecks === 0) {\n                        wrappedCallback();\n                    }\n                }\n                this.shutdown = true;\n                for (const [serverKey, server] of this.http2Servers.entries()) {\n                    pendingChecks++;\n                    const serverString = server.channelzRef.name;\n                    this.trace('Waiting for server ' + serverString + ' to close');\n                    this.closeServer(serverKey, () => {\n                        this.trace('Server ' + serverString + ' finished closing');\n                        maybeCallback();\n                    });\n                    for (const session of server.sessions.keys()) {\n                        pendingChecks++;\n                        const sessionString = (_b = session.socket) === null || _b === void 0 ? void 0 : _b.remoteAddress;\n                        this.trace('Waiting for session ' + sessionString + ' to close');\n                        this.closeSession(session, () => {\n                            this.trace('Session ' + sessionString + ' finished closing');\n                            maybeCallback();\n                        });\n                    }\n                }\n                if (pendingChecks === 0) {\n                    wrappedCallback();\n                }\n            }\n            addHttp2Port() {\n                throw new Error('Not yet implemented');\n            }\n            /**\n             * Get the channelz reference object for this server. The returned value is\n             * garbage if channelz is disabled for this server.\n             * @returns\n             */\n            getChannelzRef() {\n                return this.channelzRef;\n            }\n            _verifyContentType(stream, headers) {\n                const contentType = headers[http2.constants.HTTP2_HEADER_CONTENT_TYPE];\n                if (typeof contentType !== 'string' ||\n                    !contentType.startsWith('application/grpc')) {\n                    stream.respond({\n                        [http2.constants.HTTP2_HEADER_STATUS]: http2.constants.HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE,\n                    }, { endStream: true });\n                    return false;\n                }\n                return true;\n            }\n            _retrieveHandler(path) {\n                this.trace('Received call to method ' +\n                    path +\n                    ' at address ' +\n                    this.serverAddressString);\n                const handler = this.handlers.get(path);\n                if (handler === undefined) {\n                    this.trace('No handler registered for method ' +\n                        path +\n                        '. Sending UNIMPLEMENTED status.');\n                    return null;\n                }\n                return handler;\n            }\n            _respondWithError(err, stream, channelzSessionInfo = null) {\n                var _b, _c;\n                const trailersToSend = Object.assign({ 'grpc-status': (_b = err.code) !== null && _b !== void 0 ? _b : constants_1.Status.INTERNAL, 'grpc-message': err.details, [http2.constants.HTTP2_HEADER_STATUS]: http2.constants.HTTP_STATUS_OK, [http2.constants.HTTP2_HEADER_CONTENT_TYPE]: 'application/grpc+proto' }, (_c = err.metadata) === null || _c === void 0 ? void 0 : _c.toHttp2Headers());\n                stream.respond(trailersToSend, { endStream: true });\n                this.callTracker.addCallFailed();\n                channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n            }\n            _channelzHandler(extraInterceptors, stream, headers) {\n                // for handling idle timeout\n                this.onStreamOpened(stream);\n                const channelzSessionInfo = this.sessions.get(stream.session);\n                this.callTracker.addCallStarted();\n                channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallStarted();\n                if (!this._verifyContentType(stream, headers)) {\n                    this.callTracker.addCallFailed();\n                    channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n                    return;\n                }\n                const path = headers[HTTP2_HEADER_PATH];\n                const handler = this._retrieveHandler(path);\n                if (!handler) {\n                    this._respondWithError(getUnimplementedStatusResponse(path), stream, channelzSessionInfo);\n                    return;\n                }\n                const callEventTracker = {\n                    addMessageSent: () => {\n                        if (channelzSessionInfo) {\n                            channelzSessionInfo.messagesSent += 1;\n                            channelzSessionInfo.lastMessageSentTimestamp = new Date();\n                        }\n                    },\n                    addMessageReceived: () => {\n                        if (channelzSessionInfo) {\n                            channelzSessionInfo.messagesReceived += 1;\n                            channelzSessionInfo.lastMessageReceivedTimestamp = new Date();\n                        }\n                    },\n                    onCallEnd: status => {\n                        if (status.code === constants_1.Status.OK) {\n                            this.callTracker.addCallSucceeded();\n                        }\n                        else {\n                            this.callTracker.addCallFailed();\n                        }\n                    },\n                    onStreamEnd: success => {\n                        if (channelzSessionInfo) {\n                            if (success) {\n                                channelzSessionInfo.streamTracker.addCallSucceeded();\n                            }\n                            else {\n                                channelzSessionInfo.streamTracker.addCallFailed();\n                            }\n                        }\n                    },\n                };\n                const call = (0, server_interceptors_1.getServerInterceptingCall)([...extraInterceptors, ...this.interceptors], stream, headers, callEventTracker, handler, this.options);\n                if (!this._runHandlerForCall(call, handler)) {\n                    this.callTracker.addCallFailed();\n                    channelzSessionInfo === null || channelzSessionInfo === void 0 ? void 0 : channelzSessionInfo.streamTracker.addCallFailed();\n                    call.sendStatus({\n                        code: constants_1.Status.INTERNAL,\n                        details: `Unknown handler type: ${handler.type}`,\n                    });\n                }\n            }\n            _streamHandler(extraInterceptors, stream, headers) {\n                // for handling idle timeout\n                this.onStreamOpened(stream);\n                if (this._verifyContentType(stream, headers) !== true) {\n                    return;\n                }\n                const path = headers[HTTP2_HEADER_PATH];\n                const handler = this._retrieveHandler(path);\n                if (!handler) {\n                    this._respondWithError(getUnimplementedStatusResponse(path), stream, null);\n                    return;\n                }\n                const call = (0, server_interceptors_1.getServerInterceptingCall)([...extraInterceptors, ...this.interceptors], stream, headers, null, handler, this.options);\n                if (!this._runHandlerForCall(call, handler)) {\n                    call.sendStatus({\n                        code: constants_1.Status.INTERNAL,\n                        details: `Unknown handler type: ${handler.type}`,\n                    });\n                }\n            }\n            _runHandlerForCall(call, handler) {\n                const { type } = handler;\n                if (type === 'unary') {\n                    handleUnary(call, handler);\n                }\n                else if (type === 'clientStream') {\n                    handleClientStreaming(call, handler);\n                }\n                else if (type === 'serverStream') {\n                    handleServerStreaming(call, handler);\n                }\n                else if (type === 'bidi') {\n                    handleBidiStreaming(call, handler);\n                }\n                else {\n                    return false;\n                }\n                return true;\n            }\n            _setupHandlers(http2Server, extraInterceptors) {\n                if (http2Server === null) {\n                    return;\n                }\n                const serverAddress = http2Server.address();\n                let serverAddressString = 'null';\n                if (serverAddress) {\n                    if (typeof serverAddress === 'string') {\n                        serverAddressString = serverAddress;\n                    }\n                    else {\n                        serverAddressString = serverAddress.address + ':' + serverAddress.port;\n                    }\n                }\n                this.serverAddressString = serverAddressString;\n                const handler = this.channelzEnabled\n                    ? this._channelzHandler\n                    : this._streamHandler;\n                const sessionHandler = this.channelzEnabled\n                    ? this._channelzSessionHandler(http2Server)\n                    : this._sessionHandler(http2Server);\n                http2Server.on('stream', handler.bind(this, extraInterceptors));\n                http2Server.on('session', sessionHandler);\n            }\n            _sessionHandler(http2Server) {\n                return (session) => {\n                    var _b, _c;\n                    (_b = this.http2Servers.get(http2Server)) === null || _b === void 0 ? void 0 : _b.sessions.add(session);\n                    let connectionAgeTimer = null;\n                    let connectionAgeGraceTimer = null;\n                    let keepaliveTimer = null;\n                    let sessionClosedByServer = false;\n                    const idleTimeoutObj = this.enableIdleTimeout(session);\n                    if (this.maxConnectionAgeMs !== UNLIMITED_CONNECTION_AGE_MS) {\n                        // Apply a random jitter within a +/-10% range\n                        const jitterMagnitude = this.maxConnectionAgeMs / 10;\n                        const jitter = Math.random() * jitterMagnitude * 2 - jitterMagnitude;\n                        connectionAgeTimer = setTimeout(() => {\n                            var _b, _c;\n                            sessionClosedByServer = true;\n                            this.trace('Connection dropped by max connection age: ' +\n                                ((_b = session.socket) === null || _b === void 0 ? void 0 : _b.remoteAddress));\n                            try {\n                                session.goaway(http2.constants.NGHTTP2_NO_ERROR, ~(1 << 31), kMaxAge);\n                            }\n                            catch (e) {\n                                // The goaway can't be sent because the session is already closed\n                                session.destroy();\n                                return;\n                            }\n                            session.close();\n                            /* Allow a grace period after sending the GOAWAY before forcibly\n                             * closing the connection. */\n                            if (this.maxConnectionAgeGraceMs !== UNLIMITED_CONNECTION_AGE_MS) {\n                                connectionAgeGraceTimer = setTimeout(() => {\n                                    session.destroy();\n                                }, this.maxConnectionAgeGraceMs);\n                                (_c = connectionAgeGraceTimer.unref) === null || _c === void 0 ? void 0 : _c.call(connectionAgeGraceTimer);\n                            }\n                        }, this.maxConnectionAgeMs + jitter);\n                        (_c = connectionAgeTimer.unref) === null || _c === void 0 ? void 0 : _c.call(connectionAgeTimer);\n                    }\n                    const clearKeepaliveTimeout = () => {\n                        if (keepaliveTimer) {\n                            clearTimeout(keepaliveTimer);\n                            keepaliveTimer = null;\n                        }\n                    };\n                    const canSendPing = () => {\n                        return (!session.destroyed &&\n                            this.keepaliveTimeMs < KEEPALIVE_MAX_TIME_MS &&\n                            this.keepaliveTimeMs > 0);\n                    };\n                    /* eslint-disable-next-line prefer-const */\n                    let sendPing; // hoisted for use in maybeStartKeepalivePingTimer\n                    const maybeStartKeepalivePingTimer = () => {\n                        var _b;\n                        if (!canSendPing()) {\n                            return;\n                        }\n                        this.keepaliveTrace('Starting keepalive timer for ' + this.keepaliveTimeMs + 'ms');\n                        keepaliveTimer = setTimeout(() => {\n                            clearKeepaliveTimeout();\n                            sendPing();\n                        }, this.keepaliveTimeMs);\n                        (_b = keepaliveTimer.unref) === null || _b === void 0 ? void 0 : _b.call(keepaliveTimer);\n                    };\n                    sendPing = () => {\n                        var _b;\n                        if (!canSendPing()) {\n                            return;\n                        }\n                        this.keepaliveTrace('Sending ping with timeout ' + this.keepaliveTimeoutMs + 'ms');\n                        let pingSendError = '';\n                        try {\n                            const pingSentSuccessfully = session.ping((err, duration, payload) => {\n                                clearKeepaliveTimeout();\n                                if (err) {\n                                    this.keepaliveTrace('Ping failed with error: ' + err.message);\n                                    sessionClosedByServer = true;\n                                    session.close();\n                                }\n                                else {\n                                    this.keepaliveTrace('Received ping response');\n                                    maybeStartKeepalivePingTimer();\n                                }\n                            });\n                            if (!pingSentSuccessfully) {\n                                pingSendError = 'Ping returned false';\n                            }\n                        }\n                        catch (e) {\n                            // grpc/grpc-node#2139\n                            pingSendError =\n                                (e instanceof Error ? e.message : '') || 'Unknown error';\n                        }\n                        if (pingSendError) {\n                            this.keepaliveTrace('Ping send failed: ' + pingSendError);\n                            this.trace('Connection dropped due to ping send error: ' + pingSendError);\n                            sessionClosedByServer = true;\n                            session.close();\n                            return;\n                        }\n                        keepaliveTimer = setTimeout(() => {\n                            clearKeepaliveTimeout();\n                            this.keepaliveTrace('Ping timeout passed without response');\n                            this.trace('Connection dropped by keepalive timeout');\n                            sessionClosedByServer = true;\n                            session.close();\n                        }, this.keepaliveTimeoutMs);\n                        (_b = keepaliveTimer.unref) === null || _b === void 0 ? void 0 : _b.call(keepaliveTimer);\n                    };\n                    maybeStartKeepalivePingTimer();\n                    session.on('close', () => {\n                        var _b, _c;\n                        if (!sessionClosedByServer) {\n                            this.trace(`Connection dropped by client ${(_b = session.socket) === null || _b === void 0 ? void 0 : _b.remoteAddress}`);\n                        }\n                        if (connectionAgeTimer) {\n                            clearTimeout(connectionAgeTimer);\n                        }\n                        if (connectionAgeGraceTimer) {\n                            clearTimeout(connectionAgeGraceTimer);\n                        }\n                        clearKeepaliveTimeout();\n                        if (idleTimeoutObj !== null) {\n                            clearTimeout(idleTimeoutObj.timeout);\n                            this.sessionIdleTimeouts.delete(session);\n                        }\n                        (_c = this.http2Servers.get(http2Server)) === null || _c === void 0 ? void 0 : _c.sessions.delete(session);\n                    });\n                };\n            }\n            _channelzSessionHandler(http2Server) {\n                return (session) => {\n                    var _b, _c, _d, _e;\n                    const channelzRef = (0, channelz_1.registerChannelzSocket)((_c = (_b = session.socket) === null || _b === void 0 ? void 0 : _b.remoteAddress) !== null && _c !== void 0 ? _c : 'unknown', this.getChannelzSessionInfo.bind(this, session), this.channelzEnabled);\n                    const channelzSessionInfo = {\n                        ref: channelzRef,\n                        streamTracker: new channelz_1.ChannelzCallTracker(),\n                        messagesSent: 0,\n                        messagesReceived: 0,\n                        keepAlivesSent: 0,\n                        lastMessageSentTimestamp: null,\n                        lastMessageReceivedTimestamp: null,\n                    };\n                    (_d = this.http2Servers.get(http2Server)) === null || _d === void 0 ? void 0 : _d.sessions.add(session);\n                    this.sessions.set(session, channelzSessionInfo);\n                    const clientAddress = `${session.socket.remoteAddress}:${session.socket.remotePort}`;\n                    this.channelzTrace.addTrace('CT_INFO', 'Connection established by client ' + clientAddress);\n                    this.trace('Connection established by client ' + clientAddress);\n                    this.sessionChildrenTracker.refChild(channelzRef);\n                    let connectionAgeTimer = null;\n                    let connectionAgeGraceTimer = null;\n                    let keepaliveTimeout = null;\n                    let sessionClosedByServer = false;\n                    const idleTimeoutObj = this.enableIdleTimeout(session);\n                    if (this.maxConnectionAgeMs !== UNLIMITED_CONNECTION_AGE_MS) {\n                        // Apply a random jitter within a +/-10% range\n                        const jitterMagnitude = this.maxConnectionAgeMs / 10;\n                        const jitter = Math.random() * jitterMagnitude * 2 - jitterMagnitude;\n                        connectionAgeTimer = setTimeout(() => {\n                            var _b;\n                            sessionClosedByServer = true;\n                            this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by max connection age from ' + clientAddress);\n                            try {\n                                session.goaway(http2.constants.NGHTTP2_NO_ERROR, ~(1 << 31), kMaxAge);\n                            }\n                            catch (e) {\n                                // The goaway can't be sent because the session is already closed\n                                session.destroy();\n                                return;\n                            }\n                            session.close();\n                            /* Allow a grace period after sending the GOAWAY before forcibly\n                             * closing the connection. */\n                            if (this.maxConnectionAgeGraceMs !== UNLIMITED_CONNECTION_AGE_MS) {\n                                connectionAgeGraceTimer = setTimeout(() => {\n                                    session.destroy();\n                                }, this.maxConnectionAgeGraceMs);\n                                (_b = connectionAgeGraceTimer.unref) === null || _b === void 0 ? void 0 : _b.call(connectionAgeGraceTimer);\n                            }\n                        }, this.maxConnectionAgeMs + jitter);\n                        (_e = connectionAgeTimer.unref) === null || _e === void 0 ? void 0 : _e.call(connectionAgeTimer);\n                    }\n                    const clearKeepaliveTimeout = () => {\n                        if (keepaliveTimeout) {\n                            clearTimeout(keepaliveTimeout);\n                            keepaliveTimeout = null;\n                        }\n                    };\n                    const canSendPing = () => {\n                        return (!session.destroyed &&\n                            this.keepaliveTimeMs < KEEPALIVE_MAX_TIME_MS &&\n                            this.keepaliveTimeMs > 0);\n                    };\n                    /* eslint-disable-next-line prefer-const */\n                    let sendPing; // hoisted for use in maybeStartKeepalivePingTimer\n                    const maybeStartKeepalivePingTimer = () => {\n                        var _b;\n                        if (!canSendPing()) {\n                            return;\n                        }\n                        this.keepaliveTrace('Starting keepalive timer for ' + this.keepaliveTimeMs + 'ms');\n                        keepaliveTimeout = setTimeout(() => {\n                            clearKeepaliveTimeout();\n                            sendPing();\n                        }, this.keepaliveTimeMs);\n                        (_b = keepaliveTimeout.unref) === null || _b === void 0 ? void 0 : _b.call(keepaliveTimeout);\n                    };\n                    sendPing = () => {\n                        var _b;\n                        if (!canSendPing()) {\n                            return;\n                        }\n                        this.keepaliveTrace('Sending ping with timeout ' + this.keepaliveTimeoutMs + 'ms');\n                        let pingSendError = '';\n                        try {\n                            const pingSentSuccessfully = session.ping((err, duration, payload) => {\n                                clearKeepaliveTimeout();\n                                if (err) {\n                                    this.keepaliveTrace('Ping failed with error: ' + err.message);\n                                    this.channelzTrace.addTrace('CT_INFO', 'Connection dropped due to error of a ping frame ' +\n                                        err.message +\n                                        ' return in ' +\n                                        duration);\n                                    sessionClosedByServer = true;\n                                    session.close();\n                                }\n                                else {\n                                    this.keepaliveTrace('Received ping response');\n                                    maybeStartKeepalivePingTimer();\n                                }\n                            });\n                            if (!pingSentSuccessfully) {\n                                pingSendError = 'Ping returned false';\n                            }\n                        }\n                        catch (e) {\n                            // grpc/grpc-node#2139\n                            pingSendError =\n                                (e instanceof Error ? e.message : '') || 'Unknown error';\n                        }\n                        if (pingSendError) {\n                            this.keepaliveTrace('Ping send failed: ' + pingSendError);\n                            this.channelzTrace.addTrace('CT_INFO', 'Connection dropped due to ping send error: ' + pingSendError);\n                            sessionClosedByServer = true;\n                            session.close();\n                            return;\n                        }\n                        channelzSessionInfo.keepAlivesSent += 1;\n                        keepaliveTimeout = setTimeout(() => {\n                            clearKeepaliveTimeout();\n                            this.keepaliveTrace('Ping timeout passed without response');\n                            this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by keepalive timeout from ' + clientAddress);\n                            sessionClosedByServer = true;\n                            session.close();\n                        }, this.keepaliveTimeoutMs);\n                        (_b = keepaliveTimeout.unref) === null || _b === void 0 ? void 0 : _b.call(keepaliveTimeout);\n                    };\n                    maybeStartKeepalivePingTimer();\n                    session.on('close', () => {\n                        var _b;\n                        if (!sessionClosedByServer) {\n                            this.channelzTrace.addTrace('CT_INFO', 'Connection dropped by client ' + clientAddress);\n                        }\n                        this.sessionChildrenTracker.unrefChild(channelzRef);\n                        (0, channelz_1.unregisterChannelzRef)(channelzRef);\n                        if (connectionAgeTimer) {\n                            clearTimeout(connectionAgeTimer);\n                        }\n                        if (connectionAgeGraceTimer) {\n                            clearTimeout(connectionAgeGraceTimer);\n                        }\n                        clearKeepaliveTimeout();\n                        if (idleTimeoutObj !== null) {\n                            clearTimeout(idleTimeoutObj.timeout);\n                            this.sessionIdleTimeouts.delete(session);\n                        }\n                        (_b = this.http2Servers.get(http2Server)) === null || _b === void 0 ? void 0 : _b.sessions.delete(session);\n                        this.sessions.delete(session);\n                    });\n                };\n            }\n            enableIdleTimeout(session) {\n                var _b, _c;\n                if (this.sessionIdleTimeout >= MAX_CONNECTION_IDLE_MS) {\n                    return null;\n                }\n                const idleTimeoutObj = {\n                    activeStreams: 0,\n                    lastIdle: Date.now(),\n                    onClose: this.onStreamClose.bind(this, session),\n                    timeout: setTimeout(this.onIdleTimeout, this.sessionIdleTimeout, this, session),\n                };\n                (_c = (_b = idleTimeoutObj.timeout).unref) === null || _c === void 0 ? void 0 : _c.call(_b);\n                this.sessionIdleTimeouts.set(session, idleTimeoutObj);\n                const { socket } = session;\n                this.trace('Enable idle timeout for ' +\n                    socket.remoteAddress +\n                    ':' +\n                    socket.remotePort);\n                return idleTimeoutObj;\n            }\n            onIdleTimeout(ctx, session) {\n                const { socket } = session;\n                const sessionInfo = ctx.sessionIdleTimeouts.get(session);\n                // if it is called while we have activeStreams - timer will not be rescheduled\n                // until last active stream is closed, then it will call .refresh() on the timer\n                // important part is to not clearTimeout(timer) or it becomes unusable\n                // for future refreshes\n                if (sessionInfo !== undefined &&\n                    sessionInfo.activeStreams === 0) {\n                    if (Date.now() - sessionInfo.lastIdle >= ctx.sessionIdleTimeout) {\n                        ctx.trace('Session idle timeout triggered for ' +\n                            (socket === null || socket === void 0 ? void 0 : socket.remoteAddress) +\n                            ':' +\n                            (socket === null || socket === void 0 ? void 0 : socket.remotePort) +\n                            ' last idle at ' +\n                            sessionInfo.lastIdle);\n                        ctx.closeSession(session);\n                    }\n                    else {\n                        sessionInfo.timeout.refresh();\n                    }\n                }\n            }\n            onStreamOpened(stream) {\n                const session = stream.session;\n                const idleTimeoutObj = this.sessionIdleTimeouts.get(session);\n                if (idleTimeoutObj) {\n                    idleTimeoutObj.activeStreams += 1;\n                    stream.once('close', idleTimeoutObj.onClose);\n                }\n            }\n            onStreamClose(session) {\n                var _b, _c;\n                const idleTimeoutObj = this.sessionIdleTimeouts.get(session);\n                if (idleTimeoutObj) {\n                    idleTimeoutObj.activeStreams -= 1;\n                    if (idleTimeoutObj.activeStreams === 0) {\n                        idleTimeoutObj.lastIdle = Date.now();\n                        idleTimeoutObj.timeout.refresh();\n                        this.trace('Session onStreamClose' +\n                            ((_b = session.socket) === null || _b === void 0 ? void 0 : _b.remoteAddress) +\n                            ':' +\n                            ((_c = session.socket) === null || _c === void 0 ? void 0 : _c.remotePort) +\n                            ' at ' +\n                            idleTimeoutObj.lastIdle);\n                    }\n                }\n            }\n        },\n        (() => {\n            const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n            _start_decorators = [deprecate('Calling start() is no longer necessary. It can be safely omitted.')];\n            __esDecorate(_a, null, _start_decorators, { kind: \"method\", name: \"start\", static: false, private: false, access: { has: obj => \"start\" in obj, get: obj => obj.start }, metadata: _metadata }, null, _instanceExtraInitializers);\n            if (_metadata) Object.defineProperty(_a, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });\n        })(),\n        _a;\n})();\nexports.Server = Server;\nasync function handleUnary(call, handler) {\n    let stream;\n    function respond(err, value, trailer, flags) {\n        if (err) {\n            call.sendStatus((0, server_call_1.serverErrorToStatus)(err, trailer));\n            return;\n        }\n        call.sendMessage(value, () => {\n            call.sendStatus({\n                code: constants_1.Status.OK,\n                details: 'OK',\n                metadata: trailer !== null && trailer !== void 0 ? trailer : null,\n            });\n        });\n    }\n    let requestMetadata;\n    let requestMessage = null;\n    call.start({\n        onReceiveMetadata(metadata) {\n            requestMetadata = metadata;\n            call.startRead();\n        },\n        onReceiveMessage(message) {\n            if (requestMessage) {\n                call.sendStatus({\n                    code: constants_1.Status.UNIMPLEMENTED,\n                    details: `Received a second request message for server streaming method ${handler.path}`,\n                    metadata: null,\n                });\n                return;\n            }\n            requestMessage = message;\n            call.startRead();\n        },\n        onReceiveHalfClose() {\n            if (!requestMessage) {\n                call.sendStatus({\n                    code: constants_1.Status.UNIMPLEMENTED,\n                    details: `Received no request message for server streaming method ${handler.path}`,\n                    metadata: null,\n                });\n                return;\n            }\n            stream = new server_call_1.ServerWritableStreamImpl(handler.path, call, requestMetadata, requestMessage);\n            try {\n                handler.func(stream, respond);\n            }\n            catch (err) {\n                call.sendStatus({\n                    code: constants_1.Status.UNKNOWN,\n                    details: `Server method handler threw error ${err.message}`,\n                    metadata: null,\n                });\n            }\n        },\n        onCancel() {\n            if (stream) {\n                stream.cancelled = true;\n                stream.emit('cancelled', 'cancelled');\n            }\n        },\n    });\n}\nfunction handleClientStreaming(call, handler) {\n    let stream;\n    function respond(err, value, trailer, flags) {\n        if (err) {\n            call.sendStatus((0, server_call_1.serverErrorToStatus)(err, trailer));\n            return;\n        }\n        call.sendMessage(value, () => {\n            call.sendStatus({\n                code: constants_1.Status.OK,\n                details: 'OK',\n                metadata: trailer !== null && trailer !== void 0 ? trailer : null,\n            });\n        });\n    }\n    call.start({\n        onReceiveMetadata(metadata) {\n            stream = new server_call_1.ServerDuplexStreamImpl(handler.path, call, metadata);\n            try {\n                handler.func(stream, respond);\n            }\n            catch (err) {\n                call.sendStatus({\n                    code: constants_1.Status.UNKNOWN,\n                    details: `Server method handler threw error ${err.message}`,\n                    metadata: null,\n                });\n            }\n        },\n        onReceiveMessage(message) {\n            stream.push(message);\n        },\n        onReceiveHalfClose() {\n            stream.push(null);\n        },\n        onCancel() {\n            if (stream) {\n                stream.cancelled = true;\n                stream.emit('cancelled', 'cancelled');\n                stream.destroy();\n            }\n        },\n    });\n}\nfunction handleServerStreaming(call, handler) {\n    let stream;\n    let requestMetadata;\n    let requestMessage = null;\n    call.start({\n        onReceiveMetadata(metadata) {\n            requestMetadata = metadata;\n            call.startRead();\n        },\n        onReceiveMessage(message) {\n            if (requestMessage) {\n                call.sendStatus({\n                    code: constants_1.Status.UNIMPLEMENTED,\n                    details: `Received a second request message for server streaming method ${handler.path}`,\n                    metadata: null,\n                });\n                return;\n            }\n            requestMessage = message;\n            call.startRead();\n        },\n        onReceiveHalfClose() {\n            if (!requestMessage) {\n                call.sendStatus({\n                    code: constants_1.Status.UNIMPLEMENTED,\n                    details: `Received no request message for server streaming method ${handler.path}`,\n                    metadata: null,\n                });\n                return;\n            }\n            stream = new server_call_1.ServerWritableStreamImpl(handler.path, call, requestMetadata, requestMessage);\n            try {\n                handler.func(stream);\n            }\n            catch (err) {\n                call.sendStatus({\n                    code: constants_1.Status.UNKNOWN,\n                    details: `Server method handler threw error ${err.message}`,\n                    metadata: null,\n                });\n            }\n        },\n        onCancel() {\n            if (stream) {\n                stream.cancelled = true;\n                stream.emit('cancelled', 'cancelled');\n                stream.destroy();\n            }\n        },\n    });\n}\nfunction handleBidiStreaming(call, handler) {\n    let stream;\n    call.start({\n        onReceiveMetadata(metadata) {\n            stream = new server_call_1.ServerDuplexStreamImpl(handler.path, call, metadata);\n            try {\n                handler.func(stream);\n            }\n            catch (err) {\n                call.sendStatus({\n                    code: constants_1.Status.UNKNOWN,\n                    details: `Server method handler threw error ${err.message}`,\n                    metadata: null,\n                });\n            }\n        },\n        onReceiveMessage(message) {\n            stream.push(message);\n        },\n        onReceiveHalfClose() {\n            stream.push(null);\n        },\n        onCancel() {\n            if (stream) {\n                stream.cancelled = true;\n                stream.emit('cancelled', 'cancelled');\n                stream.destroy();\n            }\n        },\n    });\n}\n//# sourceMappingURL=server.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StatusBuilder = void 0;\n/**\n * A builder for gRPC status objects.\n */\nclass StatusBuilder {\n    constructor() {\n        this.code = null;\n        this.details = null;\n        this.metadata = null;\n    }\n    /**\n     * Adds a status code to the builder.\n     */\n    withCode(code) {\n        this.code = code;\n        return this;\n    }\n    /**\n     * Adds details to the builder.\n     */\n    withDetails(details) {\n        this.details = details;\n        return this;\n    }\n    /**\n     * Adds metadata to the builder.\n     */\n    withMetadata(metadata) {\n        this.metadata = metadata;\n        return this;\n    }\n    /**\n     * Builds the status object.\n     */\n    build() {\n        const status = {};\n        if (this.code !== null) {\n            status.code = this.code;\n        }\n        if (this.details !== null) {\n            status.details = this.details;\n        }\n        if (this.metadata !== null) {\n            status.metadata = this.metadata;\n        }\n        return status;\n    }\n}\nexports.StatusBuilder = StatusBuilder;\n//# sourceMappingURL=status-builder.js.map",
    "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.msToDuration = msToDuration;\nexports.durationToMs = durationToMs;\nexports.isDuration = isDuration;\nexports.parseDuration = parseDuration;\nfunction msToDuration(millis) {\n    return {\n        seconds: (millis / 1000) | 0,\n        nanos: ((millis % 1000) * 1000000) | 0,\n    };\n}\nfunction durationToMs(duration) {\n    return (duration.seconds * 1000 + duration.nanos / 1000000) | 0;\n}\nfunction isDuration(value) {\n    return typeof value.seconds === 'number' && typeof value.nanos === 'number';\n}\nconst durationRegex = /^(\\d+)(?:\\.(\\d+))?s$/;\nfunction parseDuration(value) {\n    const match = value.match(durationRegex);\n    if (!match) {\n        return null;\n    }\n    return {\n        seconds: Number.parseInt(match[1], 10),\n        nanos: match[2] ? Number.parseInt(match[2].padEnd(9, '0'), 10) : 0\n    };\n}\n//# sourceMappingURL=duration.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LeafLoadBalancer = exports.PickFirstLoadBalancer = exports.PickFirstLoadBalancingConfig = void 0;\nexports.shuffled = shuffled;\nexports.setup = setup;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst picker_1 = require(\"./picker\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst subchannel_address_2 = require(\"./subchannel-address\");\nconst net_1 = require(\"net\");\nconst TRACER_NAME = 'pick_first';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'pick_first';\n/**\n * Delay after starting a connection on a subchannel before starting a\n * connection on the next subchannel in the list, for Happy Eyeballs algorithm.\n */\nconst CONNECTION_DELAY_INTERVAL_MS = 250;\nclass PickFirstLoadBalancingConfig {\n    constructor(shuffleAddressList) {\n        this.shuffleAddressList = shuffleAddressList;\n    }\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    toJsonObject() {\n        return {\n            [TYPE_NAME]: {\n                shuffleAddressList: this.shuffleAddressList,\n            },\n        };\n    }\n    getShuffleAddressList() {\n        return this.shuffleAddressList;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static createFromJson(obj) {\n        if ('shuffleAddressList' in obj &&\n            !(typeof obj.shuffleAddressList === 'boolean')) {\n            throw new Error('pick_first config field shuffleAddressList must be a boolean if provided');\n        }\n        return new PickFirstLoadBalancingConfig(obj.shuffleAddressList === true);\n    }\n}\nexports.PickFirstLoadBalancingConfig = PickFirstLoadBalancingConfig;\n/**\n * Picker for a `PickFirstLoadBalancer` in the READY state. Always returns the\n * picked subchannel.\n */\nclass PickFirstPicker {\n    constructor(subchannel) {\n        this.subchannel = subchannel;\n    }\n    pick(pickArgs) {\n        return {\n            pickResultType: picker_1.PickResultType.COMPLETE,\n            subchannel: this.subchannel,\n            status: null,\n            onCallStarted: null,\n            onCallEnded: null,\n        };\n    }\n}\n/**\n * Return a new array with the elements of the input array in a random order\n * @param list The input array\n * @returns A shuffled array of the elements of list\n */\nfunction shuffled(list) {\n    const result = list.slice();\n    for (let i = result.length - 1; i > 1; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = result[i];\n        result[i] = result[j];\n        result[j] = temp;\n    }\n    return result;\n}\n/**\n * Interleave addresses in addressList by family in accordance with RFC-8304 section 4\n * @param addressList\n * @returns\n */\nfunction interleaveAddressFamilies(addressList) {\n    const result = [];\n    const ipv6Addresses = [];\n    const ipv4Addresses = [];\n    const ipv6First = (0, subchannel_address_2.isTcpSubchannelAddress)(addressList[0]) && (0, net_1.isIPv6)(addressList[0].host);\n    for (const address of addressList) {\n        if ((0, subchannel_address_2.isTcpSubchannelAddress)(address) && (0, net_1.isIPv6)(address.host)) {\n            ipv6Addresses.push(address);\n        }\n        else {\n            ipv4Addresses.push(address);\n        }\n    }\n    const firstList = ipv6First ? ipv6Addresses : ipv4Addresses;\n    const secondList = ipv6First ? ipv4Addresses : ipv6Addresses;\n    for (let i = 0; i < Math.max(firstList.length, secondList.length); i++) {\n        if (i < firstList.length) {\n            result.push(firstList[i]);\n        }\n        if (i < secondList.length) {\n            result.push(secondList[i]);\n        }\n    }\n    return result;\n}\nconst REPORT_HEALTH_STATUS_OPTION_NAME = 'grpc-node.internal.pick-first.report_health_status';\nclass PickFirstLoadBalancer {\n    /**\n     * Load balancer that attempts to connect to each backend in the address list\n     * in order, and picks the first one that connects, using it for every\n     * request.\n     * @param channelControlHelper `ChannelControlHelper` instance provided by\n     *     this load balancer's owner.\n     */\n    constructor(channelControlHelper, credentials, options) {\n        this.channelControlHelper = channelControlHelper;\n        /**\n         * The list of subchannels this load balancer is currently attempting to\n         * connect to.\n         */\n        this.children = [];\n        /**\n         * The current connectivity state of the load balancer.\n         */\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        /**\n         * The index within the `subchannels` array of the subchannel with the most\n         * recently started connection attempt.\n         */\n        this.currentSubchannelIndex = 0;\n        /**\n         * The currently picked subchannel used for making calls. Populated if\n         * and only if the load balancer's current state is READY. In that case,\n         * the subchannel's current state is also READY.\n         */\n        this.currentPick = null;\n        /**\n         * Listener callback attached to each subchannel in the `subchannels` list\n         * while establishing a connection.\n         */\n        this.subchannelStateListener = (subchannel, previousState, newState, keepaliveTime, errorMessage) => {\n            this.onSubchannelStateUpdate(subchannel, previousState, newState, errorMessage);\n        };\n        this.pickedSubchannelHealthListener = () => this.calculateAndReportNewState();\n        /**\n         * The LB policy enters sticky TRANSIENT_FAILURE mode when all\n         * subchannels have failed to connect at least once, and it stays in that\n         * mode until a connection attempt is successful. While in sticky TF mode,\n         * the LB policy continuously attempts to connect to all of its subchannels.\n         */\n        this.stickyTransientFailureMode = false;\n        /**\n         * The most recent error reported by any subchannel as it transitioned to\n         * TRANSIENT_FAILURE.\n         */\n        this.lastError = null;\n        this.latestAddressList = null;\n        this.connectionDelayTimeout = setTimeout(() => { }, 0);\n        clearTimeout(this.connectionDelayTimeout);\n        this.reportHealthStatus = options[REPORT_HEALTH_STATUS_OPTION_NAME];\n    }\n    allChildrenHaveReportedTF() {\n        return this.children.every(child => child.hasReportedTransientFailure);\n    }\n    resetChildrenReportedTF() {\n        this.children.every(child => child.hasReportedTransientFailure = false);\n    }\n    calculateAndReportNewState() {\n        if (this.currentPick) {\n            if (this.reportHealthStatus && !this.currentPick.isHealthy()) {\n                this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker({\n                    details: `Picked subchannel ${this.currentPick.getAddress()} is unhealthy`,\n                }));\n            }\n            else {\n                this.updateState(connectivity_state_1.ConnectivityState.READY, new PickFirstPicker(this.currentPick));\n            }\n        }\n        else if (this.children.length === 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        }\n        else {\n            if (this.stickyTransientFailureMode) {\n                this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker({\n                    details: `No connection established. Last error: ${this.lastError}`,\n                }));\n            }\n            else {\n                this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, new picker_1.QueuePicker(this));\n            }\n        }\n    }\n    requestReresolution() {\n        this.channelControlHelper.requestReresolution();\n    }\n    maybeEnterStickyTransientFailureMode() {\n        if (!this.allChildrenHaveReportedTF()) {\n            return;\n        }\n        this.requestReresolution();\n        this.resetChildrenReportedTF();\n        if (this.stickyTransientFailureMode) {\n            this.calculateAndReportNewState();\n            return;\n        }\n        this.stickyTransientFailureMode = true;\n        for (const { subchannel } of this.children) {\n            subchannel.startConnecting();\n        }\n        this.calculateAndReportNewState();\n    }\n    removeCurrentPick() {\n        if (this.currentPick !== null) {\n            this.currentPick.removeConnectivityStateListener(this.subchannelStateListener);\n            this.channelControlHelper.removeChannelzChild(this.currentPick.getChannelzRef());\n            this.currentPick.removeHealthStateWatcher(this.pickedSubchannelHealthListener);\n            // Unref last, to avoid triggering listeners\n            this.currentPick.unref();\n            this.currentPick = null;\n        }\n    }\n    onSubchannelStateUpdate(subchannel, previousState, newState, errorMessage) {\n        var _a;\n        if ((_a = this.currentPick) === null || _a === void 0 ? void 0 : _a.realSubchannelEquals(subchannel)) {\n            if (newState !== connectivity_state_1.ConnectivityState.READY) {\n                this.removeCurrentPick();\n                this.calculateAndReportNewState();\n            }\n            return;\n        }\n        for (const [index, child] of this.children.entries()) {\n            if (subchannel.realSubchannelEquals(child.subchannel)) {\n                if (newState === connectivity_state_1.ConnectivityState.READY) {\n                    this.pickSubchannel(child.subchannel);\n                }\n                if (newState === connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                    child.hasReportedTransientFailure = true;\n                    if (errorMessage) {\n                        this.lastError = errorMessage;\n                    }\n                    this.maybeEnterStickyTransientFailureMode();\n                    if (index === this.currentSubchannelIndex) {\n                        this.startNextSubchannelConnecting(index + 1);\n                    }\n                }\n                child.subchannel.startConnecting();\n                return;\n            }\n        }\n    }\n    startNextSubchannelConnecting(startIndex) {\n        clearTimeout(this.connectionDelayTimeout);\n        for (const [index, child] of this.children.entries()) {\n            if (index >= startIndex) {\n                const subchannelState = child.subchannel.getConnectivityState();\n                if (subchannelState === connectivity_state_1.ConnectivityState.IDLE ||\n                    subchannelState === connectivity_state_1.ConnectivityState.CONNECTING) {\n                    this.startConnecting(index);\n                    return;\n                }\n            }\n        }\n        this.maybeEnterStickyTransientFailureMode();\n    }\n    /**\n     * Have a single subchannel in the `subchannels` list start connecting.\n     * @param subchannelIndex The index into the `subchannels` list.\n     */\n    startConnecting(subchannelIndex) {\n        var _a, _b;\n        clearTimeout(this.connectionDelayTimeout);\n        this.currentSubchannelIndex = subchannelIndex;\n        if (this.children[subchannelIndex].subchannel.getConnectivityState() ===\n            connectivity_state_1.ConnectivityState.IDLE) {\n            trace('Start connecting to subchannel with address ' +\n                this.children[subchannelIndex].subchannel.getAddress());\n            process.nextTick(() => {\n                var _a;\n                (_a = this.children[subchannelIndex]) === null || _a === void 0 ? void 0 : _a.subchannel.startConnecting();\n            });\n        }\n        this.connectionDelayTimeout = setTimeout(() => {\n            this.startNextSubchannelConnecting(subchannelIndex + 1);\n        }, CONNECTION_DELAY_INTERVAL_MS);\n        (_b = (_a = this.connectionDelayTimeout).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Declare that the specified subchannel should be used to make requests.\n     * This functions the same independent of whether subchannel is a member of\n     * this.children and whether it is equal to this.currentPick.\n     * Prerequisite: subchannel.getConnectivityState() === READY.\n     * @param subchannel\n     */\n    pickSubchannel(subchannel) {\n        trace('Pick subchannel with address ' + subchannel.getAddress());\n        this.stickyTransientFailureMode = false;\n        /* Ref before removeCurrentPick and resetSubchannelList to avoid the\n         * refcount dropping to 0 during this process. */\n        subchannel.ref();\n        this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n        this.removeCurrentPick();\n        this.resetSubchannelList();\n        subchannel.addConnectivityStateListener(this.subchannelStateListener);\n        subchannel.addHealthStateWatcher(this.pickedSubchannelHealthListener);\n        this.currentPick = subchannel;\n        clearTimeout(this.connectionDelayTimeout);\n        this.calculateAndReportNewState();\n    }\n    updateState(newState, picker) {\n        trace(connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        this.currentState = newState;\n        this.channelControlHelper.updateState(newState, picker);\n    }\n    resetSubchannelList() {\n        for (const child of this.children) {\n            /* Always remoev the connectivity state listener. If the subchannel is\n               getting picked, it will be re-added then. */\n            child.subchannel.removeConnectivityStateListener(this.subchannelStateListener);\n            /* Refs are counted independently for the children list and the\n             * currentPick, so we call unref whether or not the child is the\n             * currentPick. Channelz child references are also refcounted, so\n             * removeChannelzChild can be handled the same way. */\n            child.subchannel.unref();\n            this.channelControlHelper.removeChannelzChild(child.subchannel.getChannelzRef());\n        }\n        this.currentSubchannelIndex = 0;\n        this.children = [];\n    }\n    connectToAddressList(addressList) {\n        trace('connectToAddressList([' + addressList.map(address => (0, subchannel_address_1.subchannelAddressToString)(address)) + '])');\n        const newChildrenList = addressList.map(address => ({\n            subchannel: this.channelControlHelper.createSubchannel(address, {}, null),\n            hasReportedTransientFailure: false,\n        }));\n        for (const { subchannel } of newChildrenList) {\n            if (subchannel.getConnectivityState() === connectivity_state_1.ConnectivityState.READY) {\n                this.pickSubchannel(subchannel);\n                return;\n            }\n        }\n        /* Ref each subchannel before resetting the list, to ensure that\n         * subchannels shared between the list don't drop to 0 refs during the\n         * transition. */\n        for (const { subchannel } of newChildrenList) {\n            subchannel.ref();\n            this.channelControlHelper.addChannelzChild(subchannel.getChannelzRef());\n        }\n        this.resetSubchannelList();\n        this.children = newChildrenList;\n        for (const { subchannel } of this.children) {\n            subchannel.addConnectivityStateListener(this.subchannelStateListener);\n        }\n        for (const child of this.children) {\n            if (child.subchannel.getConnectivityState() ===\n                connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) {\n                child.hasReportedTransientFailure = true;\n            }\n        }\n        this.startNextSubchannelConnecting(0);\n        this.calculateAndReportNewState();\n    }\n    updateAddressList(endpointList, lbConfig) {\n        if (!(lbConfig instanceof PickFirstLoadBalancingConfig)) {\n            return;\n        }\n        /* Previously, an update would be discarded if it was identical to the\n         * previous update, to minimize churn. Now the DNS resolver is\n         * rate-limited, so that is less of a concern. */\n        if (lbConfig.getShuffleAddressList()) {\n            endpointList = shuffled(endpointList);\n        }\n        const rawAddressList = [].concat(...endpointList.map(endpoint => endpoint.addresses));\n        trace('updateAddressList([' + rawAddressList.map(address => (0, subchannel_address_1.subchannelAddressToString)(address)) + '])');\n        if (rawAddressList.length === 0) {\n            throw new Error('No addresses in endpoint list passed to pick_first');\n        }\n        const addressList = interleaveAddressFamilies(rawAddressList);\n        this.latestAddressList = addressList;\n        this.connectToAddressList(addressList);\n    }\n    exitIdle() {\n        if (this.currentState === connectivity_state_1.ConnectivityState.IDLE &&\n            this.latestAddressList) {\n            this.connectToAddressList(this.latestAddressList);\n        }\n    }\n    resetBackoff() {\n        /* The pick first load balancer does not have a connection backoff, so this\n         * does nothing */\n    }\n    destroy() {\n        this.resetSubchannelList();\n        this.removeCurrentPick();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.PickFirstLoadBalancer = PickFirstLoadBalancer;\nconst LEAF_CONFIG = new PickFirstLoadBalancingConfig(false);\n/**\n * This class handles the leaf load balancing operations for a single endpoint.\n * It is a thin wrapper around a PickFirstLoadBalancer with a different API\n * that more closely reflects how it will be used as a leaf balancer.\n */\nclass LeafLoadBalancer {\n    constructor(endpoint, channelControlHelper, credentials, options) {\n        this.endpoint = endpoint;\n        this.latestState = connectivity_state_1.ConnectivityState.IDLE;\n        const childChannelControlHelper = (0, load_balancer_1.createChildChannelControlHelper)(channelControlHelper, {\n            updateState: (connectivityState, picker) => {\n                this.latestState = connectivityState;\n                this.latestPicker = picker;\n                channelControlHelper.updateState(connectivityState, picker);\n            },\n        });\n        this.pickFirstBalancer = new PickFirstLoadBalancer(childChannelControlHelper, credentials, Object.assign(Object.assign({}, options), { [REPORT_HEALTH_STATUS_OPTION_NAME]: true }));\n        this.latestPicker = new picker_1.QueuePicker(this.pickFirstBalancer);\n    }\n    startConnecting() {\n        this.pickFirstBalancer.updateAddressList([this.endpoint], LEAF_CONFIG);\n    }\n    /**\n     * Update the endpoint associated with this LeafLoadBalancer to a new\n     * endpoint. Does not trigger connection establishment if a connection\n     * attempt is not already in progress.\n     * @param newEndpoint\n     */\n    updateEndpoint(newEndpoint) {\n        this.endpoint = newEndpoint;\n        if (this.latestState !== connectivity_state_1.ConnectivityState.IDLE) {\n            this.startConnecting();\n        }\n    }\n    getConnectivityState() {\n        return this.latestState;\n    }\n    getPicker() {\n        return this.latestPicker;\n    }\n    getEndpoint() {\n        return this.endpoint;\n    }\n    exitIdle() {\n        this.pickFirstBalancer.exitIdle();\n    }\n    destroy() {\n        this.pickFirstBalancer.destroy();\n    }\n}\nexports.LeafLoadBalancer = LeafLoadBalancer;\nfunction setup() {\n    (0, load_balancer_1.registerLoadBalancerType)(TYPE_NAME, PickFirstLoadBalancer, PickFirstLoadBalancingConfig);\n    (0, load_balancer_1.registerDefaultLoadBalancerType)(TYPE_NAME);\n}\n//# sourceMappingURL=load-balancer-pick-first.js.map",
    "\"use strict\";\n/*\n * Copyright 2024 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileWatcherCertificateProvider = void 0;\nconst fs = require(\"fs\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst util_1 = require(\"util\");\nconst TRACER_NAME = 'certificate_provider';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst readFilePromise = (0, util_1.promisify)(fs.readFile);\nclass FileWatcherCertificateProvider {\n    constructor(config) {\n        this.config = config;\n        this.refreshTimer = null;\n        this.fileResultPromise = null;\n        this.latestCaUpdate = null;\n        this.caListeners = new Set();\n        this.latestIdentityUpdate = null;\n        this.identityListeners = new Set();\n        this.lastUpdateTime = null;\n        if ((config.certificateFile === undefined) !== (config.privateKeyFile === undefined)) {\n            throw new Error('certificateFile and privateKeyFile must be set or unset together');\n        }\n        if (config.certificateFile === undefined && config.caCertificateFile === undefined) {\n            throw new Error('At least one of certificateFile and caCertificateFile must be set');\n        }\n        trace('File watcher constructed with config ' + JSON.stringify(config));\n    }\n    updateCertificates() {\n        if (this.fileResultPromise) {\n            return;\n        }\n        this.fileResultPromise = Promise.allSettled([\n            this.config.certificateFile ? readFilePromise(this.config.certificateFile) : Promise.reject(),\n            this.config.privateKeyFile ? readFilePromise(this.config.privateKeyFile) : Promise.reject(),\n            this.config.caCertificateFile ? readFilePromise(this.config.caCertificateFile) : Promise.reject()\n        ]);\n        this.fileResultPromise.then(([certificateResult, privateKeyResult, caCertificateResult]) => {\n            if (!this.refreshTimer) {\n                return;\n            }\n            trace('File watcher read certificates certificate' + (certificateResult ? '!=' : '==') + 'null, privateKey' + (privateKeyResult ? '!=' : '==') + 'null, CA certificate' + (caCertificateResult ? '!=' : '==') + 'null');\n            this.lastUpdateTime = new Date();\n            this.fileResultPromise = null;\n            if (certificateResult.status === 'fulfilled' && privateKeyResult.status === 'fulfilled') {\n                this.latestIdentityUpdate = {\n                    certificate: certificateResult.value,\n                    privateKey: privateKeyResult.value\n                };\n            }\n            else {\n                this.latestIdentityUpdate = null;\n            }\n            if (caCertificateResult.status === 'fulfilled') {\n                this.latestCaUpdate = {\n                    caCertificate: caCertificateResult.value\n                };\n            }\n            for (const listener of this.identityListeners) {\n                listener(this.latestIdentityUpdate);\n            }\n            for (const listener of this.caListeners) {\n                listener(this.latestCaUpdate);\n            }\n        });\n        trace('File watcher initiated certificate update');\n    }\n    maybeStartWatchingFiles() {\n        if (!this.refreshTimer) {\n            /* Perform the first read immediately, but only if there was not already\n             * a recent read, to avoid reading from the filesystem significantly more\n             * frequently than configured if the provider quickly switches between\n             * used and unused. */\n            const timeSinceLastUpdate = this.lastUpdateTime ? (new Date()).getTime() - this.lastUpdateTime.getTime() : Infinity;\n            if (timeSinceLastUpdate > this.config.refreshIntervalMs) {\n                this.updateCertificates();\n            }\n            if (timeSinceLastUpdate > this.config.refreshIntervalMs * 2) {\n                // Clear out old updates if they are definitely stale\n                this.latestCaUpdate = null;\n                this.latestIdentityUpdate = null;\n            }\n            this.refreshTimer = setInterval(() => this.updateCertificates(), this.config.refreshIntervalMs);\n            trace('File watcher started watching');\n        }\n    }\n    maybeStopWatchingFiles() {\n        if (this.caListeners.size === 0 && this.identityListeners.size === 0) {\n            this.fileResultPromise = null;\n            if (this.refreshTimer) {\n                clearInterval(this.refreshTimer);\n                this.refreshTimer = null;\n            }\n        }\n    }\n    addCaCertificateListener(listener) {\n        this.caListeners.add(listener);\n        this.maybeStartWatchingFiles();\n        process.nextTick(listener, this.latestCaUpdate);\n    }\n    removeCaCertificateListener(listener) {\n        this.caListeners.delete(listener);\n        this.maybeStopWatchingFiles();\n    }\n    addIdentityCertificateListener(listener) {\n        this.identityListeners.add(listener);\n        this.maybeStartWatchingFiles();\n        process.nextTick(listener, this.latestIdentityUpdate);\n    }\n    removeIdentityCertificateListener(listener) {\n        this.identityListeners.delete(listener);\n        this.maybeStopWatchingFiles();\n    }\n}\nexports.FileWatcherCertificateProvider = FileWatcherCertificateProvider;\n//# sourceMappingURL=certificate-provider.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createCertificateProviderChannelCredentials = exports.FileWatcherCertificateProvider = exports.createCertificateProviderServerCredentials = exports.createServerCredentialsWithInterceptors = exports.BaseSubchannelWrapper = exports.registerAdminService = exports.FilterStackFactory = exports.BaseFilter = exports.PickResultType = exports.QueuePicker = exports.UnavailablePicker = exports.ChildLoadBalancerHandler = exports.EndpointMap = exports.endpointHasAddress = exports.endpointToString = exports.subchannelAddressToString = exports.LeafLoadBalancer = exports.isLoadBalancerNameRegistered = exports.parseLoadBalancingConfig = exports.selectLbConfigFromList = exports.registerLoadBalancerType = exports.createChildChannelControlHelper = exports.BackoffTimeout = exports.parseDuration = exports.durationToMs = exports.splitHostPort = exports.uriToString = exports.createResolver = exports.registerResolver = exports.log = exports.trace = void 0;\nvar logging_1 = require(\"./logging\");\nObject.defineProperty(exports, \"trace\", { enumerable: true, get: function () { return logging_1.trace; } });\nObject.defineProperty(exports, \"log\", { enumerable: true, get: function () { return logging_1.log; } });\nvar resolver_1 = require(\"./resolver\");\nObject.defineProperty(exports, \"registerResolver\", { enumerable: true, get: function () { return resolver_1.registerResolver; } });\nObject.defineProperty(exports, \"createResolver\", { enumerable: true, get: function () { return resolver_1.createResolver; } });\nvar uri_parser_1 = require(\"./uri-parser\");\nObject.defineProperty(exports, \"uriToString\", { enumerable: true, get: function () { return uri_parser_1.uriToString; } });\nObject.defineProperty(exports, \"splitHostPort\", { enumerable: true, get: function () { return uri_parser_1.splitHostPort; } });\nvar duration_1 = require(\"./duration\");\nObject.defineProperty(exports, \"durationToMs\", { enumerable: true, get: function () { return duration_1.durationToMs; } });\nObject.defineProperty(exports, \"parseDuration\", { enumerable: true, get: function () { return duration_1.parseDuration; } });\nvar backoff_timeout_1 = require(\"./backoff-timeout\");\nObject.defineProperty(exports, \"BackoffTimeout\", { enumerable: true, get: function () { return backoff_timeout_1.BackoffTimeout; } });\nvar load_balancer_1 = require(\"./load-balancer\");\nObject.defineProperty(exports, \"createChildChannelControlHelper\", { enumerable: true, get: function () { return load_balancer_1.createChildChannelControlHelper; } });\nObject.defineProperty(exports, \"registerLoadBalancerType\", { enumerable: true, get: function () { return load_balancer_1.registerLoadBalancerType; } });\nObject.defineProperty(exports, \"selectLbConfigFromList\", { enumerable: true, get: function () { return load_balancer_1.selectLbConfigFromList; } });\nObject.defineProperty(exports, \"parseLoadBalancingConfig\", { enumerable: true, get: function () { return load_balancer_1.parseLoadBalancingConfig; } });\nObject.defineProperty(exports, \"isLoadBalancerNameRegistered\", { enumerable: true, get: function () { return load_balancer_1.isLoadBalancerNameRegistered; } });\nvar load_balancer_pick_first_1 = require(\"./load-balancer-pick-first\");\nObject.defineProperty(exports, \"LeafLoadBalancer\", { enumerable: true, get: function () { return load_balancer_pick_first_1.LeafLoadBalancer; } });\nvar subchannel_address_1 = require(\"./subchannel-address\");\nObject.defineProperty(exports, \"subchannelAddressToString\", { enumerable: true, get: function () { return subchannel_address_1.subchannelAddressToString; } });\nObject.defineProperty(exports, \"endpointToString\", { enumerable: true, get: function () { return subchannel_address_1.endpointToString; } });\nObject.defineProperty(exports, \"endpointHasAddress\", { enumerable: true, get: function () { return subchannel_address_1.endpointHasAddress; } });\nObject.defineProperty(exports, \"EndpointMap\", { enumerable: true, get: function () { return subchannel_address_1.EndpointMap; } });\nvar load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nObject.defineProperty(exports, \"ChildLoadBalancerHandler\", { enumerable: true, get: function () { return load_balancer_child_handler_1.ChildLoadBalancerHandler; } });\nvar picker_1 = require(\"./picker\");\nObject.defineProperty(exports, \"UnavailablePicker\", { enumerable: true, get: function () { return picker_1.UnavailablePicker; } });\nObject.defineProperty(exports, \"QueuePicker\", { enumerable: true, get: function () { return picker_1.QueuePicker; } });\nObject.defineProperty(exports, \"PickResultType\", { enumerable: true, get: function () { return picker_1.PickResultType; } });\nvar filter_1 = require(\"./filter\");\nObject.defineProperty(exports, \"BaseFilter\", { enumerable: true, get: function () { return filter_1.BaseFilter; } });\nvar filter_stack_1 = require(\"./filter-stack\");\nObject.defineProperty(exports, \"FilterStackFactory\", { enumerable: true, get: function () { return filter_stack_1.FilterStackFactory; } });\nvar admin_1 = require(\"./admin\");\nObject.defineProperty(exports, \"registerAdminService\", { enumerable: true, get: function () { return admin_1.registerAdminService; } });\nvar subchannel_interface_1 = require(\"./subchannel-interface\");\nObject.defineProperty(exports, \"BaseSubchannelWrapper\", { enumerable: true, get: function () { return subchannel_interface_1.BaseSubchannelWrapper; } });\nvar server_credentials_1 = require(\"./server-credentials\");\nObject.defineProperty(exports, \"createServerCredentialsWithInterceptors\", { enumerable: true, get: function () { return server_credentials_1.createServerCredentialsWithInterceptors; } });\nObject.defineProperty(exports, \"createCertificateProviderServerCredentials\", { enumerable: true, get: function () { return server_credentials_1.createCertificateProviderServerCredentials; } });\nvar certificate_provider_1 = require(\"./certificate-provider\");\nObject.defineProperty(exports, \"FileWatcherCertificateProvider\", { enumerable: true, get: function () { return certificate_provider_1.FileWatcherCertificateProvider; } });\nvar channel_credentials_1 = require(\"./channel-credentials\");\nObject.defineProperty(exports, \"createCertificateProviderChannelCredentials\", { enumerable: true, get: function () { return channel_credentials_1.createCertificateProviderChannelCredentials; } });\n//# sourceMappingURL=experimental.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = setup;\nconst resolver_1 = require(\"./resolver\");\nclass UdsResolver {\n    constructor(target, listener, channelOptions) {\n        this.listener = listener;\n        this.hasReturnedResult = false;\n        this.endpoints = [];\n        let path;\n        if (target.authority === '') {\n            path = '/' + target.path;\n        }\n        else {\n            path = target.path;\n        }\n        this.endpoints = [{ addresses: [{ path }] }];\n    }\n    updateResolution() {\n        if (!this.hasReturnedResult) {\n            this.hasReturnedResult = true;\n            process.nextTick(this.listener.onSuccessfulResolution, this.endpoints, null, null, null, {});\n        }\n    }\n    destroy() {\n        this.hasReturnedResult = false;\n    }\n    static getDefaultAuthority(target) {\n        return 'localhost';\n    }\n}\nfunction setup() {\n    (0, resolver_1.registerResolver)('unix', UdsResolver);\n}\n//# sourceMappingURL=resolver-uds.js.map",
    "\"use strict\";\n/*\n * Copyright 2021 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setup = setup;\nconst net_1 = require(\"net\");\nconst constants_1 = require(\"./constants\");\nconst metadata_1 = require(\"./metadata\");\nconst resolver_1 = require(\"./resolver\");\nconst uri_parser_1 = require(\"./uri-parser\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'ip_resolver';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst IPV4_SCHEME = 'ipv4';\nconst IPV6_SCHEME = 'ipv6';\n/**\n * The default TCP port to connect to if not explicitly specified in the target.\n */\nconst DEFAULT_PORT = 443;\nclass IpResolver {\n    constructor(target, listener, channelOptions) {\n        var _a;\n        this.listener = listener;\n        this.endpoints = [];\n        this.error = null;\n        this.hasReturnedResult = false;\n        trace('Resolver constructed for target ' + (0, uri_parser_1.uriToString)(target));\n        const addresses = [];\n        if (!(target.scheme === IPV4_SCHEME || target.scheme === IPV6_SCHEME)) {\n            this.error = {\n                code: constants_1.Status.UNAVAILABLE,\n                details: `Unrecognized scheme ${target.scheme} in IP resolver`,\n                metadata: new metadata_1.Metadata(),\n            };\n            return;\n        }\n        const pathList = target.path.split(',');\n        for (const path of pathList) {\n            const hostPort = (0, uri_parser_1.splitHostPort)(path);\n            if (hostPort === null) {\n                this.error = {\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse ${target.scheme} address ${path}`,\n                    metadata: new metadata_1.Metadata(),\n                };\n                return;\n            }\n            if ((target.scheme === IPV4_SCHEME && !(0, net_1.isIPv4)(hostPort.host)) ||\n                (target.scheme === IPV6_SCHEME && !(0, net_1.isIPv6)(hostPort.host))) {\n                this.error = {\n                    code: constants_1.Status.UNAVAILABLE,\n                    details: `Failed to parse ${target.scheme} address ${path}`,\n                    metadata: new metadata_1.Metadata(),\n                };\n                return;\n            }\n            addresses.push({\n                host: hostPort.host,\n                port: (_a = hostPort.port) !== null && _a !== void 0 ? _a : DEFAULT_PORT,\n            });\n        }\n        this.endpoints = addresses.map(address => ({ addresses: [address] }));\n        trace('Parsed ' + target.scheme + ' address list ' + addresses);\n    }\n    updateResolution() {\n        if (!this.hasReturnedResult) {\n            this.hasReturnedResult = true;\n            process.nextTick(() => {\n                if (this.error) {\n                    this.listener.onError(this.error);\n                }\n                else {\n                    this.listener.onSuccessfulResolution(this.endpoints, null, null, null, {});\n                }\n            });\n        }\n    }\n    destroy() {\n        this.hasReturnedResult = false;\n    }\n    static getDefaultAuthority(target) {\n        return target.path.split(',')[0];\n    }\n}\nfunction setup() {\n    (0, resolver_1.registerResolver)(IPV4_SCHEME, IpResolver);\n    (0, resolver_1.registerResolver)(IPV6_SCHEME, IpResolver);\n}\n//# sourceMappingURL=resolver-ip.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RoundRobinLoadBalancer = void 0;\nexports.setup = setup;\nconst load_balancer_1 = require(\"./load-balancer\");\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst picker_1 = require(\"./picker\");\nconst logging = require(\"./logging\");\nconst constants_1 = require(\"./constants\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst load_balancer_pick_first_1 = require(\"./load-balancer-pick-first\");\nconst TRACER_NAME = 'round_robin';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'round_robin';\nclass RoundRobinLoadBalancingConfig {\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    constructor() { }\n    toJsonObject() {\n        return {\n            [TYPE_NAME]: {},\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static createFromJson(obj) {\n        return new RoundRobinLoadBalancingConfig();\n    }\n}\nclass RoundRobinPicker {\n    constructor(children, nextIndex = 0) {\n        this.children = children;\n        this.nextIndex = nextIndex;\n    }\n    pick(pickArgs) {\n        const childPicker = this.children[this.nextIndex].picker;\n        this.nextIndex = (this.nextIndex + 1) % this.children.length;\n        return childPicker.pick(pickArgs);\n    }\n    /**\n     * Check what the next subchannel returned would be. Used by the load\n     * balancer implementation to preserve this part of the picker state if\n     * possible when a subchannel connects or disconnects.\n     */\n    peekNextEndpoint() {\n        return this.children[this.nextIndex].endpoint;\n    }\n}\nclass RoundRobinLoadBalancer {\n    constructor(channelControlHelper, credentials, options) {\n        this.channelControlHelper = channelControlHelper;\n        this.credentials = credentials;\n        this.options = options;\n        this.children = [];\n        this.currentState = connectivity_state_1.ConnectivityState.IDLE;\n        this.currentReadyPicker = null;\n        this.updatesPaused = false;\n        this.lastError = null;\n        this.childChannelControlHelper = (0, load_balancer_1.createChildChannelControlHelper)(channelControlHelper, {\n            updateState: (connectivityState, picker) => {\n                /* Ensure that name resolution is requested again after active\n                 * connections are dropped. This is more aggressive than necessary to\n                 * accomplish that, so we are counting on resolvers to have\n                 * reasonable rate limits. */\n                if (this.currentState === connectivity_state_1.ConnectivityState.READY && connectivityState !== connectivity_state_1.ConnectivityState.READY) {\n                    this.channelControlHelper.requestReresolution();\n                }\n                this.calculateAndUpdateState();\n            },\n        });\n    }\n    countChildrenWithState(state) {\n        return this.children.filter(child => child.getConnectivityState() === state)\n            .length;\n    }\n    calculateAndUpdateState() {\n        if (this.updatesPaused) {\n            return;\n        }\n        if (this.countChildrenWithState(connectivity_state_1.ConnectivityState.READY) > 0) {\n            const readyChildren = this.children.filter(child => child.getConnectivityState() === connectivity_state_1.ConnectivityState.READY);\n            let index = 0;\n            if (this.currentReadyPicker !== null) {\n                const nextPickedEndpoint = this.currentReadyPicker.peekNextEndpoint();\n                index = readyChildren.findIndex(child => (0, subchannel_address_1.endpointEqual)(child.getEndpoint(), nextPickedEndpoint));\n                if (index < 0) {\n                    index = 0;\n                }\n            }\n            this.updateState(connectivity_state_1.ConnectivityState.READY, new RoundRobinPicker(readyChildren.map(child => ({\n                endpoint: child.getEndpoint(),\n                picker: child.getPicker(),\n            })), index));\n        }\n        else if (this.countChildrenWithState(connectivity_state_1.ConnectivityState.CONNECTING) > 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.CONNECTING, new picker_1.QueuePicker(this));\n        }\n        else if (this.countChildrenWithState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE) > 0) {\n            this.updateState(connectivity_state_1.ConnectivityState.TRANSIENT_FAILURE, new picker_1.UnavailablePicker({\n                details: `No connection established. Last error: ${this.lastError}`,\n            }));\n        }\n        else {\n            this.updateState(connectivity_state_1.ConnectivityState.IDLE, new picker_1.QueuePicker(this));\n        }\n        /* round_robin should keep all children connected, this is how we do that.\n         * We can't do this more efficiently in the individual child's updateState\n         * callback because that doesn't have a reference to which child the state\n         * change is associated with. */\n        for (const child of this.children) {\n            if (child.getConnectivityState() === connectivity_state_1.ConnectivityState.IDLE) {\n                child.exitIdle();\n            }\n        }\n    }\n    updateState(newState, picker) {\n        trace(connectivity_state_1.ConnectivityState[this.currentState] +\n            ' -> ' +\n            connectivity_state_1.ConnectivityState[newState]);\n        if (newState === connectivity_state_1.ConnectivityState.READY) {\n            this.currentReadyPicker = picker;\n        }\n        else {\n            this.currentReadyPicker = null;\n        }\n        this.currentState = newState;\n        this.channelControlHelper.updateState(newState, picker);\n    }\n    resetSubchannelList() {\n        for (const child of this.children) {\n            child.destroy();\n        }\n    }\n    updateAddressList(endpointList, lbConfig) {\n        this.resetSubchannelList();\n        trace('Connect to endpoint list ' + endpointList.map(subchannel_address_1.endpointToString));\n        this.updatesPaused = true;\n        this.children = endpointList.map(endpoint => new load_balancer_pick_first_1.LeafLoadBalancer(endpoint, this.childChannelControlHelper, this.credentials, this.options));\n        for (const child of this.children) {\n            child.startConnecting();\n        }\n        this.updatesPaused = false;\n        this.calculateAndUpdateState();\n    }\n    exitIdle() {\n        /* The round_robin LB policy is only in the IDLE state if it has no\n         * addresses to try to connect to and it has no picked subchannel.\n         * In that case, there is no meaningful action that can be taken here. */\n    }\n    resetBackoff() {\n        // This LB policy has no backoff to reset\n    }\n    destroy() {\n        this.resetSubchannelList();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.RoundRobinLoadBalancer = RoundRobinLoadBalancer;\nfunction setup() {\n    (0, load_balancer_1.registerLoadBalancerType)(TYPE_NAME, RoundRobinLoadBalancer, RoundRobinLoadBalancingConfig);\n}\n//# sourceMappingURL=load-balancer-round-robin.js.map",
    "\"use strict\";\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutlierDetectionLoadBalancer = exports.OutlierDetectionLoadBalancingConfig = void 0;\nexports.setup = setup;\nconst connectivity_state_1 = require(\"./connectivity-state\");\nconst constants_1 = require(\"./constants\");\nconst duration_1 = require(\"./duration\");\nconst experimental_1 = require(\"./experimental\");\nconst load_balancer_1 = require(\"./load-balancer\");\nconst load_balancer_child_handler_1 = require(\"./load-balancer-child-handler\");\nconst picker_1 = require(\"./picker\");\nconst subchannel_address_1 = require(\"./subchannel-address\");\nconst subchannel_interface_1 = require(\"./subchannel-interface\");\nconst logging = require(\"./logging\");\nconst TRACER_NAME = 'outlier_detection';\nfunction trace(text) {\n    logging.trace(constants_1.LogVerbosity.DEBUG, TRACER_NAME, text);\n}\nconst TYPE_NAME = 'outlier_detection';\nconst OUTLIER_DETECTION_ENABLED = ((_a = process.env.GRPC_EXPERIMENTAL_ENABLE_OUTLIER_DETECTION) !== null && _a !== void 0 ? _a : 'true') === 'true';\nconst defaultSuccessRateEjectionConfig = {\n    stdev_factor: 1900,\n    enforcement_percentage: 100,\n    minimum_hosts: 5,\n    request_volume: 100,\n};\nconst defaultFailurePercentageEjectionConfig = {\n    threshold: 85,\n    enforcement_percentage: 100,\n    minimum_hosts: 5,\n    request_volume: 50,\n};\nfunction validateFieldType(obj, fieldName, expectedType, objectName) {\n    if (fieldName in obj &&\n        obj[fieldName] !== undefined &&\n        typeof obj[fieldName] !== expectedType) {\n        const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n        throw new Error(`outlier detection config ${fullFieldName} parse error: expected ${expectedType}, got ${typeof obj[fieldName]}`);\n    }\n}\nfunction validatePositiveDuration(obj, fieldName, objectName) {\n    const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n    if (fieldName in obj && obj[fieldName] !== undefined) {\n        if (!(0, duration_1.isDuration)(obj[fieldName])) {\n            throw new Error(`outlier detection config ${fullFieldName} parse error: expected Duration, got ${typeof obj[fieldName]}`);\n        }\n        if (!(obj[fieldName].seconds >= 0 &&\n            obj[fieldName].seconds <= 315576000000 &&\n            obj[fieldName].nanos >= 0 &&\n            obj[fieldName].nanos <= 999999999)) {\n            throw new Error(`outlier detection config ${fullFieldName} parse error: values out of range for non-negative Duaration`);\n        }\n    }\n}\nfunction validatePercentage(obj, fieldName, objectName) {\n    const fullFieldName = objectName ? `${objectName}.${fieldName}` : fieldName;\n    validateFieldType(obj, fieldName, 'number', objectName);\n    if (fieldName in obj &&\n        obj[fieldName] !== undefined &&\n        !(obj[fieldName] >= 0 && obj[fieldName] <= 100)) {\n        throw new Error(`outlier detection config ${fullFieldName} parse error: value out of range for percentage (0-100)`);\n    }\n}\nclass OutlierDetectionLoadBalancingConfig {\n    constructor(intervalMs, baseEjectionTimeMs, maxEjectionTimeMs, maxEjectionPercent, successRateEjection, failurePercentageEjection, childPolicy) {\n        this.childPolicy = childPolicy;\n        if (childPolicy.getLoadBalancerName() === 'pick_first') {\n            throw new Error('outlier_detection LB policy cannot have a pick_first child policy');\n        }\n        this.intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 10000;\n        this.baseEjectionTimeMs = baseEjectionTimeMs !== null && baseEjectionTimeMs !== void 0 ? baseEjectionTimeMs : 30000;\n        this.maxEjectionTimeMs = maxEjectionTimeMs !== null && maxEjectionTimeMs !== void 0 ? maxEjectionTimeMs : 300000;\n        this.maxEjectionPercent = maxEjectionPercent !== null && maxEjectionPercent !== void 0 ? maxEjectionPercent : 10;\n        this.successRateEjection = successRateEjection\n            ? Object.assign(Object.assign({}, defaultSuccessRateEjectionConfig), successRateEjection) : null;\n        this.failurePercentageEjection = failurePercentageEjection\n            ? Object.assign(Object.assign({}, defaultFailurePercentageEjectionConfig), failurePercentageEjection) : null;\n    }\n    getLoadBalancerName() {\n        return TYPE_NAME;\n    }\n    toJsonObject() {\n        var _a, _b;\n        return {\n            outlier_detection: {\n                interval: (0, duration_1.msToDuration)(this.intervalMs),\n                base_ejection_time: (0, duration_1.msToDuration)(this.baseEjectionTimeMs),\n                max_ejection_time: (0, duration_1.msToDuration)(this.maxEjectionTimeMs),\n                max_ejection_percent: this.maxEjectionPercent,\n                success_rate_ejection: (_a = this.successRateEjection) !== null && _a !== void 0 ? _a : undefined,\n                failure_percentage_ejection: (_b = this.failurePercentageEjection) !== null && _b !== void 0 ? _b : undefined,\n                child_policy: [this.childPolicy.toJsonObject()],\n            },\n        };\n    }\n    getIntervalMs() {\n        return this.intervalMs;\n    }\n    getBaseEjectionTimeMs() {\n        return this.baseEjectionTimeMs;\n    }\n    getMaxEjectionTimeMs() {\n        return this.maxEjectionTimeMs;\n    }\n    getMaxEjectionPercent() {\n        return this.maxEjectionPercent;\n    }\n    getSuccessRateEjectionConfig() {\n        return this.successRateEjection;\n    }\n    getFailurePercentageEjectionConfig() {\n        return this.failurePercentageEjection;\n    }\n    getChildPolicy() {\n        return this.childPolicy;\n    }\n    static createFromJson(obj) {\n        var _a;\n        validatePositiveDuration(obj, 'interval');\n        validatePositiveDuration(obj, 'base_ejection_time');\n        validatePositiveDuration(obj, 'max_ejection_time');\n        validatePercentage(obj, 'max_ejection_percent');\n        if ('success_rate_ejection' in obj &&\n            obj.success_rate_ejection !== undefined) {\n            if (typeof obj.success_rate_ejection !== 'object') {\n                throw new Error('outlier detection config success_rate_ejection must be an object');\n            }\n            validateFieldType(obj.success_rate_ejection, 'stdev_factor', 'number', 'success_rate_ejection');\n            validatePercentage(obj.success_rate_ejection, 'enforcement_percentage', 'success_rate_ejection');\n            validateFieldType(obj.success_rate_ejection, 'minimum_hosts', 'number', 'success_rate_ejection');\n            validateFieldType(obj.success_rate_ejection, 'request_volume', 'number', 'success_rate_ejection');\n        }\n        if ('failure_percentage_ejection' in obj &&\n            obj.failure_percentage_ejection !== undefined) {\n            if (typeof obj.failure_percentage_ejection !== 'object') {\n                throw new Error('outlier detection config failure_percentage_ejection must be an object');\n            }\n            validatePercentage(obj.failure_percentage_ejection, 'threshold', 'failure_percentage_ejection');\n            validatePercentage(obj.failure_percentage_ejection, 'enforcement_percentage', 'failure_percentage_ejection');\n            validateFieldType(obj.failure_percentage_ejection, 'minimum_hosts', 'number', 'failure_percentage_ejection');\n            validateFieldType(obj.failure_percentage_ejection, 'request_volume', 'number', 'failure_percentage_ejection');\n        }\n        if (!('child_policy' in obj) || !Array.isArray(obj.child_policy)) {\n            throw new Error('outlier detection config child_policy must be an array');\n        }\n        const childPolicy = (0, load_balancer_1.selectLbConfigFromList)(obj.child_policy);\n        if (!childPolicy) {\n            throw new Error('outlier detection config child_policy: no valid recognized policy found');\n        }\n        return new OutlierDetectionLoadBalancingConfig(obj.interval ? (0, duration_1.durationToMs)(obj.interval) : null, obj.base_ejection_time ? (0, duration_1.durationToMs)(obj.base_ejection_time) : null, obj.max_ejection_time ? (0, duration_1.durationToMs)(obj.max_ejection_time) : null, (_a = obj.max_ejection_percent) !== null && _a !== void 0 ? _a : null, obj.success_rate_ejection, obj.failure_percentage_ejection, childPolicy);\n    }\n}\nexports.OutlierDetectionLoadBalancingConfig = OutlierDetectionLoadBalancingConfig;\nclass OutlierDetectionSubchannelWrapper extends subchannel_interface_1.BaseSubchannelWrapper {\n    constructor(childSubchannel, mapEntry) {\n        super(childSubchannel);\n        this.mapEntry = mapEntry;\n        this.refCount = 0;\n    }\n    ref() {\n        this.child.ref();\n        this.refCount += 1;\n    }\n    unref() {\n        this.child.unref();\n        this.refCount -= 1;\n        if (this.refCount <= 0) {\n            if (this.mapEntry) {\n                const index = this.mapEntry.subchannelWrappers.indexOf(this);\n                if (index >= 0) {\n                    this.mapEntry.subchannelWrappers.splice(index, 1);\n                }\n            }\n        }\n    }\n    eject() {\n        this.setHealthy(false);\n    }\n    uneject() {\n        this.setHealthy(true);\n    }\n    getMapEntry() {\n        return this.mapEntry;\n    }\n    getWrappedSubchannel() {\n        return this.child;\n    }\n}\nfunction createEmptyBucket() {\n    return {\n        success: 0,\n        failure: 0,\n    };\n}\nclass CallCounter {\n    constructor() {\n        this.activeBucket = createEmptyBucket();\n        this.inactiveBucket = createEmptyBucket();\n    }\n    addSuccess() {\n        this.activeBucket.success += 1;\n    }\n    addFailure() {\n        this.activeBucket.failure += 1;\n    }\n    switchBuckets() {\n        this.inactiveBucket = this.activeBucket;\n        this.activeBucket = createEmptyBucket();\n    }\n    getLastSuccesses() {\n        return this.inactiveBucket.success;\n    }\n    getLastFailures() {\n        return this.inactiveBucket.failure;\n    }\n}\nclass OutlierDetectionPicker {\n    constructor(wrappedPicker, countCalls) {\n        this.wrappedPicker = wrappedPicker;\n        this.countCalls = countCalls;\n    }\n    pick(pickArgs) {\n        const wrappedPick = this.wrappedPicker.pick(pickArgs);\n        if (wrappedPick.pickResultType === picker_1.PickResultType.COMPLETE) {\n            const subchannelWrapper = wrappedPick.subchannel;\n            const mapEntry = subchannelWrapper.getMapEntry();\n            if (mapEntry) {\n                let onCallEnded = wrappedPick.onCallEnded;\n                if (this.countCalls) {\n                    onCallEnded = statusCode => {\n                        var _a;\n                        if (statusCode === constants_1.Status.OK) {\n                            mapEntry.counter.addSuccess();\n                        }\n                        else {\n                            mapEntry.counter.addFailure();\n                        }\n                        (_a = wrappedPick.onCallEnded) === null || _a === void 0 ? void 0 : _a.call(wrappedPick, statusCode);\n                    };\n                }\n                return Object.assign(Object.assign({}, wrappedPick), { subchannel: subchannelWrapper.getWrappedSubchannel(), onCallEnded: onCallEnded });\n            }\n            else {\n                return Object.assign(Object.assign({}, wrappedPick), { subchannel: subchannelWrapper.getWrappedSubchannel() });\n            }\n        }\n        else {\n            return wrappedPick;\n        }\n    }\n}\nclass OutlierDetectionLoadBalancer {\n    constructor(channelControlHelper, credentials, options) {\n        this.entryMap = new subchannel_address_1.EndpointMap();\n        this.latestConfig = null;\n        this.timerStartTime = null;\n        this.childBalancer = new load_balancer_child_handler_1.ChildLoadBalancerHandler((0, experimental_1.createChildChannelControlHelper)(channelControlHelper, {\n            createSubchannel: (subchannelAddress, subchannelArgs, credentialsOverride) => {\n                const originalSubchannel = channelControlHelper.createSubchannel(subchannelAddress, subchannelArgs, credentialsOverride);\n                const mapEntry = this.entryMap.getForSubchannelAddress(subchannelAddress);\n                const subchannelWrapper = new OutlierDetectionSubchannelWrapper(originalSubchannel, mapEntry);\n                if ((mapEntry === null || mapEntry === void 0 ? void 0 : mapEntry.currentEjectionTimestamp) !== null) {\n                    // If the address is ejected, propagate that to the new subchannel wrapper\n                    subchannelWrapper.eject();\n                }\n                mapEntry === null || mapEntry === void 0 ? void 0 : mapEntry.subchannelWrappers.push(subchannelWrapper);\n                return subchannelWrapper;\n            },\n            updateState: (connectivityState, picker) => {\n                if (connectivityState === connectivity_state_1.ConnectivityState.READY) {\n                    channelControlHelper.updateState(connectivityState, new OutlierDetectionPicker(picker, this.isCountingEnabled()));\n                }\n                else {\n                    channelControlHelper.updateState(connectivityState, picker);\n                }\n            },\n        }), credentials, options);\n        this.ejectionTimer = setInterval(() => { }, 0);\n        clearInterval(this.ejectionTimer);\n    }\n    isCountingEnabled() {\n        return (this.latestConfig !== null &&\n            (this.latestConfig.getSuccessRateEjectionConfig() !== null ||\n                this.latestConfig.getFailurePercentageEjectionConfig() !== null));\n    }\n    getCurrentEjectionPercent() {\n        let ejectionCount = 0;\n        for (const mapEntry of this.entryMap.values()) {\n            if (mapEntry.currentEjectionTimestamp !== null) {\n                ejectionCount += 1;\n            }\n        }\n        return (ejectionCount * 100) / this.entryMap.size;\n    }\n    runSuccessRateCheck(ejectionTimestamp) {\n        if (!this.latestConfig) {\n            return;\n        }\n        const successRateConfig = this.latestConfig.getSuccessRateEjectionConfig();\n        if (!successRateConfig) {\n            return;\n        }\n        trace('Running success rate check');\n        // Step 1\n        const targetRequestVolume = successRateConfig.request_volume;\n        let addresesWithTargetVolume = 0;\n        const successRates = [];\n        for (const [endpoint, mapEntry] of this.entryMap.entries()) {\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            trace('Stats for ' +\n                (0, subchannel_address_1.endpointToString)(endpoint) +\n                ': successes=' +\n                successes +\n                ' failures=' +\n                failures +\n                ' targetRequestVolume=' +\n                targetRequestVolume);\n            if (successes + failures >= targetRequestVolume) {\n                addresesWithTargetVolume += 1;\n                successRates.push(successes / (successes + failures));\n            }\n        }\n        trace('Found ' +\n            addresesWithTargetVolume +\n            ' success rate candidates; currentEjectionPercent=' +\n            this.getCurrentEjectionPercent() +\n            ' successRates=[' +\n            successRates +\n            ']');\n        if (addresesWithTargetVolume < successRateConfig.minimum_hosts) {\n            return;\n        }\n        // Step 2\n        const successRateMean = successRates.reduce((a, b) => a + b) / successRates.length;\n        let successRateDeviationSum = 0;\n        for (const rate of successRates) {\n            const deviation = rate - successRateMean;\n            successRateDeviationSum += deviation * deviation;\n        }\n        const successRateVariance = successRateDeviationSum / successRates.length;\n        const successRateStdev = Math.sqrt(successRateVariance);\n        const ejectionThreshold = successRateMean -\n            successRateStdev * (successRateConfig.stdev_factor / 1000);\n        trace('stdev=' + successRateStdev + ' ejectionThreshold=' + ejectionThreshold);\n        // Step 3\n        for (const [address, mapEntry] of this.entryMap.entries()) {\n            // Step 3.i\n            if (this.getCurrentEjectionPercent() >=\n                this.latestConfig.getMaxEjectionPercent()) {\n                break;\n            }\n            // Step 3.ii\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            if (successes + failures < targetRequestVolume) {\n                continue;\n            }\n            // Step 3.iii\n            const successRate = successes / (successes + failures);\n            trace('Checking candidate ' + address + ' successRate=' + successRate);\n            if (successRate < ejectionThreshold) {\n                const randomNumber = Math.random() * 100;\n                trace('Candidate ' +\n                    address +\n                    ' randomNumber=' +\n                    randomNumber +\n                    ' enforcement_percentage=' +\n                    successRateConfig.enforcement_percentage);\n                if (randomNumber < successRateConfig.enforcement_percentage) {\n                    trace('Ejecting candidate ' + address);\n                    this.eject(mapEntry, ejectionTimestamp);\n                }\n            }\n        }\n    }\n    runFailurePercentageCheck(ejectionTimestamp) {\n        if (!this.latestConfig) {\n            return;\n        }\n        const failurePercentageConfig = this.latestConfig.getFailurePercentageEjectionConfig();\n        if (!failurePercentageConfig) {\n            return;\n        }\n        trace('Running failure percentage check. threshold=' +\n            failurePercentageConfig.threshold +\n            ' request volume threshold=' +\n            failurePercentageConfig.request_volume);\n        // Step 1\n        let addressesWithTargetVolume = 0;\n        for (const mapEntry of this.entryMap.values()) {\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            if (successes + failures >= failurePercentageConfig.request_volume) {\n                addressesWithTargetVolume += 1;\n            }\n        }\n        if (addressesWithTargetVolume < failurePercentageConfig.minimum_hosts) {\n            return;\n        }\n        // Step 2\n        for (const [address, mapEntry] of this.entryMap.entries()) {\n            // Step 2.i\n            if (this.getCurrentEjectionPercent() >=\n                this.latestConfig.getMaxEjectionPercent()) {\n                break;\n            }\n            // Step 2.ii\n            const successes = mapEntry.counter.getLastSuccesses();\n            const failures = mapEntry.counter.getLastFailures();\n            trace('Candidate successes=' + successes + ' failures=' + failures);\n            if (successes + failures < failurePercentageConfig.request_volume) {\n                continue;\n            }\n            // Step 2.iii\n            const failurePercentage = (failures * 100) / (failures + successes);\n            if (failurePercentage > failurePercentageConfig.threshold) {\n                const randomNumber = Math.random() * 100;\n                trace('Candidate ' +\n                    address +\n                    ' randomNumber=' +\n                    randomNumber +\n                    ' enforcement_percentage=' +\n                    failurePercentageConfig.enforcement_percentage);\n                if (randomNumber < failurePercentageConfig.enforcement_percentage) {\n                    trace('Ejecting candidate ' + address);\n                    this.eject(mapEntry, ejectionTimestamp);\n                }\n            }\n        }\n    }\n    eject(mapEntry, ejectionTimestamp) {\n        mapEntry.currentEjectionTimestamp = new Date();\n        mapEntry.ejectionTimeMultiplier += 1;\n        for (const subchannelWrapper of mapEntry.subchannelWrappers) {\n            subchannelWrapper.eject();\n        }\n    }\n    uneject(mapEntry) {\n        mapEntry.currentEjectionTimestamp = null;\n        for (const subchannelWrapper of mapEntry.subchannelWrappers) {\n            subchannelWrapper.uneject();\n        }\n    }\n    switchAllBuckets() {\n        for (const mapEntry of this.entryMap.values()) {\n            mapEntry.counter.switchBuckets();\n        }\n    }\n    startTimer(delayMs) {\n        var _a, _b;\n        this.ejectionTimer = setTimeout(() => this.runChecks(), delayMs);\n        (_b = (_a = this.ejectionTimer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    runChecks() {\n        const ejectionTimestamp = new Date();\n        trace('Ejection timer running');\n        this.switchAllBuckets();\n        if (!this.latestConfig) {\n            return;\n        }\n        this.timerStartTime = ejectionTimestamp;\n        this.startTimer(this.latestConfig.getIntervalMs());\n        this.runSuccessRateCheck(ejectionTimestamp);\n        this.runFailurePercentageCheck(ejectionTimestamp);\n        for (const [address, mapEntry] of this.entryMap.entries()) {\n            if (mapEntry.currentEjectionTimestamp === null) {\n                if (mapEntry.ejectionTimeMultiplier > 0) {\n                    mapEntry.ejectionTimeMultiplier -= 1;\n                }\n            }\n            else {\n                const baseEjectionTimeMs = this.latestConfig.getBaseEjectionTimeMs();\n                const maxEjectionTimeMs = this.latestConfig.getMaxEjectionTimeMs();\n                const returnTime = new Date(mapEntry.currentEjectionTimestamp.getTime());\n                returnTime.setMilliseconds(returnTime.getMilliseconds() +\n                    Math.min(baseEjectionTimeMs * mapEntry.ejectionTimeMultiplier, Math.max(baseEjectionTimeMs, maxEjectionTimeMs)));\n                if (returnTime < new Date()) {\n                    trace('Unejecting ' + address);\n                    this.uneject(mapEntry);\n                }\n            }\n        }\n    }\n    updateAddressList(endpointList, lbConfig, attributes) {\n        if (!(lbConfig instanceof OutlierDetectionLoadBalancingConfig)) {\n            return;\n        }\n        for (const endpoint of endpointList) {\n            if (!this.entryMap.has(endpoint)) {\n                trace('Adding map entry for ' + (0, subchannel_address_1.endpointToString)(endpoint));\n                this.entryMap.set(endpoint, {\n                    counter: new CallCounter(),\n                    currentEjectionTimestamp: null,\n                    ejectionTimeMultiplier: 0,\n                    subchannelWrappers: [],\n                });\n            }\n        }\n        this.entryMap.deleteMissing(endpointList);\n        const childPolicy = lbConfig.getChildPolicy();\n        this.childBalancer.updateAddressList(endpointList, childPolicy, attributes);\n        if (lbConfig.getSuccessRateEjectionConfig() ||\n            lbConfig.getFailurePercentageEjectionConfig()) {\n            if (this.timerStartTime) {\n                trace('Previous timer existed. Replacing timer');\n                clearTimeout(this.ejectionTimer);\n                const remainingDelay = lbConfig.getIntervalMs() -\n                    (new Date().getTime() - this.timerStartTime.getTime());\n                this.startTimer(remainingDelay);\n            }\n            else {\n                trace('Starting new timer');\n                this.timerStartTime = new Date();\n                this.startTimer(lbConfig.getIntervalMs());\n                this.switchAllBuckets();\n            }\n        }\n        else {\n            trace('Counting disabled. Cancelling timer.');\n            this.timerStartTime = null;\n            clearTimeout(this.ejectionTimer);\n            for (const mapEntry of this.entryMap.values()) {\n                this.uneject(mapEntry);\n                mapEntry.ejectionTimeMultiplier = 0;\n            }\n        }\n        this.latestConfig = lbConfig;\n    }\n    exitIdle() {\n        this.childBalancer.exitIdle();\n    }\n    resetBackoff() {\n        this.childBalancer.resetBackoff();\n    }\n    destroy() {\n        clearTimeout(this.ejectionTimer);\n        this.childBalancer.destroy();\n    }\n    getTypeName() {\n        return TYPE_NAME;\n    }\n}\nexports.OutlierDetectionLoadBalancer = OutlierDetectionLoadBalancer;\nfunction setup() {\n    if (OUTLIER_DETECTION_ENABLED) {\n        (0, experimental_1.registerLoadBalancerType)(TYPE_NAME, OutlierDetectionLoadBalancer, OutlierDetectionLoadBalancingConfig);\n    }\n}\n//# sourceMappingURL=load-balancer-outlier-detection.js.map",
    "\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.experimental = exports.ServerInterceptingCall = exports.ResponderBuilder = exports.ServerListenerBuilder = exports.addAdminServicesToServer = exports.getChannelzHandlers = exports.getChannelzServiceDefinition = exports.InterceptorConfigurationError = exports.InterceptingCall = exports.RequesterBuilder = exports.ListenerBuilder = exports.StatusBuilder = exports.getClientChannel = exports.ServerCredentials = exports.Server = exports.setLogVerbosity = exports.setLogger = exports.load = exports.loadObject = exports.CallCredentials = exports.ChannelCredentials = exports.waitForClientReady = exports.closeClient = exports.Channel = exports.makeGenericClientConstructor = exports.makeClientConstructor = exports.loadPackageDefinition = exports.Client = exports.compressionAlgorithms = exports.propagate = exports.connectivityState = exports.status = exports.logVerbosity = exports.Metadata = exports.credentials = void 0;\nconst call_credentials_1 = require(\"./call-credentials\");\nObject.defineProperty(exports, \"CallCredentials\", { enumerable: true, get: function () { return call_credentials_1.CallCredentials; } });\nconst channel_1 = require(\"./channel\");\nObject.defineProperty(exports, \"Channel\", { enumerable: true, get: function () { return channel_1.ChannelImplementation; } });\nconst compression_algorithms_1 = require(\"./compression-algorithms\");\nObject.defineProperty(exports, \"compressionAlgorithms\", { enumerable: true, get: function () { return compression_algorithms_1.CompressionAlgorithms; } });\nconst connectivity_state_1 = require(\"./connectivity-state\");\nObject.defineProperty(exports, \"connectivityState\", { enumerable: true, get: function () { return connectivity_state_1.ConnectivityState; } });\nconst channel_credentials_1 = require(\"./channel-credentials\");\nObject.defineProperty(exports, \"ChannelCredentials\", { enumerable: true, get: function () { return channel_credentials_1.ChannelCredentials; } });\nconst client_1 = require(\"./client\");\nObject.defineProperty(exports, \"Client\", { enumerable: true, get: function () { return client_1.Client; } });\nconst constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"logVerbosity\", { enumerable: true, get: function () { return constants_1.LogVerbosity; } });\nObject.defineProperty(exports, \"status\", { enumerable: true, get: function () { return constants_1.Status; } });\nObject.defineProperty(exports, \"propagate\", { enumerable: true, get: function () { return constants_1.Propagate; } });\nconst logging = require(\"./logging\");\nconst make_client_1 = require(\"./make-client\");\nObject.defineProperty(exports, \"loadPackageDefinition\", { enumerable: true, get: function () { return make_client_1.loadPackageDefinition; } });\nObject.defineProperty(exports, \"makeClientConstructor\", { enumerable: true, get: function () { return make_client_1.makeClientConstructor; } });\nObject.defineProperty(exports, \"makeGenericClientConstructor\", { enumerable: true, get: function () { return make_client_1.makeClientConstructor; } });\nconst metadata_1 = require(\"./metadata\");\nObject.defineProperty(exports, \"Metadata\", { enumerable: true, get: function () { return metadata_1.Metadata; } });\nconst server_1 = require(\"./server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_1.Server; } });\nconst server_credentials_1 = require(\"./server-credentials\");\nObject.defineProperty(exports, \"ServerCredentials\", { enumerable: true, get: function () { return server_credentials_1.ServerCredentials; } });\nconst status_builder_1 = require(\"./status-builder\");\nObject.defineProperty(exports, \"StatusBuilder\", { enumerable: true, get: function () { return status_builder_1.StatusBuilder; } });\n/**** Client Credentials ****/\n// Using assign only copies enumerable properties, which is what we want\nexports.credentials = {\n    /**\n     * Combine a ChannelCredentials with any number of CallCredentials into a\n     * single ChannelCredentials object.\n     * @param channelCredentials The ChannelCredentials object.\n     * @param callCredentials Any number of CallCredentials objects.\n     * @return The resulting ChannelCredentials object.\n     */\n    combineChannelCredentials: (channelCredentials, ...callCredentials) => {\n        return callCredentials.reduce((acc, other) => acc.compose(other), channelCredentials);\n    },\n    /**\n     * Combine any number of CallCredentials into a single CallCredentials\n     * object.\n     * @param first The first CallCredentials object.\n     * @param additional Any number of additional CallCredentials objects.\n     * @return The resulting CallCredentials object.\n     */\n    combineCallCredentials: (first, ...additional) => {\n        return additional.reduce((acc, other) => acc.compose(other), first);\n    },\n    // from channel-credentials.ts\n    createInsecure: channel_credentials_1.ChannelCredentials.createInsecure,\n    createSsl: channel_credentials_1.ChannelCredentials.createSsl,\n    createFromSecureContext: channel_credentials_1.ChannelCredentials.createFromSecureContext,\n    // from call-credentials.ts\n    createFromMetadataGenerator: call_credentials_1.CallCredentials.createFromMetadataGenerator,\n    createFromGoogleCredential: call_credentials_1.CallCredentials.createFromGoogleCredential,\n    createEmpty: call_credentials_1.CallCredentials.createEmpty,\n};\n/**\n * Close a Client object.\n * @param client The client to close.\n */\nconst closeClient = (client) => client.close();\nexports.closeClient = closeClient;\nconst waitForClientReady = (client, deadline, callback) => client.waitForReady(deadline, callback);\nexports.waitForClientReady = waitForClientReady;\n/* eslint-enable @typescript-eslint/no-explicit-any */\n/**** Unimplemented function stubs ****/\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst loadObject = (value, options) => {\n    throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.loadObject = loadObject;\nconst load = (filename, format, options) => {\n    throw new Error('Not available in this library. Use @grpc/proto-loader and loadPackageDefinition instead');\n};\nexports.load = load;\nconst setLogger = (logger) => {\n    logging.setLogger(logger);\n};\nexports.setLogger = setLogger;\nconst setLogVerbosity = (verbosity) => {\n    logging.setLoggerVerbosity(verbosity);\n};\nexports.setLogVerbosity = setLogVerbosity;\nconst getClientChannel = (client) => {\n    return client_1.Client.prototype.getChannel.call(client);\n};\nexports.getClientChannel = getClientChannel;\nvar client_interceptors_1 = require(\"./client-interceptors\");\nObject.defineProperty(exports, \"ListenerBuilder\", { enumerable: true, get: function () { return client_interceptors_1.ListenerBuilder; } });\nObject.defineProperty(exports, \"RequesterBuilder\", { enumerable: true, get: function () { return client_interceptors_1.RequesterBuilder; } });\nObject.defineProperty(exports, \"InterceptingCall\", { enumerable: true, get: function () { return client_interceptors_1.InterceptingCall; } });\nObject.defineProperty(exports, \"InterceptorConfigurationError\", { enumerable: true, get: function () { return client_interceptors_1.InterceptorConfigurationError; } });\nvar channelz_1 = require(\"./channelz\");\nObject.defineProperty(exports, \"getChannelzServiceDefinition\", { enumerable: true, get: function () { return channelz_1.getChannelzServiceDefinition; } });\nObject.defineProperty(exports, \"getChannelzHandlers\", { enumerable: true, get: function () { return channelz_1.getChannelzHandlers; } });\nvar admin_1 = require(\"./admin\");\nObject.defineProperty(exports, \"addAdminServicesToServer\", { enumerable: true, get: function () { return admin_1.addAdminServicesToServer; } });\nvar server_interceptors_1 = require(\"./server-interceptors\");\nObject.defineProperty(exports, \"ServerListenerBuilder\", { enumerable: true, get: function () { return server_interceptors_1.ServerListenerBuilder; } });\nObject.defineProperty(exports, \"ResponderBuilder\", { enumerable: true, get: function () { return server_interceptors_1.ResponderBuilder; } });\nObject.defineProperty(exports, \"ServerInterceptingCall\", { enumerable: true, get: function () { return server_interceptors_1.ServerInterceptingCall; } });\nconst experimental = require(\"./experimental\");\nexports.experimental = experimental;\nconst resolver_dns = require(\"./resolver-dns\");\nconst resolver_uds = require(\"./resolver-uds\");\nconst resolver_ip = require(\"./resolver-ip\");\nconst load_balancer_pick_first = require(\"./load-balancer-pick-first\");\nconst load_balancer_round_robin = require(\"./load-balancer-round-robin\");\nconst load_balancer_outlier_detection = require(\"./load-balancer-outlier-detection\");\nconst channelz = require(\"./channelz\");\n(() => {\n    resolver_dns.setup();\n    resolver_uds.setup();\n    resolver_ip.setup();\n    load_balancer_pick_first.setup();\n    load_balancer_round_robin.setup();\n    load_balancer_outlier_detection.setup();\n    channelz.setup();\n})();\n//# sourceMappingURL=index.js.map",
    "import { credentials } from \"@grpc/grpc-js\";\nimport { loadSync } from \"@grpc/proto-loader\";\nimport { ChildProcess, spawn } from \"child_process\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\nimport { Logger } from \"../../src/utils/logger\";\nimport {\n  ListAgentsResponse,\n  MessageHandler,\n  P2PClientOptions,\n  P2PNodeOptions,\n} from \"./types\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\n/**\n * Resolves a path relative to @openpond/sdk package in node_modules\n */\nfunction resolvePackagePath(relativePath: string): string {\n  // Start from the current file's location\n  let currentDir = __dirname;\n\n  // Navigate up until we find node_modules or hit the root\n  while (currentDir !== path.parse(currentDir).root) {\n    const nodeModulesPath = path.join(\n      currentDir,\n      \"node_modules\",\n      \"@duckai\",\n      \"sdk\",\n      relativePath\n    );\n    if (path.basename(currentDir) === \"node_modules\") {\n      // If we're already in node_modules, look for @duckai/sdk\n      return path.join(currentDir, \"@duckai\", \"sdk\", relativePath);\n    } else if (path.basename(path.dirname(currentDir)) === \"@duckai\") {\n      // If we're in the package itself, resolve relative to dist\n      return path.join(currentDir, \"..\", relativePath);\n    }\n\n    try {\n      // Check if the node_modules path exists\n      if (require(\"fs\").existsSync(nodeModulesPath)) {\n        return nodeModulesPath;\n      }\n    } catch (e) {\n      // Ignore errors and continue searching\n    }\n\n    currentDir = path.dirname(currentDir);\n  }\n\n  // Fallback to local dist directory if we can't find node_modules\n  return path.join(__dirname, \"..\", \"..\", relativePath);\n}\n\nexport interface AgentInfo {\n  agentId: string;\n  peerId: string;\n  agentName: string;\n  connectedSince: number;\n}\n\nexport class P2PClient {\n  private client: any;\n  private stream: any;\n  private messageHandler?: MessageHandler;\n  private connected: boolean = false;\n  private readonly timeout: number;\n  private nodeProcess?: ChildProcess;\n  private readonly protoPath: string;\n  private readonly binaryPath: string;\n\n  constructor(private options: P2PClientOptions) {\n    this.timeout = options.timeout || 5000;\n\n    // Set default paths that work both in development and when installed as a package\n    this.protoPath =\n      options.protoPath || resolvePackagePath(\"dist/proto/p2p.proto\");\n    this.binaryPath =\n      options.binaryPath || resolvePackagePath(\"dist/node/p2p-node.js\");\n\n    Logger.info(\"p2p\", \"Initializing P2P client\", {\n      protoPath: this.protoPath,\n      binaryPath: this.binaryPath,\n      address: options.address,\n    });\n  }\n\n  /**\n   * Start the P2P node binary and connect to it\n   */\n  async connect(nodeOptions?: P2PNodeOptions): Promise<void> {\n    try {\n      // Start P2P node if binary path provided\n      await this.startNode(nodeOptions);\n\n      // Wait a bit for gRPC server to start\n      await new Promise((resolve) => setTimeout(resolve, 2000));\n\n      // Load proto definition\n      const packageDefinition = loadSync(this.protoPath, {\n        keepCase: true,\n        longs: String,\n        enums: String,\n        defaults: true,\n        oneofs: true,\n      });\n\n      const { loadPackageDefinition } = await import(\"@grpc/grpc-js\");\n      const proto = loadPackageDefinition(packageDefinition) as any;\n\n      // Try to connect with retries\n      let retries = 3;\n      while (retries > 0) {\n        try {\n          // Create gRPC client\n          this.client = new proto.p2p.P2PNode(\n            this.options.address,\n            credentials.createInsecure()\n          );\n\n          // Extract gRPC port from address\n          const grpcPort = parseInt(this.options.address.split(\":\")[1], 10);\n\n          // Set up connection stream with connect request\n          this.stream = this.client.Connect({\n            port: grpcPort,\n            name: nodeOptions?.agentId || \"default-agent\",\n            privateKey: process.env.PRIVATE_KEY || \"\",\n          });\n\n          // Consider connected as soon as stream is established\n          this.connected = true;\n\n          // Set up message handling\n          this.stream.on(\"data\", (event: any) => {\n            Logger.info(\"p2p\", \"Received event from gRPC stream\", {\n              eventType: event.ready\n                ? \"ready\"\n                : event.peerConnected\n                ? \"peerConnected\"\n                : event.error\n                ? \"error\"\n                : event.message\n                ? \"message\"\n                : \"unknown\",\n              hasHandler: !!this.messageHandler,\n            });\n\n            if (event.message && this.messageHandler) {\n              Logger.info(\"p2p\", \"Processing message from gRPC stream\", {\n                messageId: event.message.messageId,\n                from: event.message.from,\n                encrypted: event.message.content instanceof Buffer,\n                contentLength: event.message.content.length,\n              });\n\n              // Pass to handler\n              this.messageHandler({\n                messageId: event.message.messageId,\n                fromAgentId: event.message.from,\n                content: event.message.content.toString(),\n                timestamp: Number(event.message.timestamp),\n              });\n            } else if (event.message) {\n              Logger.warn(\"p2p\", \"Received message but no handler registered\", {\n                messageId: event.message.messageId,\n                from: event.message.from,\n              });\n            } else {\n              Logger.debug(\"p2p\", \"Received non-message event\", {\n                eventType: event.ready\n                  ? \"ready\"\n                  : event.peerConnected\n                  ? \"peerConnected\"\n                  : event.error\n                  ? \"error\"\n                  : \"unknown\",\n                hasHandler: !!this.messageHandler,\n              });\n            }\n          });\n\n          this.stream.on(\"error\", (error: Error) => {\n            Logger.error(\"p2p\", \"Stream error\", {\n              error: error instanceof Error ? error.message : String(error),\n            });\n            this.connected = false;\n          });\n\n          break;\n        } catch (error) {\n          retries--;\n          if (retries === 0) throw error;\n          Logger.warn(\"p2p\", \"Connection failed, retrying...\", {\n            error: error instanceof Error ? error.message : String(error),\n            retriesLeft: retries,\n          });\n          await new Promise((resolve) => setTimeout(resolve, 1000));\n        }\n      }\n\n      Logger.info(\"p2p\", \"Connected to P2P network\", {\n        address: this.options.address,\n        binaryPath: this.options.binaryPath,\n      });\n    } catch (error) {\n      await this.cleanup();\n      throw new Error(\n        `Failed to connect: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Start the P2P node binary\n   */\n  private async findNodeExecutable(): Promise<string> {\n    try {\n      // Try running node --version to find the actual executable\n      const { execSync } = require(\"child_process\");\n      execSync(\"node --version\"); // Test if node is directly accessible\n      return \"node\"; // If it works, just use 'node' and let PATH handle it\n    } catch (error) {\n      Logger.warn(\"p2p\", \"Could not find node in PATH, trying alternatives\", {\n        error: error instanceof Error ? error.message : String(error),\n      });\n\n      // If that fails, try explicit paths\n      const possiblePaths = [\n        process.env.NODE, // Explicit NODE env var\n        process.execPath, // Current node path\n        \"/usr/bin/node\", // System node\n        \"/usr/local/bin/node\", // Homebrew/custom node\n      ].filter(Boolean); // Remove undefined/null entries\n\n      for (const nodePath of possiblePaths) {\n        try {\n          if (nodePath) {\n            require(\"fs\").accessSync(nodePath, require(\"fs\").constants.X_OK);\n            Logger.info(\"p2p\", \"Found working node executable\", {\n              path: nodePath,\n            });\n            return nodePath;\n          }\n        } catch (e) {\n          // Continue to next path\n        }\n      }\n\n      // If we get here, just return 'node' and hope PATH works\n      Logger.warn(\"p2p\", \"No node executable found, falling back to 'node'\");\n      return \"node\";\n    }\n  }\n\n  private async startNode(options?: P2PNodeOptions): Promise<void> {\n    return new Promise(async (resolve, reject) => {\n      if (!this.binaryPath) {\n        reject(new Error(\"Binary path not found\"));\n        return;\n      }\n\n      // Extract port from address (e.g. \"localhost:50051\" -> 50051)\n      const grpcPort = parseInt(this.options.address.split(\":\")[1], 10);\n\n      const nodeExecutable = await this.findNodeExecutable();\n\n      Logger.info(\"p2p\", \"Starting P2P node\", {\n        binaryPath: this.binaryPath,\n        options,\n        grpcPort,\n        nodeExecutable,\n      });\n\n      const args = [\n        \"-p\",\n        String(grpcPort), // Use gRPC port for the server\n        \"-n\",\n        options?.agentId || \"default-agent\",\n        \"-k\",\n        process.env.PRIVATE_KEY || \"\",\n      ];\n\n      try {\n        // Verify node executable exists\n        require(\"fs\").accessSync(nodeExecutable, require(\"fs\").constants.X_OK);\n\n        Logger.info(\"p2p\", \"Spawning p2p node process\", {\n          binaryPath: this.binaryPath,\n          args,\n          cwd: path.dirname(this.binaryPath),\n          nodeExecutable,\n        });\n\n        this.nodeProcess = spawn(nodeExecutable, [this.binaryPath, ...args], {\n          stdio: \"pipe\",\n          env: {\n            ...process.env,\n            NODE_PATH: process.env.NODE_PATH || path.dirname(this.binaryPath),\n          },\n          cwd: path.dirname(this.binaryPath),\n        });\n\n        this.nodeProcess.stdout?.on(\"data\", (data: Buffer) => {\n          Logger.debug(\"p2p\", \"Node stdout\", { data: data.toString() });\n        });\n\n        this.nodeProcess.stderr?.on(\"data\", (data: Buffer) => {\n          Logger.warn(\"p2p\", \"Node stderr\", { data: data.toString() });\n        });\n\n        this.nodeProcess.on(\"error\", (error: Error) => {\n          Logger.error(\"p2p\", \"Node process error\", { error: error.message });\n          reject(error);\n        });\n\n        this.nodeProcess.on(\"exit\", (code: number | null) => {\n          if (code !== 0) {\n            Logger.error(\"p2p\", \"Node process exited with error\", { code });\n            reject(new Error(`P2P node exited with code ${code}`));\n          }\n        });\n\n        // Give the node some time to start up\n        setTimeout(resolve, 1000);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * Send a message to another agent\n   */\n  async sendMessage(to: string, content: string): Promise<void> {\n    if (!this.connected) {\n      throw new Error(\"Not connected to P2P network\");\n    }\n\n    try {\n      await new Promise<void>((resolve, reject) => {\n        this.client.SendMessage(\n          {\n            to,\n            content: Buffer.from(content),\n          },\n          (error: Error | null) => {\n            if (error) {\n              Logger.error(\"p2p\", \"Failed to send message\", {\n                to,\n                error: error.message,\n              });\n              reject(error);\n            } else {\n              Logger.debug(\"p2p\", \"Message sent\", { to });\n              resolve();\n            }\n          }\n        );\n      });\n    } catch (error) {\n      throw new Error(\n        `Failed to send message: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Set message handler\n   */\n  onMessage(handler: MessageHandler): void {\n    Logger.info(\"p2p\", \"Registering message handler\");\n    this.messageHandler = handler;\n    Logger.info(\"p2p\", \"Message handler registered\", {\n      hasHandler: !!this.messageHandler,\n      handlerType: typeof handler,\n    });\n  }\n\n  /**\n   * Disconnect from P2P network\n   */\n  async disconnect(): Promise<void> {\n    Logger.info(\"p2p\", \"Disconnecting from P2P network\");\n\n    if (this.stream) {\n      this.stream.cancel();\n    }\n\n    if (this.nodeProcess) {\n      this.nodeProcess.kill();\n    }\n\n    await this.cleanup();\n  }\n\n  /**\n   * Clean up resources\n   */\n  private async cleanup(): Promise<void> {\n    this.connected = false;\n    this.stream = null;\n    this.client = null;\n    this.messageHandler = undefined;\n\n    if (this.nodeProcess) {\n      this.nodeProcess.kill();\n      this.nodeProcess = undefined;\n    }\n  }\n\n  /**\n   * List all agents in the P2P network\n   */\n  async listAgents(): Promise<ListAgentsResponse> {\n    if (!this.connected || !this.client) {\n      throw new Error(\"Not connected to P2P network\");\n    }\n\n    try {\n      return new Promise<ListAgentsResponse>((resolve, reject) => {\n        this.client.ListAgents(\n          {},\n          (error: Error | null, response: ListAgentsResponse) => {\n            if (error) {\n              Logger.error(\"p2p\", \"Failed to list agents\", {\n                error: error.message,\n              });\n              reject(error);\n            } else {\n              // Add debug logging\n              /* Logger.debug(\"p2p\", \"Raw ListAgents response\", {\n                response,\n                hasRecords: !!response?.agents,\n                recordKeys: response?.agents\n                  ? Object.keys(response.agents)\n                  : [],\n              }); */\n\n              resolve(response);\n            }\n          }\n        );\n      });\n    } catch (error) {\n      throw new Error(\n        `Failed to list agents: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n}\n",
    "export class Logger {\n  static info(context: string, message: string, meta?: any) {\n    console.log(`[${context}] ${message}`, meta ? meta : \"\");\n  }\n\n  static error(context: string, message: string, meta?: any) {\n    console.error(`[${context}] ${message}`, meta ? meta : \"\");\n  }\n\n  static warn(context: string, message: string, meta?: any) {\n    console.warn(`[${context}] ${message}`, meta ? meta : \"\");\n  }\n\n  static debug(context: string, message: string, meta?: any) {\n    console.debug(`[${context}] ${message}`, meta ? meta : \"\");\n  }\n}\n"
  ],
  "mappings": "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U;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACxD,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACxD,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACvE,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACvE,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACxD,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACxD,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACxD,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACvE,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACvE,KAAU;AAAA,IAAM,KAAU;AAAA,IAC1B,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IACzC,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACvE,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACvE,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACxD,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACxD,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IACzC,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IACzC,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IACzC,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IACzC,KAAU;AAAA,IAAM,KAAU;AAAA,IAAK,KAAU;AAAA,IAAK,KAAU;AAAA,IACxD,KAAU;AAAA,IAA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AAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAK;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAEpJ;AAAA,QAAI;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAI;AAAA,QAAK;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAI;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAK;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAEpJ;AAAA,QAAI;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAI;AAAA,QAAK;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAI;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAK;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAEpJ;AAAA,QAAI;AAAA,QAAG;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAI;AAAA,QAAK;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAK;AAAA,QAAI;AAAA,QAAI;AAAA,QAAK;AAAA,QAAK;AAAA,QAAK;AAAA,QAAI;AAAA,QAAG;AAAA,QAAI;AAAA,QAAI;AAAA,QAAK;AAAA,QAAK;AAAA,QAAI;AAAA,QAA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",
  "debugId": "92E8B24728FE452364756E2164756E21",
  "names": []
}