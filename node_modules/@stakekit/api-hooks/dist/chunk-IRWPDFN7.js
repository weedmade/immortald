// src/api/schemas/actionListSort.ts
var ActionListSort = {
  createdAtAsc: "createdAtAsc",
  createdAtDesc: "createdAtDesc"
};

// src/api/schemas/actionListStatus.ts
var ActionListStatus = {
  CANCELED: "CANCELED",
  CREATED: "CREATED",
  WAITING_FOR_NEXT: "WAITING_FOR_NEXT",
  PROCESSING: "PROCESSING",
  FAILED: "FAILED",
  SUCCESS: "SUCCESS",
  STALE: "STALE"
};

// src/api/schemas/actionListType.ts
var ActionListType = {
  STAKE: "STAKE",
  UNSTAKE: "UNSTAKE",
  CLAIM_REWARDS: "CLAIM_REWARDS",
  RESTAKE_REWARDS: "RESTAKE_REWARDS",
  WITHDRAW: "WITHDRAW",
  RESTAKE: "RESTAKE",
  CLAIM_UNSTAKED: "CLAIM_UNSTAKED",
  UNLOCK_LOCKED: "UNLOCK_LOCKED",
  STAKE_LOCKED: "STAKE_LOCKED",
  VOTE: "VOTE",
  REVOKE: "REVOKE",
  VOTE_LOCKED: "VOTE_LOCKED",
  REVOTE: "REVOTE",
  REBOND: "REBOND",
  MIGRATE: "MIGRATE"
};

// src/api/schemas/actionStatus.ts
var ActionStatus = {
  CANCELED: "CANCELED",
  CREATED: "CREATED",
  WAITING_FOR_NEXT: "WAITING_FOR_NEXT",
  PROCESSING: "PROCESSING",
  FAILED: "FAILED",
  SUCCESS: "SUCCESS",
  STALE: "STALE"
};

// src/api/schemas/actionTypes.ts
var ActionTypes = {
  STAKE: "STAKE",
  UNSTAKE: "UNSTAKE",
  CLAIM_REWARDS: "CLAIM_REWARDS",
  RESTAKE_REWARDS: "RESTAKE_REWARDS",
  WITHDRAW: "WITHDRAW",
  RESTAKE: "RESTAKE",
  CLAIM_UNSTAKED: "CLAIM_UNSTAKED",
  UNLOCK_LOCKED: "UNLOCK_LOCKED",
  STAKE_LOCKED: "STAKE_LOCKED",
  VOTE: "VOTE",
  REVOKE: "REVOKE",
  VOTE_LOCKED: "VOTE_LOCKED",
  REVOTE: "REVOTE",
  REBOND: "REBOND",
  MIGRATE: "MIGRATE"
};

// src/api/schemas/balanceTypes.ts
var BalanceTypes = {
  available: "available",
  staked: "staked",
  unstaking: "unstaking",
  unstaked: "unstaked",
  preparing: "preparing",
  rewards: "rewards",
  locked: "locked",
  unlocking: "unlocking"
};

// src/api/schemas/dailyCumulativeStakeDtoStatus.ts
var DailyCumulativeStakeDtoStatus = {
  CANCELED: "CANCELED",
  CREATED: "CREATED",
  WAITING_FOR_NEXT: "WAITING_FOR_NEXT",
  PROCESSING: "PROCESSING",
  FAILED: "FAILED",
  SUCCESS: "SUCCESS",
  STALE: "STALE"
};

// src/api/schemas/dailyCumulativeStakeDtoType.ts
var DailyCumulativeStakeDtoType = {
  STAKE: "STAKE",
  UNSTAKE: "UNSTAKE",
  CLAIM_REWARDS: "CLAIM_REWARDS",
  RESTAKE_REWARDS: "RESTAKE_REWARDS",
  WITHDRAW: "WITHDRAW",
  RESTAKE: "RESTAKE",
  CLAIM_UNSTAKED: "CLAIM_UNSTAKED",
  UNLOCK_LOCKED: "UNLOCK_LOCKED",
  STAKE_LOCKED: "STAKE_LOCKED",
  VOTE: "VOTE",
  REVOKE: "REVOKE",
  VOTE_LOCKED: "VOTE_LOCKED",
  REVOTE: "REVOTE",
  REBOND: "REBOND",
  MIGRATE: "MIGRATE"
};

// src/api/schemas/evmEIP1559GasArgsDtoType.ts
var EvmEIP1559GasArgsDtoType = {
  NUMBER_2: 2
};

// src/api/schemas/evmLegacyGasArgsDtoType.ts
var EvmLegacyGasArgsDtoType = {
  NUMBER_0: 0
};

// src/api/schemas/evmNetworks.ts
var EvmNetworks = {
  ethereum: "ethereum",
  "ethereum-goerli": "ethereum-goerli",
  "ethereum-holesky": "ethereum-holesky",
  arbitrum: "arbitrum",
  base: "base",
  gnosis: "gnosis",
  optimism: "optimism",
  polygon: "polygon",
  starknet: "starknet",
  zksync: "zksync",
  linea: "linea",
  "avalanche-c": "avalanche-c",
  "avalanche-c-atomic": "avalanche-c-atomic",
  "avalanche-p": "avalanche-p",
  binance: "binance",
  celo: "celo",
  fantom: "fantom",
  harmony: "harmony",
  moonriver: "moonriver",
  okc: "okc",
  viction: "viction",
  core: "core"
};

// src/api/schemas/feeConfigurationStatus.ts
var FeeConfigurationStatus = {
  REQUESTED: "REQUESTED",
  PROCESSING: "PROCESSING",
  LIVE: "LIVE",
  CHANGES_REQUESTED: "CHANGES_REQUESTED"
};

// src/api/schemas/gasMode.ts
var GasMode = {
  slow: "slow",
  average: "average",
  fast: "fast",
  custom: "custom"
};

// src/api/schemas/geolocationErrorTagsItem.ts
var GeolocationErrorTagsItem = {
  Crypto_Ban: "Crypto Ban",
  OFAC: "OFAC",
  OFSI: "OFSI",
  Pending_Litigation: "Pending Litigation",
  Staking_Ban: "Staking Ban"
};

// src/api/schemas/geolocationErrorType.ts
var GeolocationErrorType = {
  GEO_LOCATION: "GEO_LOCATION"
};

// src/api/schemas/healthStatus.ts
var HealthStatus = {
  OK: "OK",
  FAIL: "FAIL",
  DEGRADED: "DEGRADED"
};

// src/api/schemas/keyCategory.ts
var KeyCategory = {
  pro: "pro",
  standard: "standard",
  trial: "trial"
};

// src/api/schemas/masterBannedRegionDtoTagsItem.ts
var MasterBannedRegionDtoTagsItem = {
  Crypto_Ban: "Crypto Ban",
  OFAC: "OFAC",
  OFSI: "OFSI",
  Pending_Litigation: "Pending Litigation",
  Staking_Ban: "Staking Ban"
};

// src/api/schemas/masterBannedYieldDtoTagsItem.ts
var MasterBannedYieldDtoTagsItem = {
  Crypto_Ban: "Crypto Ban",
  OFAC: "OFAC",
  OFSI: "OFSI",
  Pending_Litigation: "Pending Litigation",
  Staking_Ban: "Staking Ban"
};

// src/api/schemas/networks.ts
var Networks = {
  ethereum: "ethereum",
  "ethereum-goerli": "ethereum-goerli",
  "ethereum-holesky": "ethereum-holesky",
  arbitrum: "arbitrum",
  base: "base",
  gnosis: "gnosis",
  optimism: "optimism",
  polygon: "polygon",
  starknet: "starknet",
  zksync: "zksync",
  linea: "linea",
  "avalanche-c": "avalanche-c",
  "avalanche-c-atomic": "avalanche-c-atomic",
  "avalanche-p": "avalanche-p",
  binance: "binance",
  celo: "celo",
  fantom: "fantom",
  harmony: "harmony",
  moonriver: "moonriver",
  okc: "okc",
  viction: "viction",
  core: "core",
  agoric: "agoric",
  akash: "akash",
  axelar: "axelar",
  "band-protocol": "band-protocol",
  bitsong: "bitsong",
  canto: "canto",
  chihuahua: "chihuahua",
  comdex: "comdex",
  coreum: "coreum",
  cosmos: "cosmos",
  crescent: "crescent",
  cronos: "cronos",
  cudos: "cudos",
  desmos: "desmos",
  dydx: "dydx",
  evmos: "evmos",
  "fetch-ai": "fetch-ai",
  "gravity-bridge": "gravity-bridge",
  injective: "injective",
  irisnet: "irisnet",
  juno: "juno",
  kava: "kava",
  "ki-network": "ki-network",
  "mars-protocol": "mars-protocol",
  nym: "nym",
  "okex-chain": "okex-chain",
  onomy: "onomy",
  osmosis: "osmosis",
  persistence: "persistence",
  quicksilver: "quicksilver",
  regen: "regen",
  secret: "secret",
  sentinel: "sentinel",
  sommelier: "sommelier",
  stafi: "stafi",
  stargaze: "stargaze",
  stride: "stride",
  teritori: "teritori",
  tgrade: "tgrade",
  umee: "umee",
  sei: "sei",
  mantra: "mantra",
  polkadot: "polkadot",
  kusama: "kusama",
  westend: "westend",
  binancebeacon: "binancebeacon",
  cardano: "cardano",
  near: "near",
  solana: "solana",
  tezos: "tezos",
  tron: "tron",
  ton: "ton",
  "ton-testnet": "ton-testnet"
};

// src/api/schemas/rewardClaiming.ts
var RewardClaiming = {
  auto: "auto",
  manual: "manual"
};

// src/api/schemas/rewardSchedule.ts
var RewardSchedule = {
  block: "block",
  hour: "hour",
  day: "day",
  week: "week",
  month: "month",
  era: "era",
  epoch: "epoch"
};

// src/api/schemas/rewardTypes.ts
var RewardTypes = {
  apr: "apr",
  apy: "apy",
  variable: "variable"
};

// src/api/schemas/role.ts
var Role = {
  admin: "admin",
  member: "member",
  superAdmin: "superAdmin"
};

// src/api/schemas/teamCategory.ts
var TeamCategory = {
  pro: "pro",
  standard: "standard",
  trial: "trial"
};

// src/api/schemas/teamType.ts
var TeamType = {
  provider: "provider",
  integrator: "integrator"
};

// src/api/schemas/transactionStatus.ts
var TransactionStatus = {
  NOT_FOUND: "NOT_FOUND",
  CREATED: "CREATED",
  BLOCKED: "BLOCKED",
  WAITING_FOR_SIGNATURE: "WAITING_FOR_SIGNATURE",
  SIGNED: "SIGNED",
  BROADCASTED: "BROADCASTED",
  PENDING: "PENDING",
  CONFIRMED: "CONFIRMED",
  FAILED: "FAILED",
  SKIPPED: "SKIPPED"
};

// src/api/schemas/transactionType.ts
var TransactionType = {
  SWAP: "SWAP",
  DEPOSIT: "DEPOSIT",
  APPROVAL: "APPROVAL",
  STAKE: "STAKE",
  CLAIM_UNSTAKED: "CLAIM_UNSTAKED",
  CLAIM_REWARDS: "CLAIM_REWARDS",
  RESTAKE_REWARDS: "RESTAKE_REWARDS",
  UNSTAKE: "UNSTAKE",
  SPLIT: "SPLIT",
  MERGE: "MERGE",
  LOCK: "LOCK",
  UNLOCK: "UNLOCK",
  SUPPLY: "SUPPLY",
  BRIDGE: "BRIDGE",
  VOTE: "VOTE",
  REVOKE: "REVOKE",
  RESTAKE: "RESTAKE",
  REBOND: "REBOND",
  WITHDRAW: "WITHDRAW",
  CREATE_ACCOUNT: "CREATE_ACCOUNT",
  REVEAL: "REVEAL",
  MIGRATE: "MIGRATE",
  UTXO_P_TO_C_IMPORT: "UTXO_P_TO_C_IMPORT",
  UTXO_C_TO_P_IMPORT: "UTXO_C_TO_P_IMPORT",
  UNFREEZE_LEGACY: "UNFREEZE_LEGACY",
  UNFREEZE_LEGACY_BANDWIDTH: "UNFREEZE_LEGACY_BANDWIDTH",
  UNFREEZE_LEGACY_ENERGY: "UNFREEZE_LEGACY_ENERGY",
  UNFREEZE_BANDWIDTH: "UNFREEZE_BANDWIDTH",
  UNFREEZE_ENERGY: "UNFREEZE_ENERGY",
  FREEZE_BANDWIDTH: "FREEZE_BANDWIDTH",
  FREEZE_ENERGY: "FREEZE_ENERGY",
  UNDELEGATE_BANDWIDTH: "UNDELEGATE_BANDWIDTH",
  UNDELEGATE_ENERGY: "UNDELEGATE_ENERGY",
  P2P_NODE_REQUEST: "P2P_NODE_REQUEST",
  LUGANODES_PROVISION: "LUGANODES_PROVISION",
  LUGANODES_EXIT_REQUEST: "LUGANODES_EXIT_REQUEST",
  INFSTONES_PROVISION: "INFSTONES_PROVISION",
  INFSTONES_EXIT_REQUEST: "INFSTONES_EXIT_REQUEST",
  INFSTONES_CLAIM_REQUEST: "INFSTONES_CLAIM_REQUEST"
};

// src/api/schemas/tronResourceType.ts
var TronResourceType = {
  BANDWIDTH: "BANDWIDTH",
  ENERGY: "ENERGY"
};

// src/api/schemas/validatorStatusTypes.ts
var ValidatorStatusTypes = {
  active: "active",
  jailed: "jailed",
  deactivating: "deactivating",
  inactive: "inactive",
  full: "full"
};

// src/api/schemas/webhookSubscriptionEventDtoEvent.ts
var WebhookSubscriptionEventDtoEvent = {
  "*": "*",
  maintenance: "maintenance",
  "proxy-contract-upgrade": "proxy-contract-upgrade",
  "opportunity-deprecation": "opportunity-deprecation",
  "opportunity-pause": "opportunity-pause",
  "opportunity-resume": "opportunity-resume",
  failure: "failure",
  success: "success",
  "claim-rewards": "claim-rewards",
  "waiting-for-next": "waiting-for-next",
  "withdraw-funds": "withdraw-funds"
};

// src/api/schemas/yieldGetMyYieldsSortBy.ts
var YieldGetMyYieldsSortBy = {
  name: "name",
  nameAsc: "nameAsc",
  nameDesc: "nameDesc",
  relevantYieldType: "relevantYieldType",
  relevantYieldTypeAsc: "relevantYieldTypeAsc",
  relevantYieldTypeDesc: "relevantYieldTypeDesc",
  yieldType: "yieldType",
  yieldTypeAsc: "yieldTypeAsc",
  yieldTypeDesc: "yieldTypeDesc"
};

// src/api/schemas/yieldGetMyYieldsType.ts
var YieldGetMyYieldsType = {
  staking: "staking",
  "liquid-staking": "liquid-staking",
  lending: "lending",
  restaking: "restaking",
  vault: "vault"
};

// src/api/schemas/yieldProviders.ts
var YieldProviders = {
  aave: "aave",
  anchor: "anchor",
  benqi: "benqi",
  compound: "compound",
  lido: "lido",
  sushi: "sushi",
  yearn: "yearn",
  ape: "ape",
  chainlink: "chainlink",
  pendle: "pendle",
  parax: "parax",
  "rocket-pool": "rocket-pool",
  stakewise: "stakewise",
  etherfi: "etherfi",
  "morpho-aave": "morpho-aave",
  "morpho-blue": "morpho-blue",
  "morpho-compound": "morpho-compound",
  angle: "angle",
  kelpdao: "kelpdao",
  figment: "figment",
  kiln: "kiln",
  P2P: "P2P",
  everstake: "everstake",
  eigenlayer: "eigenlayer",
  luganodes: "luganodes",
  renzo: "renzo",
  infstones: "infstones",
  ethena: "ethena",
  fluid: "fluid",
  "idle-finance": "idle-finance",
  gearbox: "gearbox",
  "chorus-one": "chorus-one",
  stakekit: "stakekit"
};

// src/api/schemas/yieldType.ts
var YieldType = {
  staking: "staking",
  "liquid-staking": "liquid-staking",
  lending: "lending",
  restaking: "restaking",
  vault: "vault"
};

// src/api/schemas/yieldV2YieldsNetwork.ts
var YieldV2YieldsNetwork = {
  ethereum: "ethereum",
  "ethereum-goerli": "ethereum-goerli",
  "ethereum-holesky": "ethereum-holesky",
  arbitrum: "arbitrum",
  base: "base",
  gnosis: "gnosis",
  optimism: "optimism",
  polygon: "polygon",
  starknet: "starknet",
  zksync: "zksync",
  linea: "linea",
  "avalanche-c": "avalanche-c",
  "avalanche-c-atomic": "avalanche-c-atomic",
  "avalanche-p": "avalanche-p",
  binance: "binance",
  celo: "celo",
  fantom: "fantom",
  harmony: "harmony",
  moonriver: "moonriver",
  okc: "okc",
  viction: "viction",
  core: "core",
  agoric: "agoric",
  akash: "akash",
  axelar: "axelar",
  "band-protocol": "band-protocol",
  bitsong: "bitsong",
  canto: "canto",
  chihuahua: "chihuahua",
  comdex: "comdex",
  coreum: "coreum",
  cosmos: "cosmos",
  crescent: "crescent",
  cronos: "cronos",
  cudos: "cudos",
  desmos: "desmos",
  dydx: "dydx",
  evmos: "evmos",
  "fetch-ai": "fetch-ai",
  "gravity-bridge": "gravity-bridge",
  injective: "injective",
  irisnet: "irisnet",
  juno: "juno",
  kava: "kava",
  "ki-network": "ki-network",
  "mars-protocol": "mars-protocol",
  nym: "nym",
  "okex-chain": "okex-chain",
  onomy: "onomy",
  osmosis: "osmosis",
  persistence: "persistence",
  quicksilver: "quicksilver",
  regen: "regen",
  secret: "secret",
  sentinel: "sentinel",
  sommelier: "sommelier",
  stafi: "stafi",
  stargaze: "stargaze",
  stride: "stride",
  teritori: "teritori",
  tgrade: "tgrade",
  umee: "umee",
  sei: "sei",
  mantra: "mantra",
  polkadot: "polkadot",
  kusama: "kusama",
  westend: "westend",
  binancebeacon: "binancebeacon",
  cardano: "cardano",
  near: "near",
  solana: "solana",
  tezos: "tezos",
  tron: "tron",
  ton: "ton",
  "ton-testnet": "ton-testnet"
};

// src/api/schemas/yieldV2YieldsRevenueOption.ts
var YieldV2YieldsRevenueOption = {
  supportsFee: "supportsFee",
  supportsRevShare: "supportsRevShare"
};

// src/api/schemas/yieldV2YieldsSortBy.ts
var YieldV2YieldsSortBy = {
  name: "name",
  nameAsc: "nameAsc",
  nameDesc: "nameDesc",
  relevantYieldType: "relevantYieldType",
  relevantYieldTypeAsc: "relevantYieldTypeAsc",
  relevantYieldTypeDesc: "relevantYieldTypeDesc",
  yieldType: "yieldType",
  yieldTypeAsc: "yieldTypeAsc",
  yieldTypeDesc: "yieldTypeDesc"
};

// src/api/schemas/yieldV2YieldsType.ts
var YieldV2YieldsType = {
  staking: "staking",
  "liquid-staking": "liquid-staking",
  lending: "lending",
  restaking: "restaking",
  vault: "vault"
};

// src/api/schemas/yieldYieldsRevenueOption.ts
var YieldYieldsRevenueOption = {
  supportsFee: "supportsFee",
  supportsRevShare: "supportsRevShare"
};

// src/api/schemas/yieldYieldsSortBy.ts
var YieldYieldsSortBy = {
  name: "name",
  nameAsc: "nameAsc",
  nameDesc: "nameDesc",
  relevantYieldType: "relevantYieldType",
  relevantYieldTypeAsc: "relevantYieldTypeAsc",
  relevantYieldTypeDesc: "relevantYieldTypeDesc",
  yieldType: "yieldType",
  yieldTypeAsc: "yieldTypeAsc",
  yieldTypeDesc: "yieldTypeDesc"
};

// src/api/schemas/yieldYieldsType.ts
var YieldYieldsType = {
  staking: "staking",
  "liquid-staking": "liquid-staking",
  lending: "lending",
  restaking: "restaking",
  vault: "vault"
};

export { ActionListSort, ActionListStatus, ActionListType, ActionStatus, ActionTypes, BalanceTypes, DailyCumulativeStakeDtoStatus, DailyCumulativeStakeDtoType, EvmEIP1559GasArgsDtoType, EvmLegacyGasArgsDtoType, EvmNetworks, FeeConfigurationStatus, GasMode, GeolocationErrorTagsItem, GeolocationErrorType, HealthStatus, KeyCategory, MasterBannedRegionDtoTagsItem, MasterBannedYieldDtoTagsItem, Networks, RewardClaiming, RewardSchedule, RewardTypes, Role, TeamCategory, TeamType, TransactionStatus, TransactionType, TronResourceType, ValidatorStatusTypes, WebhookSubscriptionEventDtoEvent, YieldGetMyYieldsSortBy, YieldGetMyYieldsType, YieldProviders, YieldType, YieldV2YieldsNetwork, YieldV2YieldsRevenueOption, YieldV2YieldsSortBy, YieldV2YieldsType, YieldYieldsRevenueOption, YieldYieldsSortBy, YieldYieldsType };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=chunk-IRWPDFN7.js.map