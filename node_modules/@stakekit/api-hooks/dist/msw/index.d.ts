import * as msw from 'msw';
import { H as HealthStatusDto, i as ActionDto, G as GasEstimateDto, j as ActionList200, c as TransactionDto, l as SubmitResponseDto, m as TransactionStatusResponseDto, n as GasForNetworkResponseDto, o as TransactionVerificationMessageDto, p as TokenWithAvailableYieldsDto, P as PriceResponseDto, q as BalanceResponseDto, r as TokenBalanceScanResponseDto, s as YieldYields200, u as YieldBalancesWithIntegrationIdDto, v as YieldGetMyYields200, V as ValidatorSearchResultDto, x as YieldDto, y as ValidatorDto, Y as YieldBalanceDto, z as YieldRewardsSummaryResponseDto, F as FeeConfigurationDto, D as YieldV2Yields200 } from '../yieldYields200-aQf46KDL.js';

declare const getHealthControllerHealthV2ResponseMock: (overrideResponse?: any) => HealthStatusDto;
declare const getActionControllerGetActionResponseMock: (overrideResponse?: any) => ActionDto;
declare const getActionControllerGetGasEstimateResponseMock: (overrideResponse?: any) => GasEstimateDto;
declare const getActionControllerEnterResponseMock: (overrideResponse?: any) => ActionDto;
declare const getActionControllerExitResponseMock: (overrideResponse?: any) => ActionDto;
declare const getActionControllerPendingResponseMock: (overrideResponse?: any) => ActionDto;
declare const getActionControllerEnterGasEstimationResponseMock: (overrideResponse?: any) => GasEstimateDto;
declare const getActionControllerExitGasEstimateResponseMock: (overrideResponse?: any) => GasEstimateDto;
declare const getActionControllerListResponseMock: (overrideResponse?: any) => ActionList200;
declare const getActionControllerPendingGasEstimateResponseMock: (overrideResponse?: any) => GasEstimateDto;
declare const getTransactionControllerGetTransactionResponseMock: (overrideResponse?: any) => TransactionDto;
declare const getTransactionControllerConstructResponseMock: (overrideResponse?: any) => TransactionDto;
declare const getTransactionControllerSubmitResponseMock: (overrideResponse?: any) => SubmitResponseDto;
declare const getTransactionControllerGetTransactionStatusFromIdResponseMock: (overrideResponse?: any) => TransactionStatusResponseDto;
declare const getTransactionControllerGetGasForNetworkResponseMock: (overrideResponse?: any) => GasForNetworkResponseDto;
declare const getTransactionControllerGetTransactionStatusByNetworkAndHashResponseMock: (overrideResponse?: any) => TransactionStatusResponseDto;
declare const getTransactionControllerGetTransactionVerificationMessageForNetworkResponseMock: (overrideResponse?: any) => TransactionVerificationMessageDto;
declare const getTokenControllerGetTokensResponseMock: (overrideResponse?: any) => TokenWithAvailableYieldsDto[];
declare const getTokenControllerGetTokenPricesResponseMock: (overrideResponse?: any) => PriceResponseDto;
declare const getTokenControllerGetTokenBalancesResponseMock: (overrideResponse?: any) => BalanceResponseDto[];
declare const getTokenControllerTokenBalancesScanResponseMock: (overrideResponse?: any) => TokenBalanceScanResponseDto[];
declare const getYieldControllerYieldsResponseMock: (overrideResponse?: any) => YieldYields200;
declare const getYieldControllerGetMultipleYieldBalancesResponseMock: (overrideResponse?: any) => YieldBalancesWithIntegrationIdDto[];
declare const getYieldControllerYieldBalancesScanResponseMock: (overrideResponse?: any) => YieldBalancesWithIntegrationIdDto[];
declare const getYieldControllerYieldBalancesScanEvmResponseMock: (overrideResponse?: any) => YieldBalancesWithIntegrationIdDto[];
declare const getYieldControllerGetMyYieldsResponseMock: (overrideResponse?: any) => YieldGetMyYields200;
declare const getYieldControllerFindValidatorsResponseMock: (overrideResponse?: any) => ValidatorSearchResultDto[];
declare const getYieldControllerYieldOpportunityResponseMock: (overrideResponse?: any) => YieldDto;
declare const getYieldControllerGetValidatorsResponseMock: (overrideResponse?: any) => ValidatorDto[];
declare const getYieldControllerGetSingleYieldBalancesResponseMock: (overrideResponse?: any) => YieldBalanceDto[];
declare const getYieldControllerGetSingleYieldRewardsSummaryResponseMock: (overrideResponse?: any) => YieldRewardsSummaryResponseDto[];
declare const getYieldControllerGetFeeConfigurationResponseMock: (overrideResponse?: any) => FeeConfigurationDto;
declare const getYieldV2ControllerYieldsResponseMock: (overrideResponse?: any) => YieldV2Yields200;
declare const getYieldV2ControllerGetYieldByIdResponseMock: (overrideResponse?: any) => YieldDto;
declare const getYieldV2ControllerFindYieldValidatorsResponseMock: (overrideResponse?: any) => ValidatorSearchResultDto[];
declare const getYieldV2ControllerFindValidatorsResponseMock: (overrideResponse?: any) => ValidatorSearchResultDto[];
declare const getHealthControllerHealthV2MockHandler: (overrideResponse?: HealthStatusDto) => msw.HttpHandler;
declare const getActionControllerGetActionMockHandler: (overrideResponse?: ActionDto) => msw.HttpHandler;
declare const getActionControllerGetGasEstimateMockHandler: (overrideResponse?: GasEstimateDto) => msw.HttpHandler;
declare const getActionControllerEnterMockHandler: (overrideResponse?: ActionDto) => msw.HttpHandler;
declare const getActionControllerExitMockHandler: (overrideResponse?: ActionDto) => msw.HttpHandler;
declare const getActionControllerPendingMockHandler: (overrideResponse?: ActionDto) => msw.HttpHandler;
declare const getActionControllerEnterGasEstimationMockHandler: (overrideResponse?: GasEstimateDto) => msw.HttpHandler;
declare const getActionControllerExitGasEstimateMockHandler: (overrideResponse?: GasEstimateDto) => msw.HttpHandler;
declare const getActionControllerListMockHandler: (overrideResponse?: ActionList200) => msw.HttpHandler;
declare const getActionControllerPendingGasEstimateMockHandler: (overrideResponse?: GasEstimateDto) => msw.HttpHandler;
declare const getTransactionControllerGetTransactionMockHandler: (overrideResponse?: TransactionDto) => msw.HttpHandler;
declare const getTransactionControllerConstructMockHandler: (overrideResponse?: TransactionDto) => msw.HttpHandler;
declare const getTransactionControllerSubmitMockHandler: (overrideResponse?: SubmitResponseDto) => msw.HttpHandler;
declare const getTransactionControllerSubmitHashMockHandler: () => msw.HttpHandler;
declare const getTransactionControllerGetTransactionStatusFromIdMockHandler: (overrideResponse?: TransactionStatusResponseDto) => msw.HttpHandler;
declare const getTransactionControllerGetGasForNetworkMockHandler: (overrideResponse?: GasForNetworkResponseDto) => msw.HttpHandler;
declare const getTransactionControllerGetTransactionStatusByNetworkAndHashMockHandler: (overrideResponse?: TransactionStatusResponseDto) => msw.HttpHandler;
declare const getTransactionControllerGetTransactionVerificationMessageForNetworkMockHandler: (overrideResponse?: TransactionVerificationMessageDto) => msw.HttpHandler;
declare const getTokenControllerGetTokensMockHandler: (overrideResponse?: TokenWithAvailableYieldsDto[]) => msw.HttpHandler;
declare const getTokenControllerGetTokenPricesMockHandler: (overrideResponse?: PriceResponseDto) => msw.HttpHandler;
declare const getTokenControllerGetTokenBalancesMockHandler: (overrideResponse?: BalanceResponseDto[]) => msw.HttpHandler;
declare const getTokenControllerTokenBalancesScanMockHandler: (overrideResponse?: TokenBalanceScanResponseDto[]) => msw.HttpHandler;
declare const getYieldControllerYieldsMockHandler: (overrideResponse?: YieldYields200) => msw.HttpHandler;
declare const getYieldControllerGetMultipleYieldBalancesMockHandler: (overrideResponse?: YieldBalancesWithIntegrationIdDto[]) => msw.HttpHandler;
declare const getYieldControllerYieldBalancesScanMockHandler: (overrideResponse?: YieldBalancesWithIntegrationIdDto[]) => msw.HttpHandler;
declare const getYieldControllerYieldBalancesScanEvmMockHandler: (overrideResponse?: YieldBalancesWithIntegrationIdDto[]) => msw.HttpHandler;
declare const getYieldControllerGetMyYieldsMockHandler: (overrideResponse?: YieldGetMyYields200) => msw.HttpHandler;
declare const getYieldControllerGetMyNetworksMockHandler: () => msw.HttpHandler;
declare const getYieldControllerFindValidatorsMockHandler: (overrideResponse?: ValidatorSearchResultDto[]) => msw.HttpHandler;
declare const getYieldControllerYieldOpportunityMockHandler: (overrideResponse?: YieldDto) => msw.HttpHandler;
declare const getYieldControllerGetValidatorsMockHandler: (overrideResponse?: ValidatorDto[]) => msw.HttpHandler;
declare const getYieldControllerGetSingleYieldBalancesMockHandler: (overrideResponse?: YieldBalanceDto[]) => msw.HttpHandler;
declare const getYieldControllerGetSingleYieldRewardsSummaryMockHandler: (overrideResponse?: YieldRewardsSummaryResponseDto[]) => msw.HttpHandler;
declare const getYieldControllerGetFeeConfigurationMockHandler: (overrideResponse?: FeeConfigurationDto) => msw.HttpHandler;
declare const getYieldV2ControllerYieldsMockHandler: (overrideResponse?: YieldV2Yields200) => msw.HttpHandler;
declare const getYieldV2ControllerGetYieldByIdMockHandler: (overrideResponse?: YieldDto) => msw.HttpHandler;
declare const getYieldV2ControllerFindYieldValidatorsMockHandler: (overrideResponse?: ValidatorSearchResultDto[]) => msw.HttpHandler;
declare const getYieldV2ControllerFindValidatorsMockHandler: (overrideResponse?: ValidatorSearchResultDto[]) => msw.HttpHandler;
declare const getStakeKitMock: () => msw.HttpHandler[];

export { getActionControllerEnterGasEstimationMockHandler, getActionControllerEnterGasEstimationResponseMock, getActionControllerEnterMockHandler, getActionControllerEnterResponseMock, getActionControllerExitGasEstimateMockHandler, getActionControllerExitGasEstimateResponseMock, getActionControllerExitMockHandler, getActionControllerExitResponseMock, getActionControllerGetActionMockHandler, getActionControllerGetActionResponseMock, getActionControllerGetGasEstimateMockHandler, getActionControllerGetGasEstimateResponseMock, getActionControllerListMockHandler, getActionControllerListResponseMock, getActionControllerPendingGasEstimateMockHandler, getActionControllerPendingGasEstimateResponseMock, getActionControllerPendingMockHandler, getActionControllerPendingResponseMock, getHealthControllerHealthV2MockHandler, getHealthControllerHealthV2ResponseMock, getStakeKitMock, getTokenControllerGetTokenBalancesMockHandler, getTokenControllerGetTokenBalancesResponseMock, getTokenControllerGetTokenPricesMockHandler, getTokenControllerGetTokenPricesResponseMock, getTokenControllerGetTokensMockHandler, getTokenControllerGetTokensResponseMock, getTokenControllerTokenBalancesScanMockHandler, getTokenControllerTokenBalancesScanResponseMock, getTransactionControllerConstructMockHandler, getTransactionControllerConstructResponseMock, getTransactionControllerGetGasForNetworkMockHandler, getTransactionControllerGetGasForNetworkResponseMock, getTransactionControllerGetTransactionMockHandler, getTransactionControllerGetTransactionResponseMock, getTransactionControllerGetTransactionStatusByNetworkAndHashMockHandler, getTransactionControllerGetTransactionStatusByNetworkAndHashResponseMock, getTransactionControllerGetTransactionStatusFromIdMockHandler, getTransactionControllerGetTransactionStatusFromIdResponseMock, getTransactionControllerGetTransactionVerificationMessageForNetworkMockHandler, getTransactionControllerGetTransactionVerificationMessageForNetworkResponseMock, getTransactionControllerSubmitHashMockHandler, getTransactionControllerSubmitMockHandler, getTransactionControllerSubmitResponseMock, getYieldControllerFindValidatorsMockHandler, getYieldControllerFindValidatorsResponseMock, getYieldControllerGetFeeConfigurationMockHandler, getYieldControllerGetFeeConfigurationResponseMock, getYieldControllerGetMultipleYieldBalancesMockHandler, getYieldControllerGetMultipleYieldBalancesResponseMock, getYieldControllerGetMyNetworksMockHandler, getYieldControllerGetMyYieldsMockHandler, getYieldControllerGetMyYieldsResponseMock, getYieldControllerGetSingleYieldBalancesMockHandler, getYieldControllerGetSingleYieldBalancesResponseMock, getYieldControllerGetSingleYieldRewardsSummaryMockHandler, getYieldControllerGetSingleYieldRewardsSummaryResponseMock, getYieldControllerGetValidatorsMockHandler, getYieldControllerGetValidatorsResponseMock, getYieldControllerYieldBalancesScanEvmMockHandler, getYieldControllerYieldBalancesScanEvmResponseMock, getYieldControllerYieldBalancesScanMockHandler, getYieldControllerYieldBalancesScanResponseMock, getYieldControllerYieldOpportunityMockHandler, getYieldControllerYieldOpportunityResponseMock, getYieldControllerYieldsMockHandler, getYieldControllerYieldsResponseMock, getYieldV2ControllerFindValidatorsMockHandler, getYieldV2ControllerFindValidatorsResponseMock, getYieldV2ControllerFindYieldValidatorsMockHandler, getYieldV2ControllerFindYieldValidatorsResponseMock, getYieldV2ControllerGetYieldByIdMockHandler, getYieldV2ControllerGetYieldByIdResponseMock, getYieldV2ControllerYieldsMockHandler, getYieldV2ControllerYieldsResponseMock };
